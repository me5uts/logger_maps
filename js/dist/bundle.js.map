{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ulogger-server/webpack/runtime/load script","webpack://ulogger-server/./node_modules/chartist-plugin-axistitle/dist/chartist-plugin-axistitle.js","webpack://ulogger-server/./node_modules/chartist/dist/index.cjs","webpack://ulogger-server/webpack/bootstrap","webpack://ulogger-server/webpack/runtime/compat get default export","webpack://ulogger-server/webpack/runtime/define property getters","webpack://ulogger-server/webpack/runtime/ensure chunk","webpack://ulogger-server/webpack/runtime/get javascript chunk filename","webpack://ulogger-server/webpack/runtime/hasOwnProperty shorthand","webpack://ulogger-server/webpack/runtime/make namespace object","webpack://ulogger-server/webpack/runtime/publicPath","webpack://ulogger-server/webpack/runtime/jsonp chunk loading","webpack://ulogger-server/./js/src/ajax.js","webpack://ulogger-server/./js/src/observe.js","webpack://ulogger-server/./js/src/select.js","webpack://ulogger-server/./js/src/listitem.js","webpack://ulogger-server/./js/src/utils.js","webpack://ulogger-server/./js/src/position.js","webpack://ulogger-server/./js/src/positionset.js","webpack://ulogger-server/./js/src/track.js","webpack://ulogger-server/./js/src/user.js","webpack://ulogger-server/./js/src/auth.js","webpack://ulogger-server/./js/src/layer.js","webpack://ulogger-server/./js/src/layercollection.js","webpack://ulogger-server/./js/src/config.js","webpack://ulogger-server/./js/src/lang.js","webpack://ulogger-server/./js/src/initializer.js","webpack://ulogger-server/../src/core/constants.ts","webpack://ulogger-server/../src/core/lang.ts","webpack://ulogger-server/../src/core/math.ts","webpack://ulogger-server/../src/core/data/bounds.ts","webpack://ulogger-server/../src/utils/extend.ts","webpack://ulogger-server/../src/utils/functional.ts","webpack://ulogger-server/../src/utils/utils.ts","webpack://ulogger-server/../src/core/data/data.ts","webpack://ulogger-server/../src/core/data/highLow.ts","webpack://ulogger-server/../src/core/data/normalize.ts","webpack://ulogger-server/../src/core/data/segments.ts","webpack://ulogger-server/../src/core/data/serialize.ts","webpack://ulogger-server/../src/svg/SvgList.ts","webpack://ulogger-server/../src/svg/animation.ts","webpack://ulogger-server/../src/svg/Svg.ts","webpack://ulogger-server/../src/core/creation.ts","webpack://ulogger-server/../src/core/optionsProvider.ts","webpack://ulogger-server/../src/svg/SvgPath.ts","webpack://ulogger-server/../src/interpolation/none.ts","webpack://ulogger-server/../src/interpolation/monotoneCubic.ts","webpack://ulogger-server/../src/event/EventEmitter.ts","webpack://ulogger-server/../src/charts/BaseChart.ts","webpack://ulogger-server/../src/axes/Axis.ts","webpack://ulogger-server/../src/axes/AutoScaleAxis.ts","webpack://ulogger-server/../src/axes/StepAxis.ts","webpack://ulogger-server/../src/charts/LineChart/LineChart.ts","webpack://ulogger-server/./js/src/viewmodel.js","webpack://ulogger-server/./js/src/chartviewmodel.js","webpack://ulogger-server/./js/src/alert.js","webpack://ulogger-server/./js/src/dialog.js","webpack://ulogger-server/./js/src/configdialogmodel.js","webpack://ulogger-server/./js/src/configviewmodel.js","webpack://ulogger-server/./js/src/mainviewmodel.js","webpack://ulogger-server/./js/src/mapapi/api_gmaps.js","webpack://ulogger-server/./js/src/mapapi/api_openlayers.js","webpack://ulogger-server/./js/src/positiondialogmodel.js","webpack://ulogger-server/./js/src/mapviewmodel.js","webpack://ulogger-server/./js/src/trackdialogmodel.js","webpack://ulogger-server/./js/src/trackviewmodel.js","webpack://ulogger-server/./js/src/userdialogmodel.js","webpack://ulogger-server/./js/src/userviewmodel.js","webpack://ulogger-server/./js/src/permalink.js","webpack://ulogger-server/./js/src/spinner.js","webpack://ulogger-server/./js/src/state.js","webpack://ulogger-server/./js/src/ulogger.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"ulogger-server:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.ctAxisTitle'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin to display a title for 1 or 2 axes.\n   * version 0.0.7\n   * author: alex stanbury\n   */\n  /* global Chartist */\n  (function(Chartist) {\n    \"use strict\";\n\n    var axisDefaults = {\n      axisTitle: \"\",\n      axisClass: \"ct-axis-title\",\n      offset: {\n        x: 0,\n        y: 0\n      },\n      textAnchor: \"middle\",\n      flipTitle: false\n    };\n\n    var defaultOptions = {\n      axisX: axisDefaults,\n      axisY: axisDefaults\n    };\n\n    var getTitle = function(title) {\n      if (title instanceof Function) {\n        return title();\n      }\n      return title;\n    };\n\n    var getClasses = function(classes) {\n      if (classes instanceof Function) {\n        return classes();\n      }\n      return classes;\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.ctAxisTitle = function(options) {\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function ctAxisTitle(chart) {\n        chart.on(\"created\", function(data) {\n          if (!options.axisX.axisTitle && !options.axisY.axisTitle) {\n            throw new Error(\n              \"ctAxisTitle plugin - You must provide at least one axis title\"\n            );\n          } else if (!data.axisX && !data.axisY) {\n            throw new Error(\n              \"ctAxisTitle plugin can only be used on charts that have at least one axis\"\n            );\n          }\n\n          var xPos,\n            yPos,\n            title,\n            chartPadding = Chartist.normalizePadding(data.options.chartPadding); // normalize the padding in case the full padding object was not passed into the options\n\n          //position axis X title\n          if (options.axisX.axisTitle && data.axisX) {\n            xPos =\n              data.axisX.axisLength / 2 +\n              data.options.axisY.offset +\n              chartPadding.left;\n\n            yPos = chartPadding.top;\n\n            if (data.options.axisY.position === \"end\") {\n              xPos -= data.options.axisY.offset;\n            }\n\n            if (data.options.axisX.position === \"end\") {\n              yPos += data.axisY.axisLength;\n            }\n\n            title = new Chartist.Svg(\"text\");\n            title.addClass(getClasses(options.axisX.axisClass));\n            title.text(getTitle(options.axisX.axisTitle));\n            title.attr({\n              x: xPos + options.axisX.offset.x,\n              y: yPos + options.axisX.offset.y,\n              \"text-anchor\": options.axisX.textAnchor\n            });\n\n            data.svg.append(title, true);\n          }\n\n          //position axis Y title\n          if (options.axisY.axisTitle && data.axisY) {\n            xPos = 0;\n\n            yPos = data.axisY.axisLength / 2 + chartPadding.top;\n\n            if (data.options.axisX.position === \"start\") {\n              yPos += data.options.axisX.offset;\n            }\n\n            if (data.options.axisY.position === \"end\") {\n              xPos = data.axisX.axisLength;\n            }\n\n            var transform =\n              \"rotate(\" +\n              (options.axisY.flipTitle ? -90 : 90) +\n              \", \" +\n              xPos +\n              \", \" +\n              yPos +\n              \")\";\n\n            title = new Chartist.Svg(\"text\");\n            title.addClass(getClasses(options.axisY.axisClass));\n            title.text(getTitle(options.axisY.axisTitle));\n            title.attr({\n              x: xPos + options.axisY.offset.x,\n              y: yPos + options.axisY.offset.y,\n              transform: transform,\n              \"text-anchor\": options.axisY.textAnchor\n            });\n            data.svg.append(title, true);\n          }\n        });\n      };\n    };\n  })(Chartist);\n\n  return Chartist.plugins.ctAxisTitle;\n\n}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * This object contains all namespaces used within Chartist.\n */ const namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    ct: \"http://gionkunz.github.com/chartist-js/ct\"\n};\n/**\n * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n */ const precision = 8;\n/**\n * A map with characters to escape for strings to be safely used as attribute values.\n */ const escapingMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#039;\"\n};\n\n/**\n * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n * @return Returns the passed number value with unit.\n */ function ensureUnit(value, unit) {\n    if (typeof value === \"number\") {\n        return value + unit;\n    }\n    return value;\n}\n/**\n * Converts a number or string to a quantity object.\n * @return Returns an object containing the value as number and the unit as string.\n */ function quantity(input) {\n    if (typeof input === \"string\") {\n        const match = /^(\\d+)\\s*(.*)$/g.exec(input);\n        return {\n            value: match ? +match[1] : 0,\n            unit: (match === null || match === void 0 ? void 0 : match[2]) || undefined\n        };\n    }\n    return {\n        value: Number(input)\n    };\n}\n/**\n * Generates a-z from a number 0 to 26\n * @param n A number from 0 to 26 that will result in a letter a-z\n * @return A character from a-z based on the input number n\n */ function alphaNumerate(n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n}\n\nconst EPSILON = 2.221e-16;\n/**\n * Calculate the order of magnitude for the chart scale\n * @param value The value Range of the chart\n * @return The order of magnitude\n */ function orderOfMagnitude(value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n}\n/**\n * Project a data length into screen coordinates (pixels)\n * @param axisLength The svg element for the chart\n * @param length Single data value from a series array\n * @param bounds All the values to set the bounds of the chart\n * @return The projected data length in pixels\n */ function projectLength(axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n}\n/**\n * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n * @param value The value that should be rounded with precision\n * @param [digits] The number of digits after decimal used to do the rounding\n * @returns Rounded value\n */ function roundWithPrecision(value, digits) {\n    const precision$1 = Math.pow(10, digits || precision);\n    return Math.round(value * precision$1) / precision$1;\n}\n/**\n * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n * @param num An integer number where the smallest factor should be searched for\n * @returns The smallest integer factor of the parameter num.\n */ function rho(num) {\n    if (num === 1) {\n        return num;\n    }\n    function gcd(p, q) {\n        if (p % q === 0) {\n            return q;\n        } else {\n            return gcd(q, p % q);\n        }\n    }\n    function f(x) {\n        return x * x + 1;\n    }\n    let x1 = 2;\n    let x2 = 2;\n    let divisor;\n    if (num % 2 === 0) {\n        return 2;\n    }\n    do {\n        x1 = f(x1) % num;\n        x2 = f(f(x2)) % num;\n        divisor = gcd(Math.abs(x1 - x2), num);\n    }while (divisor === 1);\n    return divisor;\n}\n/**\n * Calculate cartesian coordinates of polar coordinates\n * @param centerX X-axis coordinates of center point of circle segment\n * @param centerY X-axis coordinates of center point of circle segment\n * @param radius Radius of circle segment\n * @param angleInDegrees Angle of circle segment in degrees\n * @return Coordinates of point on circumference\n */ function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians)\n    };\n}\n\n/**\n * Calculate and retrieve all the bounds for the chart and return them in one array\n * @param axisLength The length of the Axis used for\n * @param highLow An object containing a high and low property indicating the value range of the chart.\n * @param scaleMinSpace The minimum projected length a step should result in\n * @param onlyInteger\n * @return All the values to set the bounds of the chart\n */ function getBounds(axisLength, highLow, scaleMinSpace) {\n    let onlyInteger = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n    const bounds = {\n        high: highLow.high,\n        low: highLow.low,\n        valueRange: 0,\n        oom: 0,\n        step: 0,\n        min: 0,\n        max: 0,\n        range: 0,\n        numberOfSteps: 0,\n        values: []\n    };\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    const length = projectLength(axisLength, bounds.step, bounds);\n    const scaleUp = length < scaleMinSpace;\n    const smallestFactor = onlyInteger ? rho(bounds.range) : 0;\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if (onlyInteger && projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n        bounds.step = 1;\n    } else if (onlyInteger && smallestFactor < bounds.step && projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n        // If step 1 was too small, we can try the smallest factor of range\n        // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n        // is larger than the scaleMinSpace we should go for it.\n        bounds.step = smallestFactor;\n    } else {\n        // Trying to divide or multiply by 2 and find the best step value\n        let optimizationCounter = 0;\n        for(;;){\n            if (scaleUp && projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n                bounds.step *= 2;\n            } else if (!scaleUp && projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n                bounds.step /= 2;\n                if (onlyInteger && bounds.step % 1 !== 0) {\n                    bounds.step *= 2;\n                    break;\n                }\n            } else {\n                break;\n            }\n            if (optimizationCounter++ > 1000) {\n                throw new Error(\"Exceeded maximum number of iterations while optimizing scale step!\");\n            }\n        }\n    }\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n        // If increment is too small use *= (1+EPSILON) as a simple nextafter\n        if (value === (value += increment)) {\n            value *= 1 + (increment > 0 ? EPSILON : -EPSILON);\n        }\n        return value;\n    }\n    // Narrow min and max based on new step\n    let newMin = bounds.min;\n    let newMax = bounds.max;\n    while(newMin + bounds.step <= bounds.low){\n        newMin = safeIncrement(newMin, bounds.step);\n    }\n    while(newMax - bounds.step >= bounds.high){\n        newMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n    const values = [];\n    for(let i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)){\n        const value = roundWithPrecision(i);\n        if (value !== values[values.length - 1]) {\n            values.push(value);\n        }\n    }\n    bounds.values = values;\n    return bounds;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extend() {\n    let target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        sources[_key - 1] = arguments[_key];\n    }\n    for(let i = 0; i < sources.length; i++){\n        const source = sources[i];\n        for(const prop in source){\n            const sourceProp = source[prop];\n            if (typeof sourceProp === \"object\" && sourceProp !== null && !(sourceProp instanceof Array)) {\n                target[prop] = extend(target[prop], sourceProp);\n            } else {\n                target[prop] = sourceProp;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * Helps to simplify functional style code\n * @param n This exact value will be returned by the noop function\n * @return The same value that was provided to the n parameter\n */ const noop = (n)=>n\n;\nfunction times(length, filler) {\n    return Array.from({\n        length\n    }, filler ? (_, i)=>filler(i)\n     : ()=>void 0\n    );\n}\n/**\n * Sum helper to be used in reduce functions\n */ const sum = (previous, current)=>previous + (current ? current : 0)\n;\n/**\n * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n *\n * For example:\n * @example\n * ```ts\n * const data = [[1, 2], [3], []];\n * serialMap(data, cb);\n *\n * // where cb will be called 2 times\n * // 1. call arguments: (1, 3, undefined)\n * // 2. call arguments: (2, undefined, undefined)\n * ```\n */ const serialMap = (array, callback)=>times(Math.max(...array.map((element)=>element.length\n    )), (index)=>callback(...array.map((element)=>element[index]\n        ))\n    )\n;\n\nfunction safeHasProperty(target, property) {\n    return target !== null && typeof target === \"object\" && Reflect.has(target, property);\n}\nfunction isNumeric(value) {\n    return value !== null && isFinite(value);\n}\n/**\n * Returns true on all falsey values except the numeric value 0.\n */ function isFalseyButZero(value) {\n    return !value && value !== 0;\n}\nfunction getNumberOrUndefined(value) {\n    return isNumeric(value) ? Number(value) : undefined;\n}\n/**\n * Checks if value is array of arrays or not.\n */ function isArrayOfArrays(data) {\n    if (!Array.isArray(data)) {\n        return false;\n    }\n    return data.every(Array.isArray);\n}\n/**\n * Loop over array.\n */ function each(list, callback) {\n    let reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    let index = 0;\n    list[reverse ? \"reduceRight\" : \"reduce\"]((_, item, itemIndex)=>callback(item, index++, itemIndex)\n    , void 0);\n}\n\n/**\n * Get meta data of a specific value in a series.\n */ function getMetaData(seriesData, index) {\n    const value = Array.isArray(seriesData) ? seriesData[index] : safeHasProperty(seriesData, \"data\") ? seriesData.data[index] : null;\n    return safeHasProperty(value, \"meta\") ? value.meta : undefined;\n}\nfunction isDataHoleValue(value) {\n    return value === null || value === undefined || typeof value === \"number\" && isNaN(value);\n}\n/**\n * Checks if value is array of series objects.\n */ function isArrayOfSeries(value) {\n    return Array.isArray(value) && value.every((_)=>Array.isArray(_) || safeHasProperty(_, \"data\")\n    );\n}\n/**\n * Checks if provided value object is multi value (contains x or y properties)\n */ function isMultiValue(value) {\n    return typeof value === \"object\" && value !== null && (Reflect.has(value, \"x\") || Reflect.has(value, \"y\"));\n}\n/**\n * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n */ function getMultiValue(value) {\n    let dimension = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"y\";\n    if (isMultiValue(value) && safeHasProperty(value, dimension)) {\n        return getNumberOrUndefined(value[dimension]);\n    } else {\n        return getNumberOrUndefined(value);\n    }\n}\n\n/**\n * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n * @param data The array that contains the data to be visualized in the chart\n * @param options The Object that contains the chart options\n * @param dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n * @return An object that contains the highest and lowest value that will be visualized on the chart.\n */ function getHighLow(data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = {\n        ...options,\n        ...dimension ? dimension === \"x\" ? options.axisX : options.axisY : {}\n    };\n    const highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n    };\n    const findHigh = options.high === undefined;\n    const findLow = options.low === undefined;\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(sourceData) {\n        if (isDataHoleValue(sourceData)) {\n            return;\n        } else if (Array.isArray(sourceData)) {\n            for(let i = 0; i < sourceData.length; i++){\n                recursiveHighLow(sourceData[i]);\n            }\n        } else {\n            const value = Number(dimension && safeHasProperty(sourceData, dimension) ? sourceData[dimension] : sourceData);\n            if (findHigh && value > highLow.high) {\n                highLow.high = value;\n            }\n            if (findLow && value < highLow.low) {\n                highLow.low = value;\n            }\n        }\n    }\n    // Start to find highest and lowest number recursively\n    if (findHigh || findLow) {\n        recursiveHighLow(data);\n    }\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n        highLow.high = Math.max(options.referenceValue, highLow.high);\n        highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n        // If both values are 0 we set high to 1\n        if (highLow.low === 0) {\n            highLow.high = 1;\n        } else if (highLow.low < 0) {\n            // If we have the same negative value for the bounds we set bounds.high to 0\n            highLow.high = 0;\n        } else if (highLow.high > 0) {\n            // If we have the same positive value for the bounds we set bounds.low to 0\n            highLow.low = 0;\n        } else {\n            // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n            highLow.high = 1;\n            highLow.low = 0;\n        }\n    }\n    return highLow;\n}\n\nfunction normalizeData(data) {\n    let reverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, multi = arguments.length > 2 ? arguments[2] : void 0, distributed = arguments.length > 3 ? arguments[3] : void 0;\n    let labelCount;\n    const normalized = {\n        labels: (data.labels || []).slice(),\n        series: normalizeSeries(data.series, multi, distributed)\n    };\n    const inputLabelCount = normalized.labels.length;\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (isArrayOfArrays(normalized.series)) {\n        // Getting the series with the the most elements\n        labelCount = Math.max(inputLabelCount, ...normalized.series.map((series)=>series.length\n        ));\n        normalized.series.forEach((series)=>{\n            series.push(...times(Math.max(0, labelCount - series.length)));\n        });\n    } else {\n        // We're dealing with Pie data so we just take the normalized array length\n        labelCount = normalized.series.length;\n    }\n    // Padding the labels to labelCount with empty strings\n    normalized.labels.push(...times(Math.max(0, labelCount - inputLabelCount), ()=>\"\"\n    ));\n    if (reverse) {\n        reverseData(normalized);\n    }\n    return normalized;\n}\n/**\n * Reverses the series, labels and series data arrays.\n */ function reverseData(data) {\n    var ref;\n    (ref = data.labels) === null || ref === void 0 ? void 0 : ref.reverse();\n    data.series.reverse();\n    for (const series of data.series){\n        if (safeHasProperty(series, \"data\")) {\n            series.data.reverse();\n        } else if (Array.isArray(series)) {\n            series.reverse();\n        }\n    }\n}\nfunction normalizeMulti(value, multi) {\n    // We need to prepare multi value output (x and y data)\n    let x;\n    let y;\n    // Single series value arrays are assumed to specify the Y-Axis value\n    // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n    // If multi is a string then it's assumed that it specified which dimension should be filled as default\n    if (typeof value !== \"object\") {\n        const num = getNumberOrUndefined(value);\n        if (multi === \"x\") {\n            x = num;\n        } else {\n            y = num;\n        }\n    } else {\n        if (safeHasProperty(value, \"x\")) {\n            x = getNumberOrUndefined(value.x);\n        }\n        if (safeHasProperty(value, \"y\")) {\n            y = getNumberOrUndefined(value.y);\n        }\n    }\n    if (x === undefined && y === undefined) {\n        return undefined;\n    }\n    return {\n        x,\n        y\n    };\n}\nfunction normalizePrimitive(value, multi) {\n    if (isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n    }\n    if (multi) {\n        return normalizeMulti(value, multi);\n    }\n    return getNumberOrUndefined(value);\n}\nfunction normalizeSingleSeries(series, multi) {\n    if (!Array.isArray(series)) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return normalizeSingleSeries(series.data, multi);\n    }\n    return series.map((value)=>{\n        if (safeHasProperty(value, \"value\")) {\n            // We are dealing with value object notation so we need to recurse on value property\n            return normalizePrimitive(value.value, multi);\n        }\n        return normalizePrimitive(value, multi);\n    });\n}\nfunction normalizeSeries(series, multi, distributed) {\n    if (isArrayOfSeries(series)) {\n        return series.map((_)=>normalizeSingleSeries(_, multi)\n        );\n    }\n    const normalizedSeries = normalizeSingleSeries(series, multi);\n    if (distributed) {\n        return normalizedSeries.map((value)=>[\n                value\n            ]\n        );\n    }\n    return normalizedSeries;\n}\n\n/**\n * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n * valueData property describing the segment.\n *\n * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n * points with undefined values are discarded.\n *\n * **Options**\n * The following options are used to determine how segments are formed\n * ```javascript\n * var options = {\n *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n *   fillHoles: false,\n *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n *   increasingX: false\n * };\n * ```\n *\n * @param pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n * @param valueData List of associated point values in the form [v1, v2 .. vn]\n * @param options Options set by user\n * @return List of segments, each containing a pathCoordinates and valueData property.\n */ function splitIntoSegments(pathCoordinates, valueData, options) {\n    const finalOptions = {\n        increasingX: false,\n        fillHoles: false,\n        ...options\n    };\n    const segments = [];\n    let hole = true;\n    for(let i = 0; i < pathCoordinates.length; i += 2){\n        // If this value is a \"hole\" we set the hole flag\n        if (getMultiValue(valueData[i / 2].value) === undefined) {\n            // if(valueData[i / 2].value === undefined) {\n            if (!finalOptions.fillHoles) {\n                hole = true;\n            }\n        } else {\n            if (finalOptions.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i - 2]) {\n                // X is not increasing, so we need to make sure we start a new segment\n                hole = true;\n            }\n            // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n            if (hole) {\n                segments.push({\n                    pathCoordinates: [],\n                    valueData: []\n                });\n                // As we have a valid value now, we are not in a \"hole\" anymore\n                hole = false;\n            }\n            // Add to the segment pathCoordinates and valueData\n            segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n            segments[segments.length - 1].valueData.push(valueData[i / 2]);\n        }\n    }\n    return segments;\n}\n\nfunction serialize(data) {\n    let serialized = \"\";\n    if (data === null || data === undefined) {\n        return data;\n    } else if (typeof data === \"number\") {\n        serialized = \"\" + data;\n    } else if (typeof data === \"object\") {\n        serialized = JSON.stringify({\n            data: data\n        });\n    } else {\n        serialized = String(data);\n    }\n    return Object.keys(escapingMap).reduce((result, key)=>result.replaceAll(key, escapingMap[key])\n    , serialized);\n}\nfunction deserialize(data) {\n    if (typeof data !== \"string\") {\n        return data;\n    }\n    if (data === \"NaN\") {\n        return NaN;\n    }\n    data = Object.keys(escapingMap).reduce((result, key)=>result.replaceAll(escapingMap[key], key)\n    , data);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let parsedData = data;\n    if (typeof data === \"string\") {\n        try {\n            parsedData = JSON.parse(data);\n            parsedData = parsedData.data !== undefined ? parsedData.data : parsedData;\n        } catch (e) {\n        /* Ingore */ }\n    }\n    return parsedData;\n}\n\n/**\n * This helper class is to wrap multiple `Svg` elements into a list where you can call the `Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Svg` on multiple elements.\n * An instance of this class is also returned by `Svg.querySelectorAll`.\n */ class SvgList {\n    call(method, args) {\n        this.svgElements.forEach((element)=>Reflect.apply(element[method], element, args)\n        );\n        return this;\n    }\n    attr() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"attr\", args);\n    }\n    elem() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"elem\", args);\n    }\n    root() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"root\", args);\n    }\n    getNode() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"getNode\", args);\n    }\n    foreignObject() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"foreignObject\", args);\n    }\n    text() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"text\", args);\n    }\n    empty() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"empty\", args);\n    }\n    remove() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"remove\", args);\n    }\n    addClass() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"addClass\", args);\n    }\n    removeClass() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"removeClass\", args);\n    }\n    removeAllClasses() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"removeAllClasses\", args);\n    }\n    animate() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return this.call(\"animate\", args);\n    }\n    /**\n   * @param nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   */ constructor(nodeList){\n        this.svgElements = [];\n        for(let i = 0; i < nodeList.length; i++){\n            this.svgElements.push(new Svg(nodeList[i]));\n        }\n    }\n}\n\n/**\n * This Object contains some standard easing cubic bezier curves.\n * Then can be used with their name in the `Svg.animate`.\n * You can also extend the list and use your own name in the `animate` function.\n * Click the show code button to see the available bezier functions.\n */ const easings = {\n    easeInSine: [\n        0.47,\n        0,\n        0.745,\n        0.715\n    ],\n    easeOutSine: [\n        0.39,\n        0.575,\n        0.565,\n        1\n    ],\n    easeInOutSine: [\n        0.445,\n        0.05,\n        0.55,\n        0.95\n    ],\n    easeInQuad: [\n        0.55,\n        0.085,\n        0.68,\n        0.53\n    ],\n    easeOutQuad: [\n        0.25,\n        0.46,\n        0.45,\n        0.94\n    ],\n    easeInOutQuad: [\n        0.455,\n        0.03,\n        0.515,\n        0.955\n    ],\n    easeInCubic: [\n        0.55,\n        0.055,\n        0.675,\n        0.19\n    ],\n    easeOutCubic: [\n        0.215,\n        0.61,\n        0.355,\n        1\n    ],\n    easeInOutCubic: [\n        0.645,\n        0.045,\n        0.355,\n        1\n    ],\n    easeInQuart: [\n        0.895,\n        0.03,\n        0.685,\n        0.22\n    ],\n    easeOutQuart: [\n        0.165,\n        0.84,\n        0.44,\n        1\n    ],\n    easeInOutQuart: [\n        0.77,\n        0,\n        0.175,\n        1\n    ],\n    easeInQuint: [\n        0.755,\n        0.05,\n        0.855,\n        0.06\n    ],\n    easeOutQuint: [\n        0.23,\n        1,\n        0.32,\n        1\n    ],\n    easeInOutQuint: [\n        0.86,\n        0,\n        0.07,\n        1\n    ],\n    easeInExpo: [\n        0.95,\n        0.05,\n        0.795,\n        0.035\n    ],\n    easeOutExpo: [\n        0.19,\n        1,\n        0.22,\n        1\n    ],\n    easeInOutExpo: [\n        1,\n        0,\n        0,\n        1\n    ],\n    easeInCirc: [\n        0.6,\n        0.04,\n        0.98,\n        0.335\n    ],\n    easeOutCirc: [\n        0.075,\n        0.82,\n        0.165,\n        1\n    ],\n    easeInOutCirc: [\n        0.785,\n        0.135,\n        0.15,\n        0.86\n    ],\n    easeInBack: [\n        0.6,\n        -0.28,\n        0.735,\n        0.045\n    ],\n    easeOutBack: [\n        0.175,\n        0.885,\n        0.32,\n        1.275\n    ],\n    easeInOutBack: [\n        0.68,\n        -0.55,\n        0.265,\n        1.55\n    ]\n};\nfunction createAnimation(element, attribute, animationDefinition) {\n    let createGuided = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, eventEmitter = arguments.length > 4 ? arguments[4] : void 0;\n    const { easing , ...def } = animationDefinition;\n    const attributeProperties = {};\n    let animationEasing;\n    let timeout;\n    // Check if an easing is specified in the definition object and delete it from the object as it will not\n    // be part of the animate element attributes.\n    if (easing) {\n        // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n        animationEasing = Array.isArray(easing) ? easing : easings[easing];\n    }\n    // If numeric dur or begin was provided we assume milli seconds\n    def.begin = ensureUnit(def.begin, \"ms\");\n    def.dur = ensureUnit(def.dur, \"ms\");\n    if (animationEasing) {\n        def.calcMode = \"spline\";\n        def.keySplines = animationEasing.join(\" \");\n        def.keyTimes = \"0;1\";\n    }\n    // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n    if (createGuided) {\n        def.fill = \"freeze\";\n        // Animated property on our element should already be set to the animation from value in guided mode\n        attributeProperties[attribute] = def.from;\n        element.attr(attributeProperties);\n        // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n        // which needs to be in ms aside\n        timeout = quantity(def.begin || 0).value;\n        def.begin = \"indefinite\";\n    }\n    const animate = element.elem(\"animate\", {\n        attributeName: attribute,\n        ...def\n    });\n    if (createGuided) {\n        // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n        setTimeout(()=>{\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occurred in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n                // @ts-expect-error Try legacy API.\n                animate._node.beginElement();\n            } catch (err) {\n                // Set animated attribute to current animated value\n                attributeProperties[attribute] = def.to;\n                element.attr(attributeProperties);\n                // Remove the animate element as it's no longer required\n                animate.remove();\n            }\n        }, timeout);\n    }\n    const animateNode = animate.getNode();\n    if (eventEmitter) {\n        animateNode.addEventListener(\"beginEvent\", ()=>eventEmitter.emit(\"animationBegin\", {\n                element: element,\n                animate: animateNode,\n                params: animationDefinition\n            })\n        );\n    }\n    animateNode.addEventListener(\"endEvent\", ()=>{\n        if (eventEmitter) {\n            eventEmitter.emit(\"animationEnd\", {\n                element: element,\n                animate: animateNode,\n                params: animationDefinition\n            });\n        }\n        if (createGuided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = def.to;\n            element.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n        }\n    });\n}\n\n/**\n * Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n */ class Svg {\n    attr(attributes, ns) {\n        if (typeof attributes === \"string\") {\n            if (ns) {\n                return this._node.getAttributeNS(ns, attributes);\n            } else {\n                return this._node.getAttribute(attributes);\n            }\n        }\n        Object.keys(attributes).forEach((key)=>{\n            // If the attribute value is undefined we can skip this one\n            if (attributes[key] === undefined) {\n                return;\n            }\n            if (key.indexOf(\":\") !== -1) {\n                const namespacedAttribute = key.split(\":\");\n                this._node.setAttributeNS(namespaces[namespacedAttribute[0]], key, String(attributes[key]));\n            } else {\n                this._node.setAttribute(key, String(attributes[key]));\n            }\n        });\n        return this;\n    }\n    /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   * @param name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return Returns a Svg wrapper object that can be used to modify the containing SVG data\n   */ elem(name, attributes, className) {\n        let insertFirst = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n        return new Svg(name, attributes, className, this, insertFirst);\n    }\n    /**\n   * Returns the parent Chartist.SVG wrapper object\n   * @return Returns a Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */ parent() {\n        return this._node.parentNode instanceof SVGElement ? new Svg(this._node.parentNode) : null;\n    }\n    /**\n   * This method returns a Svg wrapper around the root SVG element of the current tree.\n   * @return The root SVG element wrapped in a Svg element\n   */ root() {\n        let node = this._node;\n        while(node.nodeName !== \"svg\"){\n            if (node.parentElement) {\n                node = node.parentElement;\n            } else {\n                break;\n            }\n        }\n        return new Svg(node);\n    }\n    /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Svg wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper for the element found or null if no element was found\n   */ querySelector(selector) {\n        const foundNode = this._node.querySelector(selector);\n        return foundNode ? new Svg(foundNode) : null;\n    }\n    /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Svg.List wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper list for the element found or null if no element was found\n   */ querySelectorAll(selector) {\n        const foundNodes = this._node.querySelectorAll(selector);\n        return new SvgList(foundNodes);\n    }\n    /**\n   * Returns the underlying SVG node for the current element.\n   */ getNode() {\n        return this._node;\n    }\n    /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   * @param content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param attributes An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst Specifies if the foreignObject should be inserted as first child\n   * @return New wrapper object that wraps the foreignObject element\n   */ foreignObject(content, attributes, className) {\n        let insertFirst = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n        let contentNode;\n        // If content is string then we convert it to DOM\n        // TODO: Handle case where content is not a string nor a DOM Node\n        if (typeof content === \"string\") {\n            const container = document.createElement(\"div\");\n            container.innerHTML = content;\n            contentNode = container.firstChild;\n        } else {\n            contentNode = content;\n        }\n        if (contentNode instanceof Element) {\n            // Adding namespace to content element\n            contentNode.setAttribute(\"xmlns\", namespaces.xmlns);\n        }\n        // Creating the foreignObject without required extension attribute (as described here\n        // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n        const fnObj = this.elem(\"foreignObject\", attributes, className, insertFirst);\n        // Add content to foreignObjectElement\n        fnObj._node.appendChild(contentNode);\n        return fnObj;\n    }\n    /**\n   * This method adds a new text element to the current Svg wrapper.\n   * @param t The text that should be added to the text element that is created\n   * @return The same wrapper object that was used to add the newly created element\n   */ text(t) {\n        this._node.appendChild(document.createTextNode(t));\n        return this;\n    }\n    /**\n   * This method will clear all child nodes of the current wrapper object.\n   * @return The same wrapper object that got emptied\n   */ empty() {\n        while(this._node.firstChild){\n            this._node.removeChild(this._node.firstChild);\n        }\n        return this;\n    }\n    /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   * @return The parent wrapper object of the element that got removed\n   */ remove() {\n        var ref;\n        (ref = this._node.parentNode) === null || ref === void 0 ? void 0 : ref.removeChild(this._node);\n        return this.parent();\n    }\n    /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   * @param newElement The new Svg object that will be used to replace the current wrapper object\n   * @return The wrapper of the new element\n   */ replace(newElement) {\n        var ref;\n        (ref = this._node.parentNode) === null || ref === void 0 ? void 0 : ref.replaceChild(newElement._node, this._node);\n        return newElement;\n    }\n    /**\n   * This method will append an element to the current element as a child.\n   * @param element The Svg element that should be added as a child\n   * @param insertFirst Specifies if the element should be inserted as first child\n   * @return The wrapper of the appended object\n   */ append(element) {\n        let insertFirst = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (insertFirst && this._node.firstChild) {\n            this._node.insertBefore(element._node, this._node.firstChild);\n        } else {\n            this._node.appendChild(element._node);\n        }\n        return this;\n    }\n    /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   * @return A list of classes or an empty array if there are no classes on the current element\n   */ classes() {\n        const classNames = this._node.getAttribute(\"class\");\n        return classNames ? classNames.trim().split(/\\s+/) : [];\n    }\n    /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */ addClass(names) {\n        this._node.setAttribute(\"class\", this.classes().concat(names.trim().split(/\\s+/)).filter(function(elem, pos, self) {\n            return self.indexOf(elem) === pos;\n        }).join(\" \"));\n        return this;\n    }\n    /**\n   * Removes one or a space separated list of classes from the current element.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */ removeClass(names) {\n        const removedClasses = names.trim().split(/\\s+/);\n        this._node.setAttribute(\"class\", this.classes().filter((name)=>removedClasses.indexOf(name) === -1\n        ).join(\" \"));\n        return this;\n    }\n    /**\n   * Removes all classes from the current element.\n   * @return The wrapper of the current element\n   */ removeAllClasses() {\n        this._node.setAttribute(\"class\", \"\");\n        return this;\n    }\n    /**\n   * Get element height using `getBoundingClientRect`\n   * @return The elements height in pixels\n   */ height() {\n        return this._node.getBoundingClientRect().height;\n    }\n    /**\n   * Get element width using `getBoundingClientRect`\n   * @return The elements width in pixels\n   */ width() {\n        return this._node.getBoundingClientRect().width;\n    }\n    /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   * @param animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return The current element where the animation was added\n   */ animate(animations) {\n        let guided = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, eventEmitter = arguments.length > 2 ? arguments[2] : void 0;\n        Object.keys(animations).forEach((attribute)=>{\n            const attributeAnimation = animations[attribute];\n            // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n            if (Array.isArray(attributeAnimation)) {\n                attributeAnimation.forEach((animationDefinition)=>createAnimation(this, attribute, animationDefinition, false, eventEmitter)\n                );\n            } else {\n                createAnimation(this, attribute, attributeAnimation, guided, eventEmitter);\n            }\n        });\n        return this;\n    }\n    /**\n   * @param name The name of the SVG element to create or an SVG dom element which should be wrapped into Svg\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */ constructor(name, attributes, className, parent, insertFirst = false){\n        // If Svg is getting called with an SVG element we just return the wrapper\n        if (name instanceof Element) {\n            this._node = name;\n        } else {\n            this._node = document.createElementNS(namespaces.svg, name);\n            // If this is an SVG element created then custom namespace\n            if (name === \"svg\") {\n                this.attr({\n                    \"xmlns:ct\": namespaces.ct\n                });\n            }\n        }\n        if (attributes) {\n            this.attr(attributes);\n        }\n        if (className) {\n            this.addClass(className);\n        }\n        if (parent) {\n            if (insertFirst && parent._node.firstChild) {\n                parent._node.insertBefore(this._node, parent._node.firstChild);\n            } else {\n                parent._node.appendChild(this._node);\n            }\n        }\n    }\n}\n/**\n   * @todo Only there for chartist <1 compatibility. Remove after deprecation warining.\n   * @deprecated Use the animation module export `easings` directly.\n   */ Svg.Easing = easings;\n\n/**\n * Create or reinitialize the SVG element for the chart\n * @param container The containing DOM Node object that will be used to plant the SVG element\n * @param width Set the width of the SVG element. Default is 100%\n * @param height Set the height of the SVG element. Default is 100%\n * @param className Specify a class to be added to the SVG element\n * @return The created/reinitialized SVG element\n */ function createSvg(container) {\n    let width = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"100%\", height = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"100%\", className = arguments.length > 3 ? arguments[3] : void 0;\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.from(container.querySelectorAll(\"svg\")).filter((svg)=>svg.getAttributeNS(namespaces.xmlns, \"ct\")\n    ).forEach((svg)=>container.removeChild(svg)\n    );\n    // Create svg object with width and height or use 100% as default\n    const svg1 = new Svg(\"svg\").attr({\n        width,\n        height\n    }).attr({\n        // TODO: Check better solution (browser support) and remove inline styles due to CSP\n        style: \"width: \".concat(width, \"; height: \").concat(height, \";\")\n    });\n    if (className) {\n        svg1.addClass(className);\n    }\n    // Add the DOM node to our container\n    container.appendChild(svg1.getNode());\n    return svg1;\n}\n/**\n * Converts a number into a padding object.\n * @param padding\n * @param fallback This value is used to fill missing values if a incomplete padding object was passed\n * @returns Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n */ function normalizePadding(padding) {\n    return typeof padding === \"number\" ? {\n        top: padding,\n        right: padding,\n        bottom: padding,\n        left: padding\n    } : padding === undefined ? {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    } : {\n        top: typeof padding.top === \"number\" ? padding.top : 0,\n        right: typeof padding.right === \"number\" ? padding.right : 0,\n        bottom: typeof padding.bottom === \"number\" ? padding.bottom : 0,\n        left: typeof padding.left === \"number\" ? padding.left : 0\n    };\n}\n/**\n * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n * @param svg The svg element for the chart\n * @param options The Object that contains all the optional values for the chart\n * @return The chart rectangles coordinates inside the svg element plus the rectangles measurements\n */ function createChartRect(svg, options) {\n    var ref, ref1, ref2, ref3;\n    const hasAxis = Boolean(options.axisX || options.axisY);\n    const yAxisOffset = ((ref = options.axisY) === null || ref === void 0 ? void 0 : ref.offset) || 0;\n    const xAxisOffset = ((ref1 = options.axisX) === null || ref1 === void 0 ? void 0 : ref1.offset) || 0;\n    const yAxisPosition = (ref2 = options.axisY) === null || ref2 === void 0 ? void 0 : ref2.position;\n    const xAxisPosition = (ref3 = options.axisX) === null || ref3 === void 0 ? void 0 : ref3.position;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    let width = svg.width() || quantity(options.width).value || 0;\n    let height = svg.height() || quantity(options.height).value || 0;\n    const normalizedPadding = normalizePadding(options.chartPadding);\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n    const chartRect = {\n        x1: 0,\n        x2: 0,\n        y1: 0,\n        y2: 0,\n        padding: normalizedPadding,\n        width () {\n            return this.x2 - this.x1;\n        },\n        height () {\n            return this.y1 - this.y2;\n        }\n    };\n    if (hasAxis) {\n        if (xAxisPosition === \"start\") {\n            chartRect.y2 = normalizedPadding.top + xAxisOffset;\n            chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n        } else {\n            chartRect.y2 = normalizedPadding.top;\n            chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n        }\n        if (yAxisPosition === \"start\") {\n            chartRect.x1 = normalizedPadding.left + yAxisOffset;\n            chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n        } else {\n            chartRect.x1 = normalizedPadding.left;\n            chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n        }\n    } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n    return chartRect;\n}\n/**\n * Creates a grid line based on a projected value.\n */ function createGrid(position, index, axis, offset, length, group, classes, eventEmitter) {\n    const positionalData = {\n        [\"\".concat(axis.units.pos, \"1\")]: position,\n        [\"\".concat(axis.units.pos, \"2\")]: position,\n        [\"\".concat(axis.counterUnits.pos, \"1\")]: offset,\n        [\"\".concat(axis.counterUnits.pos, \"2\")]: offset + length\n    };\n    const gridElement = group.elem(\"line\", positionalData, classes.join(\" \"));\n    // Event for grid draw\n    eventEmitter.emit(\"draw\", {\n        type: \"grid\",\n        axis,\n        index,\n        group,\n        element: gridElement,\n        ...positionalData\n    });\n}\n/**\n * Creates a grid background rect and emits the draw event.\n */ function createGridBackground(gridGroup, chartRect, className, eventEmitter) {\n    const gridBackground = gridGroup.elem(\"rect\", {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height()\n    }, className, true);\n    // Event for grid background draw\n    eventEmitter.emit(\"draw\", {\n        type: \"gridBackground\",\n        group: gridGroup,\n        element: gridBackground\n    });\n}\n/**\n * Creates a label based on a projected value and an axis.\n */ function createLabel(position, length, index, label, axis, axisOffset, labelOffset, group, classes, eventEmitter) {\n    const positionalData = {\n        [axis.units.pos]: position + labelOffset[axis.units.pos],\n        [axis.counterUnits.pos]: labelOffset[axis.counterUnits.pos],\n        [axis.units.len]: length,\n        [axis.counterUnits.len]: Math.max(0, axisOffset - 10)\n    };\n    // We need to set width and height explicitly to px as span will not expand with width and height being\n    // 100% in all browsers\n    const stepLength = Math.round(positionalData[axis.units.len]);\n    const stepCounterLength = Math.round(positionalData[axis.counterUnits.len]);\n    const content = document.createElement(\"span\");\n    content.className = classes.join(\" \");\n    content.style[axis.units.len] = stepLength + \"px\";\n    content.style[axis.counterUnits.len] = stepCounterLength + \"px\";\n    content.textContent = String(label);\n    const labelElement = group.foreignObject(content, {\n        style: \"overflow: visible;\",\n        ...positionalData\n    });\n    eventEmitter.emit(\"draw\", {\n        type: \"label\",\n        axis,\n        index,\n        group,\n        element: labelElement,\n        text: label,\n        ...positionalData\n    });\n}\n\n/**\n * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n * @param options Options set by user\n * @param responsiveOptions Optional functions to add responsive behavior to chart\n * @param eventEmitter The event emitter that will be used to emit the options changed events\n * @return The consolidated options object from the defaults, base and matching responsive options\n */ function optionsProvider(options, responsiveOptions, eventEmitter) {\n    let currentOptions;\n    const mediaQueryListeners = [];\n    function updateCurrentOptions(mediaEvent) {\n        const previousOptions = currentOptions;\n        currentOptions = extend({}, options);\n        if (responsiveOptions) {\n            responsiveOptions.forEach((responsiveOption)=>{\n                const mql = window.matchMedia(responsiveOption[0]);\n                if (mql.matches) {\n                    currentOptions = extend(currentOptions, responsiveOption[1]);\n                }\n            });\n        }\n        if (eventEmitter && mediaEvent) {\n            eventEmitter.emit(\"optionsChanged\", {\n                previousOptions,\n                currentOptions\n            });\n        }\n    }\n    function removeMediaQueryListeners() {\n        mediaQueryListeners.forEach((mql)=>mql.removeEventListener(\"change\", updateCurrentOptions)\n        );\n    }\n    if (!window.matchMedia) {\n        throw new Error(\"window.matchMedia not found! Make sure you're using a polyfill.\");\n    } else if (responsiveOptions) {\n        responsiveOptions.forEach((responsiveOption)=>{\n            const mql = window.matchMedia(responsiveOption[0]);\n            mql.addEventListener(\"change\", updateCurrentOptions);\n            mediaQueryListeners.push(mql);\n        });\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n    return {\n        removeMediaQueryListeners,\n        getCurrentOptions () {\n            return currentOptions;\n        }\n    };\n}\n\n/**\n * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n */ const elementDescriptions = {\n    m: [\n        \"x\",\n        \"y\"\n    ],\n    l: [\n        \"x\",\n        \"y\"\n    ],\n    c: [\n        \"x1\",\n        \"y1\",\n        \"x2\",\n        \"y2\",\n        \"x\",\n        \"y\"\n    ],\n    a: [\n        \"rx\",\n        \"ry\",\n        \"xAr\",\n        \"lAf\",\n        \"sf\",\n        \"x\",\n        \"y\"\n    ]\n};\n/**\n * Default options for newly created SVG path objects.\n */ const defaultOptions$3 = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n};\nfunction element(command, params, pathElements, pos, relative, data) {\n    const pathElement = {\n        command: relative ? command.toLowerCase() : command.toUpperCase(),\n        ...params,\n        ...data ? {\n            data\n        } : {}\n    };\n    pathElements.splice(pos, 0, pathElement);\n}\nfunction forEachParam(pathElements, cb) {\n    pathElements.forEach((pathElement, pathElementIndex)=>{\n        elementDescriptions[pathElement.command.toLowerCase()].forEach((paramName, paramIndex)=>{\n            cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n        });\n    });\n}\nclass SvgPath {\n    /**\n   * This static function on `SvgPath` is joining multiple paths together into one paths.\n   * @param paths A list of paths to be joined together. The order is important.\n   * @param close If the newly created path should be a closed path\n   * @param options Path options for the newly created path.\n   */ static join(paths) {\n        let close = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, options = arguments.length > 2 ? arguments[2] : void 0;\n        const joinedPath = new SvgPath(close, options);\n        for(let i = 0; i < paths.length; i++){\n            const path = paths[i];\n            for(let j = 0; j < path.pathElements.length; j++){\n                joinedPath.pathElements.push(path.pathElements[j]);\n            }\n        }\n        return joinedPath;\n    }\n    position(pos) {\n        if (pos !== undefined) {\n            this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n            return this;\n        } else {\n            return this.pos;\n        }\n    }\n    /**\n   * Removes elements from the path starting at the current position.\n   * @param count Number of path elements that should be removed from the current position.\n   * @return The current path object for easy call chaining.\n   */ remove(count) {\n        this.pathElements.splice(this.pos, count);\n        return this;\n    }\n    /**\n   * Use this function to add a new move SVG path element.\n   * @param x The x coordinate for the move element.\n   * @param y The y coordinate for the move element.\n   * @param relative If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */ move(x, y) {\n        let relative = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, data = arguments.length > 3 ? arguments[3] : void 0;\n        element(\"M\", {\n            x: +x,\n            y: +y\n        }, this.pathElements, this.pos++, relative, data);\n        return this;\n    }\n    /**\n   * Use this function to add a new line SVG path element.\n   * @param x The x coordinate for the line element.\n   * @param y The y coordinate for the line element.\n   * @param relative If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */ line(x, y) {\n        let relative = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, data = arguments.length > 3 ? arguments[3] : void 0;\n        element(\"L\", {\n            x: +x,\n            y: +y\n        }, this.pathElements, this.pos++, relative, data);\n        return this;\n    }\n    /**\n   * Use this function to add a new curve SVG path element.\n   * @param x1 The x coordinate for the first control point of the bezier curve.\n   * @param y1 The y coordinate for the first control point of the bezier curve.\n   * @param x2 The x coordinate for the second control point of the bezier curve.\n   * @param y2 The y coordinate for the second control point of the bezier curve.\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */ curve(x1, y1, x2, y2, x, y) {\n        let relative = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : false, data = arguments.length > 7 ? arguments[7] : void 0;\n        element(\"C\", {\n            x1: +x1,\n            y1: +y1,\n            x2: +x2,\n            y2: +y2,\n            x: +x,\n            y: +y\n        }, this.pathElements, this.pos++, relative, data);\n        return this;\n    }\n    /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   * @param rx The radius to be used for the x-axis of the arc.\n   * @param ry The radius to be used for the y-axis of the arc.\n   * @param xAr Defines the orientation of the arc\n   * @param lAf Large arc flag\n   * @param sf Sweep flag\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */ arc(rx, ry, xAr, lAf, sf, x, y) {\n        let relative = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : false, data = arguments.length > 8 ? arguments[8] : void 0;\n        element(\"A\", {\n            rx,\n            ry,\n            xAr,\n            lAf,\n            sf,\n            x,\n            y\n        }, this.pathElements, this.pos++, relative, data);\n        return this;\n    }\n    /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   * @param path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return The current path object for easy call chaining.\n   */ parse(path) {\n        // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n        const chunks = path.replace(/([A-Za-z])(-?[0-9])/g, \"$1 $2\").replace(/([0-9])([A-Za-z])/g, \"$1 $2\").split(/[\\s,]+/).reduce((result, pathElement)=>{\n            if (pathElement.match(/[A-Za-z]/)) {\n                result.push([]);\n            }\n            result[result.length - 1].push(pathElement);\n            return result;\n        }, []);\n        // If this is a closed path we remove the Z at the end because this is determined by the close option\n        if (chunks[chunks.length - 1][0].toUpperCase() === \"Z\") {\n            chunks.pop();\n        }\n        // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n        // For example {command: 'M', x: '10', y: '10'}\n        const elements = chunks.map((chunk)=>{\n            const command = chunk.shift();\n            const description = elementDescriptions[command.toLowerCase()];\n            return {\n                command,\n                ...description.reduce((result, paramName, index)=>{\n                    result[paramName] = +chunk[index];\n                    return result;\n                }, {})\n            };\n        });\n        // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n        this.pathElements.splice(this.pos, 0, ...elements);\n        // Increase the internal position by the element count\n        this.pos += elements.length;\n        return this;\n    }\n    /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   */ stringify() {\n        const accuracyMultiplier = Math.pow(10, this.options.accuracy);\n        return this.pathElements.reduce((path, pathElement)=>{\n            const params = elementDescriptions[pathElement.command.toLowerCase()].map((paramName)=>{\n                const value = pathElement[paramName];\n                return this.options.accuracy ? Math.round(value * accuracyMultiplier) / accuracyMultiplier : value;\n            });\n            return path + pathElement.command + params.join(\",\");\n        }, \"\") + (this.close ? \"Z\" : \"\");\n    }\n    /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */ scale(x, y) {\n        forEachParam(this.pathElements, (pathElement, paramName)=>{\n            pathElement[paramName] *= paramName[0] === \"x\" ? x : y;\n        });\n        return this;\n    }\n    /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */ translate(x, y) {\n        forEachParam(this.pathElements, (pathElement, paramName)=>{\n            pathElement[paramName] += paramName[0] === \"x\" ? x : y;\n        });\n        return this;\n    }\n    /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   * @param transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return The current path object for easy call chaining.\n   */ transform(transformFnc) {\n        forEachParam(this.pathElements, (pathElement, paramName, pathElementIndex, paramIndex, pathElements)=>{\n            const transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n            if (transformed || transformed === 0) {\n                pathElement[paramName] = transformed;\n            }\n        });\n        return this;\n    }\n    /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   * @param close Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   */ clone() {\n        let close = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        const clone = new SvgPath(close || this.close);\n        clone.pos = this.pos;\n        clone.pathElements = this.pathElements.slice().map((pathElement)=>({\n                ...pathElement\n            })\n        );\n        clone.options = {\n            ...this.options\n        };\n        return clone;\n    }\n    /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   * @param command The command you'd like to use to split the path\n   */ splitByCommand(command) {\n        const split = [\n            new SvgPath()\n        ];\n        this.pathElements.forEach((pathElement)=>{\n            if (pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n                split.push(new SvgPath());\n            }\n            split[split.length - 1].pathElements.push(pathElement);\n        });\n        return split;\n    }\n    /**\n   * Used to construct a new path object.\n   * @param close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param options Options object that overrides the default objects. See default options for more details.\n   */ constructor(close = false, options){\n        this.close = close;\n        this.pathElements = [];\n        this.pos = 0;\n        this.options = {\n            ...defaultOptions$3,\n            ...options\n        };\n    }\n}\n\n/**\n * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.none({\n *     fillHoles: false\n *   })\n * });\n * ```\n */ function none(options) {\n    const finalOptions = {\n        fillHoles: false,\n        ...options\n    };\n    return function noneInterpolation(pathCoordinates, valueData) {\n        const path = new SvgPath();\n        let hole = true;\n        for(let i = 0; i < pathCoordinates.length; i += 2){\n            const currX = pathCoordinates[i];\n            const currY = pathCoordinates[i + 1];\n            const currData = valueData[i / 2];\n            if (getMultiValue(currData.value) !== undefined) {\n                if (hole) {\n                    path.move(currX, currY, false, currData);\n                } else {\n                    path.line(currX, currY, false, currData);\n                }\n                hole = false;\n            } else if (!finalOptions.fillHoles) {\n                hole = true;\n            }\n        }\n        return path;\n    };\n}\n\n/**\n * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n *\n * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.simple({\n *     divisor: 2,\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the simple interpolation factory function.\n */ function simple(options) {\n    const finalOptions = {\n        divisor: 2,\n        fillHoles: false,\n        ...options\n    };\n    const d = 1 / Math.max(1, finalOptions.divisor);\n    return function simpleInterpolation(pathCoordinates, valueData) {\n        const path = new SvgPath();\n        let prevX = 0;\n        let prevY = 0;\n        let prevData;\n        for(let i = 0; i < pathCoordinates.length; i += 2){\n            const currX = pathCoordinates[i];\n            const currY = pathCoordinates[i + 1];\n            const length = (currX - prevX) * d;\n            const currData = valueData[i / 2];\n            if (currData.value !== undefined) {\n                if (prevData === undefined) {\n                    path.move(currX, currY, false, currData);\n                } else {\n                    path.curve(prevX + length, prevY, currX - length, currY, currX, currY, false, currData);\n                }\n                prevX = currX;\n                prevY = currY;\n                prevData = currData;\n            } else if (!finalOptions.fillHoles) {\n                prevX = prevY = 0;\n                prevData = undefined;\n            }\n        }\n        return path;\n    };\n}\n\n/**\n * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n *\n * @example\n * ```ts\n * const chart = new Chartist.Line('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.step({\n *     postpone: true,\n *     fillHoles: false\n *   })\n * });\n * ```\n */ function step(options) {\n    const finalOptions = {\n        postpone: true,\n        fillHoles: false,\n        ...options\n    };\n    return function stepInterpolation(pathCoordinates, valueData) {\n        const path = new SvgPath();\n        let prevX = 0;\n        let prevY = 0;\n        let prevData;\n        for(let i = 0; i < pathCoordinates.length; i += 2){\n            const currX = pathCoordinates[i];\n            const currY = pathCoordinates[i + 1];\n            const currData = valueData[i / 2];\n            // If the current point is also not a hole we can draw the step lines\n            if (currData.value !== undefined) {\n                if (prevData === undefined) {\n                    path.move(currX, currY, false, currData);\n                } else {\n                    if (finalOptions.postpone) {\n                        // If postponed we should draw the step line with the value of the previous value\n                        path.line(currX, prevY, false, prevData);\n                    } else {\n                        // If not postponed we should draw the step line with the value of the current value\n                        path.line(prevX, currY, false, currData);\n                    }\n                    // Line to the actual point (this should only be a Y-Axis movement\n                    path.line(currX, currY, false, currData);\n                }\n                prevX = currX;\n                prevY = currY;\n                prevData = currData;\n            } else if (!finalOptions.fillHoles) {\n                prevX = prevY = 0;\n                prevData = undefined;\n            }\n        }\n        return path;\n    };\n}\n\n/**\n * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n *\n * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.cardinal({\n *     tension: 1,\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the cardinal factory function.\n */ function cardinal(options) {\n    const finalOptions = {\n        tension: 1,\n        fillHoles: false,\n        ...options\n    };\n    const t = Math.min(1, Math.max(0, finalOptions.tension));\n    const c = 1 - t;\n    return function cardinalInterpolation(pathCoordinates, valueData) {\n        // First we try to split the coordinates into segments\n        // This is necessary to treat \"holes\" in line charts\n        const segments = splitIntoSegments(pathCoordinates, valueData, {\n            fillHoles: finalOptions.fillHoles\n        });\n        if (!segments.length) {\n            // If there were no segments return 'none' interpolation\n            return none()([], []);\n        } else if (segments.length > 1) {\n            // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n            // afterwards together into a single path.\n            // For each segment we will recurse the cardinal function\n            // Join the segment path data into a single path and return\n            return SvgPath.join(segments.map((segment)=>cardinalInterpolation(segment.pathCoordinates, segment.valueData)\n            ));\n        } else {\n            // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n            // segment\n            pathCoordinates = segments[0].pathCoordinates;\n            valueData = segments[0].valueData;\n            // If less than two points we need to fallback to no smoothing\n            if (pathCoordinates.length <= 4) {\n                return none()(pathCoordinates, valueData);\n            }\n            const path = new SvgPath().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]);\n            const z = false;\n            for(let i = 0, iLen = pathCoordinates.length; iLen - 2 * Number(!z) > i; i += 2){\n                const p = [\n                    {\n                        x: +pathCoordinates[i - 2],\n                        y: +pathCoordinates[i - 1]\n                    },\n                    {\n                        x: +pathCoordinates[i],\n                        y: +pathCoordinates[i + 1]\n                    },\n                    {\n                        x: +pathCoordinates[i + 2],\n                        y: +pathCoordinates[i + 3]\n                    },\n                    {\n                        x: +pathCoordinates[i + 4],\n                        y: +pathCoordinates[i + 5]\n                    }\n                ];\n                {\n                    if (iLen - 4 === i) {\n                        p[3] = p[2];\n                    } else if (!i) {\n                        p[0] = {\n                            x: +pathCoordinates[i],\n                            y: +pathCoordinates[i + 1]\n                        };\n                    }\n                }\n                path.curve(t * (-p[0].x + 6 * p[1].x + p[2].x) / 6 + c * p[2].x, t * (-p[0].y + 6 * p[1].y + p[2].y) / 6 + c * p[2].y, t * (p[1].x + 6 * p[2].x - p[3].x) / 6 + c * p[2].x, t * (p[1].y + 6 * p[2].y - p[3].y) / 6 + c * p[2].y, p[2].x, p[2].y, false, valueData[(i + 2) / 2]);\n            }\n            return path;\n        }\n    };\n}\n\n/**\n * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n *\n * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n *\n * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.monotoneCubic({\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the monotoneCubic factory function.\n */ function monotoneCubic(options) {\n    const finalOptions = {\n        fillHoles: false,\n        ...options\n    };\n    return function monotoneCubicInterpolation(pathCoordinates, valueData) {\n        // First we try to split the coordinates into segments\n        // This is necessary to treat \"holes\" in line charts\n        const segments = splitIntoSegments(pathCoordinates, valueData, {\n            fillHoles: finalOptions.fillHoles,\n            increasingX: true\n        });\n        if (!segments.length) {\n            // If there were no segments return 'Chartist.Interpolation.none'\n            return none()([], []);\n        } else if (segments.length > 1) {\n            // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n            // afterwards together into a single path.\n            // For each segment we will recurse the monotoneCubic fn function\n            // Join the segment path data into a single path and return\n            return SvgPath.join(segments.map((segment)=>monotoneCubicInterpolation(segment.pathCoordinates, segment.valueData)\n            ));\n        } else {\n            // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n            // segment\n            pathCoordinates = segments[0].pathCoordinates;\n            valueData = segments[0].valueData;\n            // If less than three points we need to fallback to no smoothing\n            if (pathCoordinates.length <= 4) {\n                return none()(pathCoordinates, valueData);\n            }\n            const xs = [];\n            const ys = [];\n            const n = pathCoordinates.length / 2;\n            const ms = [];\n            const ds = [];\n            const dys = [];\n            const dxs = [];\n            // Populate x and y coordinates into separate arrays, for readability\n            for(let i = 0; i < n; i++){\n                xs[i] = pathCoordinates[i * 2];\n                ys[i] = pathCoordinates[i * 2 + 1];\n            }\n            // Calculate deltas and derivative\n            for(let i1 = 0; i1 < n - 1; i1++){\n                dys[i1] = ys[i1 + 1] - ys[i1];\n                dxs[i1] = xs[i1 + 1] - xs[i1];\n                ds[i1] = dys[i1] / dxs[i1];\n            }\n            // Determine desired slope (m) at each point using Fritsch-Carlson method\n            // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n            ms[0] = ds[0];\n            ms[n - 1] = ds[n - 2];\n            for(let i2 = 1; i2 < n - 1; i2++){\n                if (ds[i2] === 0 || ds[i2 - 1] === 0 || ds[i2 - 1] > 0 !== ds[i2] > 0) {\n                    ms[i2] = 0;\n                } else {\n                    ms[i2] = 3 * (dxs[i2 - 1] + dxs[i2]) / ((2 * dxs[i2] + dxs[i2 - 1]) / ds[i2 - 1] + (dxs[i2] + 2 * dxs[i2 - 1]) / ds[i2]);\n                    if (!isFinite(ms[i2])) {\n                        ms[i2] = 0;\n                    }\n                }\n            }\n            // Now build a path from the slopes\n            const path = new SvgPath().move(xs[0], ys[0], false, valueData[0]);\n            for(let i3 = 0; i3 < n - 1; i3++){\n                path.curve(// First control point\n                xs[i3] + dxs[i3] / 3, ys[i3] + ms[i3] * dxs[i3] / 3, // Second control point\n                xs[i3 + 1] - dxs[i3] / 3, ys[i3 + 1] - ms[i3 + 1] * dxs[i3] / 3, // End point\n                xs[i3 + 1], ys[i3 + 1], false, valueData[i3 + 1]);\n            }\n            return path;\n        }\n    };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  simple: simple,\n  step: step,\n  cardinal: cardinal,\n  monotoneCubic: monotoneCubic\n});\n\nclass EventEmitter {\n    on(event, listener) {\n        const { allListeners , listeners  } = this;\n        if (event === \"*\") {\n            allListeners.add(listener);\n        } else {\n            if (!listeners.has(event)) {\n                listeners.set(event, new Set());\n            }\n            listeners.get(event).add(listener);\n        }\n    }\n    off(event, listener) {\n        const { allListeners , listeners  } = this;\n        if (event === \"*\") {\n            if (listener) {\n                allListeners.delete(listener);\n            } else {\n                allListeners.clear();\n            }\n        } else if (listeners.has(event)) {\n            const eventListeners = listeners.get(event);\n            if (listener) {\n                eventListeners.delete(listener);\n            } else {\n                eventListeners.clear();\n            }\n            if (!eventListeners.size) {\n                listeners.delete(event);\n            }\n        }\n    }\n    /**\n   * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n   * @param event The event name that should be triggered\n   * @param data Arbitrary data that will be passed to the event handler callback functions\n   */ emit(event, data) {\n        const { allListeners , listeners  } = this;\n        // Only do something if there are event handlers with this name existing\n        if (listeners.has(event)) {\n            listeners.get(event).forEach((listener)=>listener(data)\n            );\n        }\n        // Emit event to star event handlers\n        allListeners.forEach((listener)=>listener(event, data)\n        );\n    }\n    constructor(){\n        this.listeners = new Map();\n        this.allListeners = new Set();\n    }\n}\n\nconst instances = new WeakMap();\nclass BaseChart {\n    // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n    // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n    // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n    // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n    // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n    // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n    /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   * @param data Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param options Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param override If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   */ update(data, options) {\n        let override = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        if (data) {\n            this.data = data || {};\n            this.data.labels = this.data.labels || [];\n            this.data.series = this.data.series || [];\n            // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n            this.eventEmitter.emit(\"data\", {\n                type: \"update\",\n                data: this.data\n            });\n        }\n        if (options) {\n            this.options = extend({}, override ? this.options : this.defaultOptions, options);\n            // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n            // Otherwise we re-create the optionsProvider at this point\n            if (!this.initializeTimeoutId) {\n                var ref;\n                (ref = this.optionsProvider) === null || ref === void 0 ? void 0 : ref.removeMediaQueryListeners();\n                this.optionsProvider = optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n            }\n        }\n        // Only re-created the chart if it has been initialized yet\n        if (!this.initializeTimeoutId && this.optionsProvider) {\n            this.createChart(this.optionsProvider.getCurrentOptions());\n        }\n        // Return a reference to the chart object to chain up calls\n        return this;\n    }\n    /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   */ detach() {\n        // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n        // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n        if (!this.initializeTimeoutId) {\n            var ref;\n            window.removeEventListener(\"resize\", this.resizeListener);\n            (ref = this.optionsProvider) === null || ref === void 0 ? void 0 : ref.removeMediaQueryListeners();\n        } else {\n            window.clearTimeout(this.initializeTimeoutId);\n        }\n        instances.delete(this.container);\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(event, listener) {\n        this.eventEmitter.on(event, listener);\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    off(event, listener) {\n        this.eventEmitter.off(event, listener);\n        return this;\n    }\n    initialize() {\n        // Add window resize listener that re-creates the chart\n        window.addEventListener(\"resize\", this.resizeListener);\n        // Obtain current options based on matching media queries (if responsive options are given)\n        // This will also register a listener that is re-creating the chart based on media changes\n        this.optionsProvider = optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n        // Register options change listener that will trigger a chart update\n        this.eventEmitter.on(\"optionsChanged\", ()=>this.update()\n        );\n        // Before the first chart creation we need to register us with all plugins that are configured\n        // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n        if (this.options.plugins) {\n            this.options.plugins.forEach((plugin)=>{\n                if (Array.isArray(plugin)) {\n                    plugin[0](this, plugin[1]);\n                } else {\n                    plugin(this);\n                }\n            });\n        }\n        // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n        this.eventEmitter.emit(\"data\", {\n            type: \"initial\",\n            data: this.data\n        });\n        // Create the first chart\n        this.createChart(this.optionsProvider.getCurrentOptions());\n        // As chart is initialized from the event loop now we can reset our timeout reference\n        // This is important if the chart gets initialized on the same element twice\n        this.initializeTimeoutId = null;\n    }\n    constructor(query, data, defaultOptions, options, responsiveOptions){\n        this.data = data;\n        this.defaultOptions = defaultOptions;\n        this.options = options;\n        this.responsiveOptions = responsiveOptions;\n        this.eventEmitter = new EventEmitter();\n        this.resizeListener = ()=>this.update()\n        ;\n        this.initializeTimeoutId = setTimeout(()=>this.initialize()\n        , 0);\n        const container = typeof query === \"string\" ? document.querySelector(query) : query;\n        if (!container) {\n            throw new Error(\"Target element is not found\");\n        }\n        this.container = container;\n        const prevInstance = instances.get(container);\n        // If chartist was already initialized in this container we are detaching all event listeners first\n        if (prevInstance) {\n            prevInstance.detach();\n        }\n        instances.set(container, this);\n    }\n}\n\nconst axisUnits = {\n    x: {\n        pos: \"x\",\n        len: \"width\",\n        dir: \"horizontal\",\n        rectStart: \"x1\",\n        rectEnd: \"x2\",\n        rectOffset: \"y2\"\n    },\n    y: {\n        pos: \"y\",\n        len: \"height\",\n        dir: \"vertical\",\n        rectStart: \"y2\",\n        rectEnd: \"y1\",\n        rectOffset: \"x1\"\n    }\n};\nclass Axis {\n    createGridAndLabels(gridGroup, labelGroup, chartOptions, eventEmitter) {\n        const axisOptions = this.units.pos === \"x\" ? chartOptions.axisX : chartOptions.axisY;\n        const projectedValues = this.ticks.map((tick, i)=>this.projectValue(tick, i)\n        );\n        const labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n        projectedValues.forEach((projectedValue, index)=>{\n            const labelValue = labelValues[index];\n            const labelOffset = {\n                x: 0,\n                y: 0\n            };\n            // TODO: Find better solution for solving this problem\n            // Calculate how much space we have available for the label\n            let labelLength;\n            if (projectedValues[index + 1]) {\n                // If we still have one label ahead, we can calculate the distance to the next tick / label\n                labelLength = projectedValues[index + 1] - projectedValue;\n            } else {\n                // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n                // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n                // still be visible inside of the chart padding.\n                labelLength = Math.max(this.axisLength - projectedValue, this.axisLength / this.ticks.length);\n            }\n            // Skip grid lines and labels where interpolated label values are falsey (except for 0)\n            if (labelValue !== \"\" && isFalseyButZero(labelValue)) {\n                return;\n            }\n            // Transform to global coordinates using the chartRect\n            // We also need to set the label offset for the createLabel function\n            if (this.units.pos === \"x\") {\n                projectedValue = this.chartRect.x1 + projectedValue;\n                labelOffset.x = chartOptions.axisX.labelOffset.x;\n                // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n                // different offset as for positioned with end (bottom)\n                if (chartOptions.axisX.position === \"start\") {\n                    labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + 5;\n                } else {\n                    labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + 5;\n                }\n            } else {\n                projectedValue = this.chartRect.y1 - projectedValue;\n                labelOffset.y = chartOptions.axisY.labelOffset.y - labelLength;\n                // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n                // different offset as for positioned with end (right side)\n                if (chartOptions.axisY.position === \"start\") {\n                    labelOffset.x = this.chartRect.padding.left + chartOptions.axisY.labelOffset.x;\n                } else {\n                    labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n                }\n            }\n            if (axisOptions.showGrid) {\n                createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n                    chartOptions.classNames.grid,\n                    chartOptions.classNames[this.units.dir]\n                ], eventEmitter);\n            }\n            if (axisOptions.showLabel) {\n                createLabel(projectedValue, labelLength, index, labelValue, this, axisOptions.offset, labelOffset, labelGroup, [\n                    chartOptions.classNames.label,\n                    chartOptions.classNames[this.units.dir],\n                    axisOptions.position === \"start\" ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames.end\n                ], eventEmitter);\n            }\n        });\n    }\n    constructor(units, chartRect, ticks){\n        this.units = units;\n        this.chartRect = chartRect;\n        this.ticks = ticks;\n        this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n        this.axisLength = chartRect[this.units.rectEnd] - chartRect[this.units.rectStart];\n        this.gridOffset = chartRect[this.units.rectOffset];\n    }\n}\n\nclass AutoScaleAxis extends Axis {\n    projectValue(value) {\n        const finalValue = Number(getMultiValue(value, this.units.pos));\n        return this.axisLength * (finalValue - this.bounds.min) / this.bounds.range;\n    }\n    constructor(axisUnit, data, chartRect, options){\n        // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n        const highLow = options.highLow || getHighLow(data, options, axisUnit.pos);\n        const bounds = getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n        const range = {\n            min: bounds.min,\n            max: bounds.max\n        };\n        super(axisUnit, chartRect, bounds.values);\n        this.bounds = bounds;\n        this.range = range;\n    }\n}\n\nclass FixedScaleAxis extends Axis {\n    projectValue(value) {\n        const finalValue = Number(getMultiValue(value, this.units.pos));\n        return this.axisLength * (finalValue - this.range.min) / (this.range.max - this.range.min);\n    }\n    constructor(axisUnit, data, chartRect, options){\n        const highLow = options.highLow || getHighLow(data, options, axisUnit.pos);\n        const divisor = options.divisor || 1;\n        const ticks = (options.ticks || times(divisor, (index)=>highLow.low + (highLow.high - highLow.low) / divisor * index\n        )).sort((a, b)=>Number(a) - Number(b)\n        );\n        const range = {\n            min: highLow.low,\n            max: highLow.high\n        };\n        super(axisUnit, chartRect, ticks);\n        this.range = range;\n    }\n}\n\nclass StepAxis extends Axis {\n    projectValue(_value, index) {\n        return this.stepLength * index;\n    }\n    constructor(axisUnit, _data, chartRect, options){\n        const ticks = options.ticks || [];\n        super(axisUnit, chartRect, ticks);\n        const calc = Math.max(1, ticks.length - (options.stretch ? 1 : 0));\n        this.stepLength = this.axisLength / calc;\n        this.stretch = Boolean(options.stretch);\n    }\n}\n\nfunction getSeriesOption(series, options, key) {\n    var ref;\n    if (safeHasProperty(series, \"name\") && series.name && ((ref = options.series) === null || ref === void 0 ? void 0 : ref[series.name])) {\n        const seriesOptions = options === null || options === void 0 ? void 0 : options.series[series.name];\n        const value = seriesOptions[key];\n        const result = value === undefined ? options[key] : value;\n        return result;\n    } else {\n        return options[key];\n    }\n}\n/**\n * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n */ const defaultOptions$2 = {\n    // Options for X-Axis\n    axisX: {\n        // The offset of the labels to the chart area\n        offset: 30,\n        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n        position: \"end\",\n        // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n        labelOffset: {\n            x: 0,\n            y: 0\n        },\n        // If labels should be shown or not\n        showLabel: true,\n        // If the axis grid should be drawn or not\n        showGrid: true,\n        // Interpolation function that allows you to intercept the value from the axis label\n        labelInterpolationFnc: noop,\n        // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n        type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n        // The offset of the labels to the chart area\n        offset: 40,\n        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n        position: \"start\",\n        // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n        labelOffset: {\n            x: 0,\n            y: 0\n        },\n        // If labels should be shown or not\n        showLabel: true,\n        // If the axis grid should be drawn or not\n        showGrid: true,\n        // Interpolation function that allows you to intercept the value from the axis label\n        labelInterpolationFnc: noop,\n        // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n        type: undefined,\n        // This value specifies the minimum height in pixel of the scale steps\n        scaleMinSpace: 20,\n        // Use only integer values (whole numbers) for the scale steps\n        onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n        top: 15,\n        right: 15,\n        bottom: 5,\n        left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n        chart: \"ct-chart-line\",\n        label: \"ct-label\",\n        labelGroup: \"ct-labels\",\n        series: \"ct-series\",\n        line: \"ct-line\",\n        point: \"ct-point\",\n        area: \"ct-area\",\n        grid: \"ct-grid\",\n        gridGroup: \"ct-grids\",\n        gridBackground: \"ct-grid-background\",\n        vertical: \"ct-vertical\",\n        horizontal: \"ct-horizontal\",\n        start: \"ct-start\",\n        end: \"ct-end\"\n    }\n};\nclass LineChart extends BaseChart {\n    /**\n   * Creates a new chart\n   */ createChart(options) {\n        const { data  } = this;\n        const normalizedData = normalizeData(data, options.reverseData, true);\n        // Create new svg object\n        const svg = createSvg(this.container, options.width, options.height, options.classNames.chart);\n        this.svg = svg;\n        // Create groups for labels, grid and series\n        const gridGroup = svg.elem(\"g\").addClass(options.classNames.gridGroup);\n        const seriesGroup = svg.elem(\"g\");\n        const labelGroup = svg.elem(\"g\").addClass(options.classNames.labelGroup);\n        const chartRect = createChartRect(svg, options);\n        let axisX;\n        let axisY;\n        if (options.axisX.type === undefined) {\n            axisX = new StepAxis(axisUnits.x, normalizedData.series, chartRect, {\n                ...options.axisX,\n                ticks: normalizedData.labels,\n                stretch: options.fullWidth\n            });\n        } else {\n            // eslint-disable-next-line new-cap\n            axisX = new options.axisX.type(axisUnits.x, normalizedData.series, chartRect, options.axisX);\n        }\n        if (options.axisY.type === undefined) {\n            axisY = new AutoScaleAxis(axisUnits.y, normalizedData.series, chartRect, {\n                ...options.axisY,\n                high: isNumeric(options.high) ? options.high : options.axisY.high,\n                low: isNumeric(options.low) ? options.low : options.axisY.low\n            });\n        } else {\n            // eslint-disable-next-line new-cap\n            axisY = new options.axisY.type(axisUnits.y, normalizedData.series, chartRect, options.axisY);\n        }\n        axisX.createGridAndLabels(gridGroup, labelGroup, options, this.eventEmitter);\n        axisY.createGridAndLabels(gridGroup, labelGroup, options, this.eventEmitter);\n        if (options.showGridBackground) {\n            createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n        }\n        // Draw the series\n        each(data.series, (series, seriesIndex)=>{\n            const seriesElement = seriesGroup.elem(\"g\");\n            const seriesName = safeHasProperty(series, \"name\") && series.name;\n            const seriesClassName = safeHasProperty(series, \"className\") && series.className;\n            const seriesMeta = safeHasProperty(series, \"meta\") ? series.meta : undefined;\n            // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n            if (seriesName) {\n                seriesElement.attr({\n                    \"ct:series-name\": seriesName\n                });\n            }\n            if (seriesMeta) {\n                seriesElement.attr({\n                    \"ct:meta\": serialize(seriesMeta)\n                });\n            }\n            // Use series class from series data or if not set generate one\n            seriesElement.addClass([\n                options.classNames.series,\n                seriesClassName || \"\".concat(options.classNames.series, \"-\").concat(alphaNumerate(seriesIndex))\n            ].join(\" \"));\n            const pathCoordinates = [];\n            const pathData = [];\n            normalizedData.series[seriesIndex].forEach((value, valueIndex)=>{\n                const p = {\n                    x: chartRect.x1 + axisX.projectValue(value, valueIndex, normalizedData.series[seriesIndex]),\n                    y: chartRect.y1 - axisY.projectValue(value, valueIndex, normalizedData.series[seriesIndex])\n                };\n                pathCoordinates.push(p.x, p.y);\n                pathData.push({\n                    value,\n                    valueIndex,\n                    meta: getMetaData(series, valueIndex)\n                });\n            });\n            const seriesOptions = {\n                lineSmooth: getSeriesOption(series, options, \"lineSmooth\"),\n                showPoint: getSeriesOption(series, options, \"showPoint\"),\n                showLine: getSeriesOption(series, options, \"showLine\"),\n                showArea: getSeriesOption(series, options, \"showArea\"),\n                areaBase: getSeriesOption(series, options, \"areaBase\")\n            };\n            let smoothing;\n            if (typeof seriesOptions.lineSmooth === \"function\") {\n                smoothing = seriesOptions.lineSmooth;\n            } else {\n                smoothing = seriesOptions.lineSmooth ? monotoneCubic() : none();\n            }\n            // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n            // index, value and meta data\n            const path = smoothing(pathCoordinates, pathData);\n            // If we should show points we need to create them now to avoid secondary loop\n            // Points are drawn from the pathElements returned by the interpolation function\n            // Small offset for Firefox to render squares correctly\n            if (seriesOptions.showPoint) {\n                path.pathElements.forEach((pathElement)=>{\n                    const { data: pathElementData  } = pathElement;\n                    const point = seriesElement.elem(\"line\", {\n                        x1: pathElement.x,\n                        y1: pathElement.y,\n                        x2: pathElement.x + 0.01,\n                        y2: pathElement.y\n                    }, options.classNames.point);\n                    if (pathElementData) {\n                        let x;\n                        let y;\n                        if (safeHasProperty(pathElementData.value, \"x\")) {\n                            x = pathElementData.value.x;\n                        }\n                        if (safeHasProperty(pathElementData.value, \"y\")) {\n                            y = pathElementData.value.y;\n                        }\n                        point.attr({\n                            \"ct:value\": [\n                                x,\n                                y\n                            ].filter(isNumeric).join(\",\"),\n                            \"ct:meta\": serialize(pathElementData.meta)\n                        });\n                    }\n                    this.eventEmitter.emit(\"draw\", {\n                        type: \"point\",\n                        value: pathElementData === null || pathElementData === void 0 ? void 0 : pathElementData.value,\n                        index: (pathElementData === null || pathElementData === void 0 ? void 0 : pathElementData.valueIndex) || 0,\n                        meta: pathElementData === null || pathElementData === void 0 ? void 0 : pathElementData.meta,\n                        series,\n                        seriesIndex,\n                        axisX,\n                        axisY,\n                        group: seriesElement,\n                        element: point,\n                        x: pathElement.x,\n                        y: pathElement.y,\n                        chartRect\n                    });\n                });\n            }\n            if (seriesOptions.showLine) {\n                const line = seriesElement.elem(\"path\", {\n                    d: path.stringify()\n                }, options.classNames.line, true);\n                this.eventEmitter.emit(\"draw\", {\n                    type: \"line\",\n                    values: normalizedData.series[seriesIndex],\n                    path: path.clone(),\n                    chartRect,\n                    // TODO: Remove redundant\n                    index: seriesIndex,\n                    series,\n                    seriesIndex,\n                    meta: seriesMeta,\n                    axisX,\n                    axisY,\n                    group: seriesElement,\n                    element: line\n                });\n            }\n            // Area currently only works with axes that support a range!\n            if (seriesOptions.showArea && axisY.range) {\n                // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n                // the area is not drawn outside the chart area.\n                const areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n                // We project the areaBase value into screen coordinates\n                const areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n                // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n                path.splitByCommand(\"M\")// We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n                .filter((pathSegment)=>pathSegment.pathElements.length > 1\n                ).map((solidPathSegments)=>{\n                    // Receiving the filtered solid path segments we can now convert those segments into fill areas\n                    const firstElement = solidPathSegments.pathElements[0];\n                    const lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n                    // Cloning the solid path segment with closing option and removing the first move command from the clone\n                    // We then insert a new move that should start at the area base and draw a straight line up or down\n                    // at the end of the path we add an additional straight line to the projected area base value\n                    // As the closing option is set our path will be automatically closed\n                    return solidPathSegments.clone(true).position(0).remove(1).move(firstElement.x, areaBaseProjected).line(firstElement.x, firstElement.y).position(solidPathSegments.pathElements.length + 1).line(lastElement.x, areaBaseProjected);\n                }).forEach((areaPath)=>{\n                    // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n                    // and adding the created DOM elements to the correct series group\n                    const area = seriesElement.elem(\"path\", {\n                        d: areaPath.stringify()\n                    }, options.classNames.area, true);\n                    // Emit an event for each area that was drawn\n                    this.eventEmitter.emit(\"draw\", {\n                        type: \"area\",\n                        values: normalizedData.series[seriesIndex],\n                        path: areaPath.clone(),\n                        series,\n                        seriesIndex,\n                        axisX,\n                        axisY,\n                        chartRect,\n                        // TODO: Remove redundant\n                        index: seriesIndex,\n                        group: seriesElement,\n                        element: area,\n                        meta: seriesMeta\n                    });\n                });\n            }\n        }, options.reverseData);\n        this.eventEmitter.emit(\"created\", {\n            chartRect,\n            axisX,\n            axisY,\n            svg,\n            options\n        });\n    }\n    /**\n   * This method creates a new line chart.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object that needs to consist of a labels and a series array\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return An object which exposes the API for the created chart\n   *\n   * @example\n   * ```ts\n   * // Create a simple line chart\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * const options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new LineChart('.ct-chart', data, options);\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * const chart = new LineChart('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Create a line chart with responsive options\n   *\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * const responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new LineChart('.ct-chart', data, null, responsiveOptions);\n   * ```\n   */ constructor(query, data, options, responsiveOptions){\n        super(query, data, defaultOptions$2, extend({}, defaultOptions$2, options), responsiveOptions);\n        this.data = data;\n    }\n}\n\nfunction getSerialSums(series) {\n    return serialMap(series, function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return Array.from(args).reduce((prev, curr)=>{\n            return {\n                x: prev.x + (safeHasProperty(curr, \"x\") ? curr.x : 0),\n                y: prev.y + (safeHasProperty(curr, \"y\") ? curr.y : 0)\n            };\n        }, {\n            x: 0,\n            y: 0\n        });\n    });\n}\n/**\n * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n */ const defaultOptions$1 = {\n    // Options for X-Axis\n    axisX: {\n        // The offset of the chart drawing area to the border of the container\n        offset: 30,\n        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n        position: \"end\",\n        // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n        labelOffset: {\n            x: 0,\n            y: 0\n        },\n        // If labels should be shown or not\n        showLabel: true,\n        // If the axis grid should be drawn or not\n        showGrid: true,\n        // Interpolation function that allows you to intercept the value from the axis label\n        labelInterpolationFnc: noop,\n        // This value specifies the minimum width in pixel of the scale steps\n        scaleMinSpace: 30,\n        // Use only integer values (whole numbers) for the scale steps\n        onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n        // The offset of the chart drawing area to the border of the container\n        offset: 40,\n        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n        position: \"start\",\n        // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n        labelOffset: {\n            x: 0,\n            y: 0\n        },\n        // If labels should be shown or not\n        showLabel: true,\n        // If the axis grid should be drawn or not\n        showGrid: true,\n        // Interpolation function that allows you to intercept the value from the axis label\n        labelInterpolationFnc: noop,\n        // This value specifies the minimum height in pixel of the scale steps\n        scaleMinSpace: 20,\n        // Use only integer values (whole numbers) for the scale steps\n        onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n        top: 15,\n        right: 15,\n        bottom: 5,\n        left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to true this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    // If set to 'accumulate-relative' positive and negative values will be handled separately.\n    stackMode: \"accumulate\",\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n        chart: \"ct-chart-bar\",\n        horizontalBars: \"ct-horizontal-bars\",\n        label: \"ct-label\",\n        labelGroup: \"ct-labels\",\n        series: \"ct-series\",\n        bar: \"ct-bar\",\n        grid: \"ct-grid\",\n        gridGroup: \"ct-grids\",\n        gridBackground: \"ct-grid-background\",\n        vertical: \"ct-vertical\",\n        horizontal: \"ct-horizontal\",\n        start: \"ct-start\",\n        end: \"ct-end\"\n    }\n};\nclass BarChart extends BaseChart {\n    /**\n   * Creates a new chart\n   */ createChart(options) {\n        const { data  } = this;\n        const normalizedData = normalizeData(data, options.reverseData, options.horizontalBars ? \"x\" : \"y\", true);\n        // Create new svg element\n        const svg = createSvg(this.container, options.width, options.height, options.classNames.chart + (options.horizontalBars ? \" \" + options.classNames.horizontalBars : \"\"));\n        const highLow = options.stackBars && options.stackMode !== true && normalizedData.series.length ? getHighLow([\n            getSerialSums(normalizedData.series)\n        ], options, options.horizontalBars ? \"x\" : \"y\") : getHighLow(normalizedData.series, options, options.horizontalBars ? \"x\" : \"y\");\n        this.svg = svg;\n        // Drawing groups in correct order\n        const gridGroup = svg.elem(\"g\").addClass(options.classNames.gridGroup);\n        const seriesGroup = svg.elem(\"g\");\n        const labelGroup = svg.elem(\"g\").addClass(options.classNames.labelGroup);\n        // Overrides of high / low from settings\n        if (typeof options.high === \"number\") {\n            highLow.high = options.high;\n        }\n        if (typeof options.low === \"number\") {\n            highLow.low = options.low;\n        }\n        const chartRect = createChartRect(svg, options);\n        let valueAxis;\n        const labelAxisTicks = options.distributeSeries && options.stackBars ? // use only the first label for the step axis\n        normalizedData.labels.slice(0, 1) : // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n        // as the bars are normalized\n        normalizedData.labels;\n        let labelAxis;\n        let axisX;\n        let axisY;\n        // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n        if (options.horizontalBars) {\n            if (options.axisX.type === undefined) {\n                valueAxis = axisX = new AutoScaleAxis(axisUnits.x, normalizedData.series, chartRect, {\n                    ...options.axisX,\n                    highLow: highLow,\n                    referenceValue: 0\n                });\n            } else {\n                // eslint-disable-next-line new-cap\n                valueAxis = axisX = new options.axisX.type(axisUnits.x, normalizedData.series, chartRect, {\n                    ...options.axisX,\n                    highLow: highLow,\n                    referenceValue: 0\n                });\n            }\n            if (options.axisY.type === undefined) {\n                labelAxis = axisY = new StepAxis(axisUnits.y, normalizedData.series, chartRect, {\n                    ticks: labelAxisTicks\n                });\n            } else {\n                // eslint-disable-next-line new-cap\n                labelAxis = axisY = new options.axisY.type(axisUnits.y, normalizedData.series, chartRect, options.axisY);\n            }\n        } else {\n            if (options.axisX.type === undefined) {\n                labelAxis = axisX = new StepAxis(axisUnits.x, normalizedData.series, chartRect, {\n                    ticks: labelAxisTicks\n                });\n            } else {\n                // eslint-disable-next-line new-cap\n                labelAxis = axisX = new options.axisX.type(axisUnits.x, normalizedData.series, chartRect, options.axisX);\n            }\n            if (options.axisY.type === undefined) {\n                valueAxis = axisY = new AutoScaleAxis(axisUnits.y, normalizedData.series, chartRect, {\n                    ...options.axisY,\n                    highLow: highLow,\n                    referenceValue: 0\n                });\n            } else {\n                // eslint-disable-next-line new-cap\n                valueAxis = axisY = new options.axisY.type(axisUnits.y, normalizedData.series, chartRect, {\n                    ...options.axisY,\n                    highLow: highLow,\n                    referenceValue: 0\n                });\n            }\n        }\n        // Projected 0 point\n        const zeroPoint = options.horizontalBars ? chartRect.x1 + valueAxis.projectValue(0) : chartRect.y1 - valueAxis.projectValue(0);\n        const isAccumulateStackMode = options.stackMode === \"accumulate\";\n        const isAccumulateRelativeStackMode = options.stackMode === \"accumulate-relative\";\n        // Used to track the screen coordinates of stacked bars\n        const posStackedBarValues = [];\n        const negStackedBarValues = [];\n        let stackedBarValues = posStackedBarValues;\n        labelAxis.createGridAndLabels(gridGroup, labelGroup, options, this.eventEmitter);\n        valueAxis.createGridAndLabels(gridGroup, labelGroup, options, this.eventEmitter);\n        if (options.showGridBackground) {\n            createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n        }\n        // Draw the series\n        each(data.series, (series, seriesIndex)=>{\n            // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n            const biPol = seriesIndex - (data.series.length - 1) / 2;\n            // Half of the period width between vertical grid lines used to position bars\n            let periodHalfLength;\n            // We need to set periodHalfLength based on some options combinations\n            if (options.distributeSeries && !options.stackBars) {\n                // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n                // which is the series count and divide by 2\n                periodHalfLength = labelAxis.axisLength / normalizedData.series.length / 2;\n            } else if (options.distributeSeries && options.stackBars) {\n                // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n                // length by 2\n                periodHalfLength = labelAxis.axisLength / 2;\n            } else {\n                // On regular bar charts we should just use the series length\n                periodHalfLength = labelAxis.axisLength / normalizedData.series[seriesIndex].length / 2;\n            }\n            // Adding the series group to the series element\n            const seriesElement = seriesGroup.elem(\"g\");\n            const seriesName = safeHasProperty(series, \"name\") && series.name;\n            const seriesClassName = safeHasProperty(series, \"className\") && series.className;\n            const seriesMeta = safeHasProperty(series, \"meta\") ? series.meta : undefined;\n            // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n            if (seriesName) {\n                seriesElement.attr({\n                    \"ct:series-name\": seriesName\n                });\n            }\n            if (seriesMeta) {\n                seriesElement.attr({\n                    \"ct:meta\": serialize(seriesMeta)\n                });\n            }\n            // Use series class from series data or if not set generate one\n            seriesElement.addClass([\n                options.classNames.series,\n                seriesClassName || \"\".concat(options.classNames.series, \"-\").concat(alphaNumerate(seriesIndex))\n            ].join(\" \"));\n            normalizedData.series[seriesIndex].forEach((value, valueIndex)=>{\n                const valueX = safeHasProperty(value, \"x\") && value.x;\n                const valueY = safeHasProperty(value, \"y\") && value.y;\n                let labelAxisValueIndex;\n                // We need to set labelAxisValueIndex based on some options combinations\n                if (options.distributeSeries && !options.stackBars) {\n                    // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n                    // on the step axis for label positioning\n                    labelAxisValueIndex = seriesIndex;\n                } else if (options.distributeSeries && options.stackBars) {\n                    // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n                    // 0 for projection on the label step axis\n                    labelAxisValueIndex = 0;\n                } else {\n                    // On regular bar charts we just use the value index to project on the label step axis\n                    labelAxisValueIndex = valueIndex;\n                }\n                let projected;\n                // We need to transform coordinates differently based on the chart layout\n                if (options.horizontalBars) {\n                    projected = {\n                        x: chartRect.x1 + valueAxis.projectValue(valueX || 0, valueIndex, normalizedData.series[seriesIndex]),\n                        y: chartRect.y1 - labelAxis.projectValue(valueY || 0, labelAxisValueIndex, normalizedData.series[seriesIndex])\n                    };\n                } else {\n                    projected = {\n                        x: chartRect.x1 + labelAxis.projectValue(valueX || 0, labelAxisValueIndex, normalizedData.series[seriesIndex]),\n                        y: chartRect.y1 - valueAxis.projectValue(valueY || 0, valueIndex, normalizedData.series[seriesIndex])\n                    };\n                }\n                // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n                // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n                // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n                // add any automated positioning.\n                if (labelAxis instanceof StepAxis) {\n                    // Offset to center bar between grid lines, but only if the step axis is not stretched\n                    if (!labelAxis.stretch) {\n                        projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n                    }\n                    // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n                    projected[labelAxis.units.pos] += options.stackBars || options.distributeSeries ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n                }\n                // distinguish between positive and negative values in relative stack mode\n                if (isAccumulateRelativeStackMode) {\n                    stackedBarValues = valueY >= 0 || valueX >= 0 ? posStackedBarValues : negStackedBarValues;\n                }\n                // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n                const previousStack = stackedBarValues[valueIndex] || zeroPoint;\n                stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n                // Skip if value is undefined\n                if (value === undefined) {\n                    return;\n                }\n                const positions = {\n                    [\"\".concat(labelAxis.units.pos, \"1\")]: projected[labelAxis.units.pos],\n                    [\"\".concat(labelAxis.units.pos, \"2\")]: projected[labelAxis.units.pos]\n                };\n                if (options.stackBars && (isAccumulateStackMode || isAccumulateRelativeStackMode || !options.stackMode)) {\n                    // Stack mode: accumulate (default)\n                    // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n                    // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n                    // to be the original behaviour (accumulate)\n                    positions[\"\".concat(labelAxis.counterUnits.pos, \"1\")] = previousStack;\n                    positions[\"\".concat(labelAxis.counterUnits.pos, \"2\")] = stackedBarValues[valueIndex];\n                } else {\n                    // Draw from the zero line normally\n                    // This is also the same code for Stack mode: overlap\n                    positions[\"\".concat(labelAxis.counterUnits.pos, \"1\")] = zeroPoint;\n                    positions[\"\".concat(labelAxis.counterUnits.pos, \"2\")] = projected[labelAxis.counterUnits.pos];\n                }\n                // Limit x and y so that they are within the chart rect\n                positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n                positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n                positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n                positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n                const metaData = getMetaData(series, valueIndex);\n                // Create bar element\n                const bar = seriesElement.elem(\"line\", positions, options.classNames.bar).attr({\n                    \"ct:value\": [\n                        valueX,\n                        valueY\n                    ].filter(isNumeric).join(\",\"),\n                    \"ct:meta\": serialize(metaData)\n                });\n                this.eventEmitter.emit(\"draw\", {\n                    type: \"bar\",\n                    value,\n                    index: valueIndex,\n                    meta: metaData,\n                    series,\n                    seriesIndex,\n                    axisX,\n                    axisY,\n                    chartRect,\n                    group: seriesElement,\n                    element: bar,\n                    ...positions\n                });\n            });\n        }, options.reverseData);\n        this.eventEmitter.emit(\"created\", {\n            chartRect,\n            axisX,\n            axisY,\n            svg,\n            options\n        });\n    }\n    /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object that needs to consist of a labels and a series array\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return An object which exposes the API for the created chart\n   *\n   * @example\n   * ```ts\n   * // Create a simple bar chart\n   * const data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new BarChart('.ct-chart', data);\n   * ```\n   *\n   * @example\n   * ```ts\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new BarChart('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   * ```\n   */ constructor(query, data, options, responsiveOptions){\n        super(query, data, defaultOptions$1, extend({}, defaultOptions$1, options), responsiveOptions);\n        this.data = data;\n    }\n}\n\n/**\n * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n */ const defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n        chartPie: \"ct-chart-pie\",\n        chartDonut: \"ct-chart-donut\",\n        series: \"ct-series\",\n        slicePie: \"ct-slice-pie\",\n        sliceDonut: \"ct-slice-donut\",\n        label: \"ct-label\"\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: \"inside\",\n    // An interpolation function for the label value\n    labelInterpolationFnc: noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: \"neutral\",\n    // If true empty values will be ignored to avoid drawing unnecessary slices and labels\n    ignoreEmptyValues: false\n};\n/**\n * Determines SVG anchor position based on direction and center parameter\n */ function determineAnchorPosition(center, label, direction) {\n    const toTheRight = label.x > center.x;\n    if (toTheRight && direction === \"explode\" || !toTheRight && direction === \"implode\") {\n        return \"start\";\n    } else if (toTheRight && direction === \"implode\" || !toTheRight && direction === \"explode\") {\n        return \"end\";\n    } else {\n        return \"middle\";\n    }\n}\nclass PieChart extends BaseChart {\n    /**\n   * Creates the pie chart\n   *\n   * @param options\n   */ createChart(options) {\n        const { data  } = this;\n        const normalizedData = normalizeData(data);\n        const seriesGroups = [];\n        let labelsGroup;\n        let labelRadius;\n        let startAngle = options.startAngle;\n        // Create SVG.js draw\n        const svg = createSvg(this.container, options.width, options.height, options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n        this.svg = svg;\n        // Calculate charting rect\n        const chartRect = createChartRect(svg, options);\n        // Get biggest circle radius possible within chartRect\n        let radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n        // Calculate total of all series to get reference value or use total reference from optional options\n        const totalDataSum = options.total || normalizedData.series.reduce(sum, 0);\n        const donutWidth = quantity(options.donutWidth);\n        if (donutWidth.unit === \"%\") {\n            donutWidth.value *= radius / 100;\n        }\n        // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n        // Unfortunately this is not possible with the current SVG Spec\n        // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n        radius -= options.donut ? donutWidth.value / 2 : 0;\n        // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n        // if regular pie chart it's half of the radius\n        if (options.labelPosition === \"outside\" || options.donut) {\n            labelRadius = radius;\n        } else if (options.labelPosition === \"center\") {\n            // If labelPosition is center we start with 0 and will later wait for the labelOffset\n            labelRadius = 0;\n        } else {\n            // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n            // slice\n            labelRadius = radius / 2;\n        }\n        // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n        if (options.labelOffset) {\n            labelRadius += options.labelOffset;\n        }\n        // Calculate end angle based on total sum and current data value and offset with padding\n        const center = {\n            x: chartRect.x1 + chartRect.width() / 2,\n            y: chartRect.y2 + chartRect.height() / 2\n        };\n        // Check if there is only one non-zero value in the series array.\n        const hasSingleValInSeries = data.series.filter((val)=>safeHasProperty(val, \"value\") ? val.value !== 0 : val !== 0\n        ).length === 1;\n        // Creating the series groups\n        data.series.forEach((_, index)=>seriesGroups[index] = svg.elem(\"g\")\n        );\n        // if we need to show labels we create the label group now\n        if (options.showLabel) {\n            labelsGroup = svg.elem(\"g\");\n        }\n        // Draw the series\n        // initialize series groups\n        data.series.forEach((series, index)=>{\n            var ref, ref1;\n            // If current value is zero and we are ignoring empty values then skip to next value\n            if (normalizedData.series[index] === 0 && options.ignoreEmptyValues) {\n                return;\n            }\n            const seriesName = safeHasProperty(series, \"name\") && series.name;\n            const seriesClassName = safeHasProperty(series, \"className\") && series.className;\n            const seriesMeta = safeHasProperty(series, \"meta\") ? series.meta : undefined;\n            // If the series is an object and contains a name or meta data we add a custom attribute\n            if (seriesName) {\n                seriesGroups[index].attr({\n                    \"ct:series-name\": seriesName\n                });\n            }\n            // Use series class from series data or if not set generate one\n            seriesGroups[index].addClass([\n                (ref = options.classNames) === null || ref === void 0 ? void 0 : ref.series,\n                seriesClassName || \"\".concat((ref1 = options.classNames) === null || ref1 === void 0 ? void 0 : ref1.series, \"-\").concat(alphaNumerate(index))\n            ].join(\" \"));\n            // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n            let endAngle = totalDataSum > 0 ? startAngle + normalizedData.series[index] / totalDataSum * 360 : 0;\n            // Use slight offset so there are no transparent hairline issues\n            const overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n            // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n            // with Z and use 359.99 degrees\n            if (endAngle - overlappigStartAngle >= 359.99) {\n                endAngle = overlappigStartAngle + 359.99;\n            }\n            const start = polarToCartesian(center.x, center.y, radius, overlappigStartAngle);\n            const end = polarToCartesian(center.x, center.y, radius, endAngle);\n            // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n            const path = new SvgPath(!options.donut).move(end.x, end.y).arc(radius, radius, 0, Number(endAngle - startAngle > 180), 0, start.x, start.y);\n            // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n            if (!options.donut) {\n                path.line(center.x, center.y);\n            }\n            // Create the SVG path\n            // If this is a donut chart we add the donut class, otherwise just a regular slice\n            const pathElement = seriesGroups[index].elem(\"path\", {\n                d: path.stringify()\n            }, options.donut ? options.classNames.sliceDonut : options.classNames.slicePie);\n            // Adding the pie series value to the path\n            pathElement.attr({\n                \"ct:value\": normalizedData.series[index],\n                \"ct:meta\": serialize(seriesMeta)\n            });\n            // If this is a donut, we add the stroke-width as style attribute\n            if (options.donut) {\n                pathElement.attr({\n                    style: \"stroke-width: \" + donutWidth.value + \"px\"\n                });\n            }\n            // Fire off draw event\n            this.eventEmitter.emit(\"draw\", {\n                type: \"slice\",\n                value: normalizedData.series[index],\n                totalDataSum: totalDataSum,\n                index,\n                meta: seriesMeta,\n                series,\n                group: seriesGroups[index],\n                element: pathElement,\n                path: path.clone(),\n                center,\n                radius,\n                startAngle,\n                endAngle,\n                chartRect\n            });\n            // If we need to show labels we need to add the label for this slice now\n            if (options.showLabel) {\n                let labelPosition;\n                if (data.series.length === 1) {\n                    // If we have only 1 series, we can position the label in the center of the pie\n                    labelPosition = {\n                        x: center.x,\n                        y: center.y\n                    };\n                } else {\n                    // Position at the labelRadius distance from center and between start and end angle\n                    labelPosition = polarToCartesian(center.x, center.y, labelRadius, startAngle + (endAngle - startAngle) / 2);\n                }\n                let rawValue;\n                if (normalizedData.labels && !isFalseyButZero(normalizedData.labels[index])) {\n                    rawValue = normalizedData.labels[index];\n                } else {\n                    rawValue = normalizedData.series[index];\n                }\n                const interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n                if (interpolatedValue || interpolatedValue === 0) {\n                    const labelElement = labelsGroup.elem(\"text\", {\n                        dx: labelPosition.x,\n                        dy: labelPosition.y,\n                        \"text-anchor\": determineAnchorPosition(center, labelPosition, options.labelDirection)\n                    }, options.classNames.label).text(String(interpolatedValue));\n                    // Fire off draw event\n                    this.eventEmitter.emit(\"draw\", {\n                        type: \"label\",\n                        index,\n                        group: labelsGroup,\n                        element: labelElement,\n                        text: \"\" + interpolatedValue,\n                        chartRect,\n                        series,\n                        meta: seriesMeta,\n                        ...labelPosition\n                    });\n                }\n            }\n            // Set next startAngle to current endAngle.\n            // (except for last slice)\n            startAngle = endAngle;\n        });\n        this.eventEmitter.emit(\"created\", {\n            chartRect,\n            svg: svg,\n            options\n        });\n    }\n    /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   *\n   * @example\n   * ```ts\n   * // Simple pie chart example with four series\n   * new PieChart('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Drawing a donut chart\n   * new PieChart('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new PieChart('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new PieChart('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new PieChart('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   * ```\n   */ constructor(query, data, options, responsiveOptions){\n        super(query, data, defaultOptions, extend({}, defaultOptions, options), responsiveOptions);\n        this.data = data;\n    }\n}\n\nexports.AutoScaleAxis = AutoScaleAxis;\nexports.Axis = Axis;\nexports.BarChart = BarChart;\nexports.BaseChart = BaseChart;\nexports.EPSILON = EPSILON;\nexports.EventEmitter = EventEmitter;\nexports.FixedScaleAxis = FixedScaleAxis;\nexports.Interpolation = index;\nexports.LineChart = LineChart;\nexports.PieChart = PieChart;\nexports.StepAxis = StepAxis;\nexports.Svg = Svg;\nexports.SvgList = SvgList;\nexports.SvgPath = SvgPath;\nexports.alphaNumerate = alphaNumerate;\nexports.axisUnits = axisUnits;\nexports.createChartRect = createChartRect;\nexports.createGrid = createGrid;\nexports.createGridBackground = createGridBackground;\nexports.createLabel = createLabel;\nexports.createSvg = createSvg;\nexports.deserialize = deserialize;\nexports.determineAnchorPosition = determineAnchorPosition;\nexports.each = each;\nexports.easings = easings;\nexports.ensureUnit = ensureUnit;\nexports.escapingMap = escapingMap;\nexports.extend = extend;\nexports.getBounds = getBounds;\nexports.getHighLow = getHighLow;\nexports.getMetaData = getMetaData;\nexports.getMultiValue = getMultiValue;\nexports.getNumberOrUndefined = getNumberOrUndefined;\nexports.getSeriesOption = getSeriesOption;\nexports.isArrayOfArrays = isArrayOfArrays;\nexports.isArrayOfSeries = isArrayOfSeries;\nexports.isDataHoleValue = isDataHoleValue;\nexports.isFalseyButZero = isFalseyButZero;\nexports.isMultiValue = isMultiValue;\nexports.isNumeric = isNumeric;\nexports.namespaces = namespaces;\nexports.noop = noop;\nexports.normalizeData = normalizeData;\nexports.normalizePadding = normalizePadding;\nexports.optionsProvider = optionsProvider;\nexports.orderOfMagnitude = orderOfMagnitude;\nexports.polarToCartesian = polarToCartesian;\nexports.precision = precision;\nexports.projectLength = projectLength;\nexports.quantity = quantity;\nexports.rho = rho;\nexports.roundWithPrecision = roundWithPrecision;\nexports.safeHasProperty = safeHasProperty;\nexports.serialMap = serialMap;\nexports.serialize = serialize;\nexports.splitIntoSegments = splitIntoSegments;\nexports.sum = sum;\nexports.times = times;\n//# sourceMappingURL=index.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"js/dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkulogger_server\"] = self[\"webpackChunkulogger_server\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default class uAjax {\n\n  /**\n   * Perform POST HTTP request\n   * @alias ajax\n   */\n  static post(url, data, options) {\n    const params = options || {};\n    params.method = 'POST';\n    return this.ajax(url, data, params);\n  }\n\n  /**\n   * Perform GET HTTP request\n   * @alias ajax\n   */\n  static get(url, data, options) {\n    const params = options || {};\n    params.method = 'GET';\n    return this.ajax(url, data, params);\n  }\n\n  /**\n   * Perform ajax HTTP request\n   * @param {string} url Request URL\n   * @param {Object|HTMLFormElement|FormData} [data] Optional request parameters: key/value pairs or form element\n   * @param {Object} [options] Optional options\n   * @param {string} [options.method='GET'] Optional query method, default 'GET'\n   * @return {Promise<Object, Error>}\n   */\n  static ajax(url, data, options) {\n    const params = [];\n    data = data || {};\n    options = options || {};\n    const method = options.method || 'GET';\n    const xhr = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== XMLHttpRequest.DONE) { return; }\n        let message = '';\n        let error = true;\n        if (xhr.status === 200) {\n          try {\n            const obj = JSON.parse(xhr.responseText);\n            if (obj) {\n              if (!obj.error) {\n                if (resolve && typeof resolve === 'function') {\n                  resolve(obj);\n                }\n                error = false;\n              } else if (obj.message) {\n                  message = obj.message;\n              }\n            }\n          } catch (err) {\n            message = err.message;\n          }\n        } else {\n          message = `HTTP error ${xhr.status}`;\n        }\n        if (error && reject && typeof reject === 'function') {\n          reject(new Error(message));\n        }\n      };\n      if (data instanceof HTMLFormElement) {\n        data = new FormData(data);\n      }\n      let body;\n      if (data instanceof FormData) {\n        if (method === 'POST') {\n          body = data;\n        } else {\n          body = new URLSearchParams(data).toString();\n        }\n      } else {\n        for (const key in data) {\n          if (data.hasOwnProperty(key)) {\n            if (Array.isArray(data[key])) {\n              for (const value of data[key]) {\n                params.push(`${key}[]=${this.encodeValue(value)}`);\n              }\n            } else {\n              params.push(`${key}=${this.encodeValue(data[key])}`);\n            }\n          }\n        }\n        body = params.join('&');\n        body = body.replace(/%20/g, '+');\n      }\n      if (method === 'GET' && body.length) {\n        url += `?${body}`;\n        body = null;\n      }\n      xhr.open(method, url, true);\n      if (method === 'POST' && !(data instanceof FormData)) {\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n      }\n      xhr.send(body);\n    });\n  }\n\n  static encodeValue(value) {\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n    return encodeURIComponent(value);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\n/* eslint-disable no-underscore-dangle */\nexport default class uObserve {\n\n  /**\n   * Observe object's property or all properties if not specified.\n   * On change call observer function.\n   * observe(obj, prop, observer) observes given property prop;\n   * observe(obj, observer) observes all properties of object obj.\n   * @param {Object} obj\n   * @param {(string|ObserveCallback)} p1\n   * @param {ObserveCallback=} p2\n   */\n  static observe(obj, p1, p2) {\n    if (typeof obj !== 'object' || obj === null) {\n      throw new Error('Invalid argument: invalid object');\n    }\n    if (typeof p2 === 'function') {\n      this.observeProperty(obj, p1, p2);\n    } else if (typeof p1 === 'function') {\n      this.observeRecursive(obj, p1);\n    } else {\n      throw new Error('Invalid argument for observe');\n    }\n  }\n\n  /**\n   * Notify callback\n   * @callback ObserveCallback\n   * @param {*} value\n   */\n\n  /**\n   * Notify observers\n   * @param {Set<ObserveCallback>} observers\n   * @param {*} value\n   */\n  static notify(observers, value) {\n    for (const observer of observers) {\n      (async () => {\n        await observer(value);\n      })();\n    }\n  }\n\n  /**\n   * Trigger notify of property observers\n   * @param {Object} obj\n   * @param {string} property\n   */\n  static forceUpdate(obj, property) {\n    const value = obj._values[property];\n    const observers = obj._observers[property];\n    this.notify(observers, value);\n  }\n\n  /**\n   * Check if object property is observed;\n   * Optionally check if it is observed by given observer\n   * @param {Object} obj\n   * @param {string} property\n   * @param {Function=} observer\n   * @return {boolean}\n   */\n  static isObserved(obj, property, observer) {\n    if (typeof obj !== 'object' || obj === null || !obj.hasOwnProperty(property)) {\n      return false;\n    }\n    const isObserved = !!(obj._observers && obj._observers[property] && obj._observers[property].size > 0);\n    if (isObserved && observer) {\n      return obj._observers[property].has(observer);\n    }\n    return isObserved;\n  }\n\n  /**\n   * Set observed property value without notifying observers\n   * @param {Object} obj\n   * @param {string} property\n   * @param {*} value\n   */\n  static setSilently(obj, property, value) {\n    if (!obj.hasOwnProperty(property)) {\n      throw new Error(`Invalid argument: object does not have property \"${property}\"`);\n    }\n    if (this.isObserved(obj, property)) {\n      obj._values[property] = value;\n      if (Array.isArray(obj[property])) {\n        for (const obs of obj._observers[property]) {\n          this.observeArray(obj[property], obs);\n        }\n      }\n    } else {\n      obj[property] = value;\n    }\n  }\n\n  /**\n   * Observe object's property. On change call observer\n   * @param {Object} obj\n   * @param {string} property\n   * @param {ObserveCallback} observer\n   */\n  static observeProperty(obj, property, observer) {\n    if (!obj.hasOwnProperty(property)) {\n      throw new Error(`Invalid argument: object does not have property \"${property}\"`);\n    }\n    if (this.isObserved(obj, property, observer)) {\n      throw new Error(`Observer already registered for property ${property}`);\n    }\n    this.addObserver(obj, observer, property);\n    if (!obj.hasOwnProperty('_values')) {\n      Object.defineProperty(obj, '_values', { enumerable: false, configurable: false, value: {} });\n    }\n    obj._values[property] = obj[property];\n    Object.defineProperty(obj, property, {\n      get: () => obj._values[property],\n      set: (newValue) => {\n        if (obj._values[property] !== newValue) {\n          obj._values[property] = newValue;\n          console.log(`${property} = ` + (Array.isArray(newValue) && newValue.length ? `[${newValue[0]}, …](${newValue.length})` : newValue));\n          uObserve.notify(obj._observers[property], newValue);\n        }\n        if (Array.isArray(obj[property])) {\n          this.observeArray(obj[property], obj._observers[property]);\n        }\n      }\n    });\n    if (Array.isArray(obj[property])) {\n      this.observeArray(obj[property], observer);\n    }\n  }\n\n  /**\n   * Recursively add observer to all properties\n   * @param {Object} obj\n   * @param {ObserveCallback} observer\n   */\n  static observeRecursive(obj, observer) {\n    if (Array.isArray(obj)) {\n      this.observeArray(obj, observer);\n    } else {\n      for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          uObserve.observeProperty(obj, prop, observer);\n        }\n      }\n    }\n  }\n\n  /**\n   * Observe array\n   * @param {Object} arr\n   * @param {(ObserveCallback|Set<ObserveCallback>)} observer\n   */\n  static observeArray(arr, observer) {\n    if (observer instanceof Set) {\n      for (const obs of observer) {\n        this.addObserver(arr, obs);\n      }\n    } else {\n      this.addObserver(arr, observer);\n    }\n    this.overrideArrayPrototypes(arr, arguments);\n  }\n\n  /**\n   * Store observer in object\n   * @param {Object} obj Object\n   * @param {ObserveCallback} observer Observer\n   * @param {string=} property Optional property\n   */\n  static addObserver(obj, observer, property) {\n    if (!obj.hasOwnProperty('_observers')) {\n      Object.defineProperty(obj, '_observers', {\n        enumerable: false,\n        configurable: false,\n        value: (arguments.length === 3) ? [] : new Set()\n      });\n    }\n    if (arguments.length === 3) {\n      if (!obj._observers[property]) {\n        obj._observers[property] = new Set();\n      }\n      obj._observers[property].add(observer);\n    } else {\n      obj._observers.add(observer);\n    }\n  }\n\n  /**\n   * Remove observer from object's property or all it's properties\n   * unobserve(obj, prop, observer) unobserves given property prop;\n   * unobserve(obj, observer) unobserves all properties of object obj.\n   * @param {Object} obj\n   * @param {(string|ObserveCallback)} p1\n   * @param {ObserveCallback=} p2\n   */\n  static unobserve(obj, p1, p2) {\n    if (typeof p2 === 'function') {\n      this.unobserveProperty(obj, p1, p2);\n    } else if (typeof p1 === 'function') {\n      if (Array.isArray(obj)) {\n        this.unobserveArray(obj, p1);\n      } else {\n        this.unobserveRecursive(obj, p1);\n      }\n    } else {\n      throw new Error('Invalid argument for unobserve');\n    }\n  }\n\n  /**\n   * Remove all observers from object's property or all it's properties\n   * unobserveAll(obj, prop) removes all observes from given property prop;\n   * unobserveAll(obj) removes all observers from all properties of object obj.\n   * @param {Object} obj\n   * @param {string=} property\n   */\n  static unobserveAll(obj, property) {\n    if (arguments.length === 1) {\n      for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          this.unobserveAll(obj, prop);\n        }\n      }\n    } else if (this.isObserved(obj, property)) {\n      console.log(`Removing all observers for ${property}…`);\n      if (Array.isArray(obj[property])) {\n        this.restoreArrayPrototypes(obj[property]);\n      } else if (typeof obj[property] === 'object' && obj[property] !== null) {\n        for (const prop in obj[property]) {\n          if (obj[property].hasOwnProperty(prop)) {\n            this.unobserveAll(obj[property], prop);\n          }\n        }\n      }\n      delete obj._observers[property];\n      delete obj[property];\n      obj[property] = obj._values[property];\n      delete obj._values[property];\n    }\n  }\n\n  /**\n   * Remove observer from object's property\n   * @param {Object} obj\n   * @param {?string} property\n   * @param {ObserveCallback} observer\n   */\n  static unobserveProperty(obj, property, observer) {\n    if (Array.isArray(obj[property])) {\n      this.unobserveArray(obj[property], observer);\n    }\n    this.removeObserver(obj, observer, property);\n    if (!obj._observers[property].size) {\n      delete obj[property];\n      obj[property] = obj._values[property];\n      delete obj._values[property];\n    }\n  }\n\n  /**\n   * Recursively remove observers from all properties\n   * @param {Object} obj\n   * @param {ObserveCallback} observer\n   */\n  static unobserveRecursive(obj, observer) {\n    for (const prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        uObserve.unobserveProperty(obj, prop, observer);\n      }\n    }\n  }\n\n  /**\n   * Remove observer from array\n   * @param {Object} arr\n   * @param {ObserveCallback} observer\n   */\n  static unobserveArray(arr, observer) {\n    this.removeObserver(arr, observer);\n    if (!arr._observers.size) {\n      this.restoreArrayPrototypes(arr);\n    }\n  }\n\n  /**\n   * @param {Object} arr\n   */\n  static overrideArrayPrototypes(arr) {\n    [ 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift' ].forEach(\n      (operation) => {\n        const descriptor = Object.getOwnPropertyDescriptor(Array.prototype, operation);\n        if (!arr.hasOwnProperty(operation)) {\n          descriptor.value = function () {\n            const result = Array.prototype[operation].apply(arr, arguments);\n            console.log(`[${operation}] ` + (arr.length ? `[${arr[0]}, …](${arr.length})` : arr));\n            uObserve.notify(arr._observers, arr);\n            return result;\n          };\n          Object.defineProperty(arr, operation, descriptor);\n        }\n      });\n  }\n\n  /**\n   * @param {Object} arr\n   */\n  static restoreArrayPrototypes(arr) {\n    [ 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift' ].forEach(\n      (operation) => {\n        delete arr[operation];\n      });\n  }\n\n  /**\n   * Remove observer from object's property\n   * @param {Object} obj Object\n   * @param {string} property Optional property\n   * @param {ObserveCallback} observer Observer\n   */\n  static removeObserver(obj, observer, property) {\n    if (!obj.hasOwnProperty('_observers')) {\n      return;\n    }\n    let observers;\n    if (arguments.length === 3) {\n      if (!obj._observers[property]) {\n        return;\n      }\n      observers = obj._observers[property];\n      console.log(`Removing observer for ${property}…`);\n    } else {\n      observers = obj._observers;\n      console.log('Removing observer for object…');\n    }\n    observers.forEach((obs) => {\n      if (obs === observer) {\n        console.log('Removed');\n        observers.delete(obs);\n      }\n    });\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uObserve from './observe.js';\n\nexport default class uSelect {\n\n  /**\n   * @param {HTMLSelectElement} element Select element\n   * @param {string=} head Optional header text\n   * @param {string=} all Optional all option text\n   */\n  constructor(element, head, all) {\n    if (!(element instanceof HTMLSelectElement)) {\n      throw new Error('Invalid argument for select');\n    }\n    this.element = element;\n    this.hasAllOption = false;\n    this.allText = '';\n    if (all && all.length) {\n      this.allText = all;\n    }\n    if (head && head.length) {\n      this.head = head;\n    } else {\n      this.hasHead = false;\n      this.headText = '';\n    }\n  }\n\n  /**\n   * @param {string} value\n   */\n  set selected(value) {\n    if (this.hasValue(value)) {\n      this.element.value = value;\n    }\n  }\n\n  get selected() {\n    return this.element.value;\n  }\n\n  /**\n   * @param {string} text\n   */\n  set head(text) {\n    if (text.length) {\n      this.hasHead = true;\n      this.headText = text;\n      this.addHead();\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  get head() {\n    return this.headText;\n  }\n\n  /**\n   * @param {string=} text Optional text\n   */\n  showAllOption(text) {\n    if (text) {\n      this.allText = text;\n    }\n    this.hasAllOption = true;\n    const index = this.hasHead ? 1 : 0;\n    this.element.add(new Option(this.allText, uSelect.allValue), index);\n  }\n\n  hideAllOption() {\n    const isSelectedAll = this.selected === uSelect.allValue;\n    this.hasAllOption = false;\n    this.remove(uSelect.allValue);\n    if (isSelectedAll) {\n      this.selected = this.hasHead ? uSelect.headValue : '';\n      this.element.dispatchEvent(new Event('change'));\n    }\n  }\n\n  addHead() {\n    const head = new Option(this.headText, uSelect.headValue, true, true);\n    head.disabled = true;\n    this.element.options.add(head, 0);\n  }\n\n  /**\n   * @param {string} value\n   * @return {boolean}\n   */\n  hasValue(value) {\n    return (typeof this.getOption(value) !== 'undefined');\n  }\n\n  /**\n   * @param {string} value\n   */\n  getOption(value) {\n    return [ ...this.element.options ].find((o) => o.value === value);\n  }\n\n  /**\n   * @param {string} value\n   */\n  remove(value) {\n    /** @type HTMLOptionElement */\n    const option = this.getOption(value);\n    if (option) {\n      this.element.remove(option.index);\n    }\n  }\n\n  /**\n   * @param {uListItem[]} options\n   * @param {string=} selected\n   */\n  setOptions(options, selected) {\n    selected = selected || this.element.value;\n    this.element.options.length = 0;\n    if (this.hasHead) {\n      this.addHead();\n    }\n    if (this.hasAllOption) {\n      this.element.add(new Option(this.allText, uSelect.allValue, false, selected === uSelect.allValue));\n    }\n    for (const option of options) {\n      const optEl = new Option(option.listText, option.listValue, false, selected === option.listValue);\n      this.element.add(optEl);\n      uObserve.observe(option, 'listText', (text) => {\n        optEl.text = text;\n      })\n    }\n  }\n\n  static get allValue() {\n    return 'all';\n  }\n\n  static get headValue() {\n    return '0';\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uSelect from './select.js';\n\n/**\n * @class uListItem\n * @property {string} listValue\n * @property {string} listText\n */\nexport default class uListItem {\n  /**\n   * @param {string|number} id\n   * @param {string|number} value\n   */\n  constructor() {\n    this.listValue = uSelect.allValue;\n    this.listText = '-';\n  }\n\n  listItem(id, value) {\n    this.listValue = String(id);\n    this.listText = String(value);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `[${this.listValue}, ${this.listText}]`;\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default class uUtils {\n\n  /**\n   * Set cookie\n   * @param {string} name\n   * @param {(string|number)} value\n   * @param {?number=} days Default validity is 30 days, null = never expire\n   */\n  static setCookie(name, value, days = 30) {\n    let expires = '';\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = `; expires=${date.toUTCString()}`;\n    }\n    document.cookie = `ulogger_${name}=${value}${expires}; path=/; samesite=lax`;\n  }\n\n  /**\n   * sprintf, naive approach, only %s, %d supported\n   * @param {string} fmt String\n   * @param {...(string|number)=} params Optional parameters\n   * @returns {string}\n   */\n  static sprintf(fmt, ...params) {\n    let i = 0;\n    const ret = fmt.replace(/%%|%s|%d/g, (match) => {\n      if (match === '%%') {\n        return '%';\n      } else if (match === '%d' && isNaN(params[i]) && typeof params[i] !== 'undefined') {\n        throw new Error(`Wrong format specifier ${match} for ${params[i]} argument`);\n      }\n      if (typeof params[i] === 'undefined') {\n        throw new Error(`Missing argument for format specifier ${match}`);\n      }\n      return params[i++];\n    });\n    if (i < params.length) {\n      throw new Error(`Unused argument for format specifier ${fmt}`);\n    }\n    return ret;\n  }\n\n  /**\n   * Add script tag\n   * @param {string} url attribute\n   * @param {string} id attribute\n   * @param {Function=} onload\n   * @param {Function=} onerror\n   */\n  // eslint-disable-next-line max-params\n  static addScript(url, id, onload, onerror) {\n    if (id && document.getElementById(id)) {\n      if (onload instanceof Function) {\n        onload();\n      }\n      return;\n    }\n    const tag = document.createElement('script');\n    tag.type = 'text/javascript';\n    tag.src = url;\n    if (id) {\n      tag.id = id;\n    }\n    tag.async = true;\n    if (onload instanceof Function) {\n      tag.onload = onload;\n    }\n    if (onerror instanceof Function) {\n      tag.onerror = () => onerror(new Error(`error loading ${id} script`));\n    }\n\n    document.getElementsByTagName('head')[0].appendChild(tag);\n  }\n\n  /**\n   * Load script with timeout\n   * @param {string} url URL\n   * @param {string} id Element id\n   * @param {number=} ms Timeout in ms\n   * @return {Promise<void, Error>}\n   */\n  static loadScript(url, id, ms = 10000) {\n    const scriptLoaded = new Promise(\n      (resolve, reject) => uUtils.addScript(url, id, resolve, reject));\n    const timeout = this.timeoutPromise(ms);\n    return Promise.race([ scriptLoaded, timeout ]);\n  }\n\n  /**\n   * Promise rejected after given time\n   * @param {number} ms Time in milliseconds\n   * @return {Promise<void, Error>}\n   */\n  static timeoutPromise(ms) {\n    return new Promise((resolve, reject) => {\n      const tid = setTimeout(() => {\n        clearTimeout(tid);\n        reject(new Error(`timeout (${ms} ms).`));\n      }, ms);\n    });\n  }\n\n  /**\n   * Encode string for HTML\n   * @param {string} s\n   * @returns {string}\n   */\n  static htmlEncode(s) {\n    return s.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Convert hex string and opacity to an rgba string\n   * @param {string} hex\n   * @param {number=} opacity\n   * @returns {string}\n   */\n  static hexToRGBA(hex, opacity) {\n    opacity = typeof opacity !== 'undefined' ? opacity : 1;\n    return `rgba(${(hex = hex.replace('#', ''))\n      .match(new RegExp(`(.{${hex.length / 3}})`, 'g'))\n      .map((l) => parseInt(hex.length % 2 ? l + l : l, 16))\n      .concat(opacity).join(',')})`;\n  }\n\n  /**\n   * Get rgb color for given scale and intensity\n   * @param {number[]} start Minimum scale color as [ r, g, b ]\n   * @param {number[]} end Maximum scale color as [ r, g, b ]\n   * @param {number} intensity Intensity from 0 to 1\n   * @return {string} Color as rgb() string\n   */\n  static getScaleColor(start, end, intensity) {\n    if (intensity < 0 || intensity > 1) {\n      throw new Error('Invalid value');\n    }\n    const rgb = [];\n    for (let i = 0; i < 3; i++) {\n      if (start[i] < 0 || start[i] > 255 || end[i] < 0 || end[i] > 255) {\n        throw new Error('Invalid value');\n      }\n      rgb[i] = Math.round((end[i] - start[i]) * intensity + start[i]);\n    }\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n  }\n\n  /**\n   * Add link tag with type css\n   * @param {string} url attribute\n   * @param {string=} id attribute\n   */\n  static addCss(url, id) {\n    if (id && document.getElementById(id)) {\n      return;\n    }\n    const tag = document.createElement('link');\n    tag.type = 'text/css';\n    tag.rel = 'stylesheet';\n    tag.href = url;\n    if (id) {\n      tag.id = id;\n    }\n    document.getElementsByTagName('head')[0].appendChild(tag);\n  }\n\n  /**\n   * Remove HTML element\n   * @param {string} id Element ID\n   */\n  static removeElementById(id) {\n    const tag = document.getElementById(id);\n    if (tag) {\n      tag.remove();\n    }\n  }\n\n  /**\n   * @param {string} html HTML representing a single element\n   * @return {Node|NodeList}\n   */\n  static nodeFromHtml(html) {\n    const template = document.createElement('template');\n    template.innerHTML = html.trim();\n    return template.content.childNodes.length > 1 ? template.content.childNodes : template.content.firstChild;\n  }\n\n  /**\n   * @throws On invalid input\n   * @param {*} input\n   * @param {boolean=} isNullable\n   * @return {(null|number)}\n   */\n  static getFloat(input, isNullable = false) {\n    return uUtils.getParsed(input, isNullable, 'float');\n  }\n\n  /**\n   * @throws On invalid input\n   * @param {*} input\n   * @param {boolean=} isNullable\n   * @return {(null|number)}\n   */\n  static getInteger(input, isNullable = false) {\n    return uUtils.getParsed(input, isNullable, 'int');\n  }\n\n  /**\n   * @throws On invalid input\n   * @param {*} input\n   * @param {boolean=} isNullable\n   * @return {(null|string)}\n   */\n  static getString(input, isNullable = false) {\n    return uUtils.getParsed(input, isNullable, 'string');\n  }\n\n  /**\n   * @throws On invalid input\n   * @param {*} input\n   * @param {boolean} isNullable\n   * @param {string} type\n   * @return {(null|number|string)}\n   */\n  static getParsed(input, isNullable, type) {\n    if (isNullable && input === null) {\n      return null;\n    }\n    let output;\n    switch (type) {\n      case 'float':\n        output = parseFloat(input);\n        break;\n      case 'int':\n        output = Math.round(parseFloat(input));\n        break;\n      case 'string':\n        output = String(input);\n        break;\n      default:\n        throw new Error('Unknown type');\n    }\n    if (typeof input === 'undefined' || input === null ||\n      (type !== 'string' && isNaN(output))) {\n      throw new Error('Invalid value');\n    }\n    return output;\n  }\n\n  /**\n   * Format date to date, time and time zone strings\n   * Simplify zone name, eg.\n   * date: 2017-06-14, time: 11:42:19, zone: GMT+2 CEST\n   * @param {Date} date\n   * @return {{date: string, time: string, zone: string}}\n   */\n  static getTimeString(date) {\n    let timeZone = '';\n    const dateStr = `${date.getFullYear()}-${(`0${date.getMonth() + 1}`).slice(-2)}-${(`0${date.getDate()}`).slice(-2)}`;\n    const timeStr = date.toTimeString().replace(/^\\s*([^ ]+)([^(]*)(\\([^)]*\\))*/,\n      // eslint-disable-next-line max-params\n      (_, hours, zone, dst) => {\n        if (zone) {\n          timeZone = zone.replace(/(0(?=[1-9]00))|(00\\b)/g, '');\n          if (dst && (/[A-Z]/).test(dst)) {\n            timeZone += dst.match(/\\b[A-Z]+/g).join('');\n          }\n        }\n        return hours;\n      });\n    return { date: dateStr, time: timeStr, zone: timeZone };\n  }\n\n  /**\n   * @param {string} url\n   */\n  static openUrl(url) {\n    window.location.assign(url);\n  }\n\n  /**\n   * Degrees to radians\n   * @param {number} degrees\n   * @return {number}\n   */\n  static deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n  }\n\n  /**\n   * Recursively compare properties of two objects with same keys\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @return {boolean} True if properties are equal\n   */\n  static isDeepEqual(obj1, obj2) {\n    return Object.keys(obj1).every((key) => {\n      if (typeof obj1[key] === 'object' && obj1[key] !== null &&\n        typeof obj2[key] === 'object' && obj2[key] !== null) {\n        return this.isDeepEqual(obj1[key], obj2[key]);\n      }\n      return obj1[key] === obj2[key];\n    })\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uUtils from './utils.js';\n\n/**\n * @class uPosition\n * @property {number} id\n * @property {number} latitude\n * @property {number} longitude\n * @property {?number} altitude\n * @property {?number} speed\n * @property {?number} bearing\n * @property {?number} accuracy\n * @property {?string} provider\n * @property {?string} comment\n * @property {?string} image\n * @property {string} username\n * @property {string} trackname\n * @property {number} trackid\n * @property {number} timestamp\n * @property {number} meters Distance to previous position\n * @property {number} seconds Time difference to previous position\n * @property {number} totalMeters Distance to first position\n * @property {number} totalSeconds Time difference to first position\n */\nexport default class uPosition {\n\n  /**\n   * @throws On invalid input\n   * @param {Object} pos\n   * @returns {uPosition}\n   */\n  static fromJson(pos) {\n    const position = new uPosition();\n    position.id = uUtils.getInteger(pos.id);\n    position.latitude = uUtils.getFloat(pos.latitude);\n    position.longitude = uUtils.getFloat(pos.longitude);\n    position.altitude = uUtils.getInteger(pos.altitude, true); // may be null\n    position.speed = uUtils.getFloat(pos.speed, true); // may be null\n    position.bearing = uUtils.getInteger(pos.bearing, true); // may be null\n    position.accuracy = uUtils.getInteger(pos.accuracy, true); // may be null\n    position.provider = uUtils.getString(pos.provider, true); // may be null\n    position.comment = uUtils.getString(pos.comment, true); // may be null\n    position.image = uUtils.getString(pos.image, true); // may be null\n    position.username = uUtils.getString(pos.username);\n    position.trackname = uUtils.getString(pos.trackname);\n    position.trackid = uUtils.getInteger(pos.trackid);\n    position.timestamp = uUtils.getInteger(pos.timestamp);\n    position.meters = uUtils.getInteger(pos.meters);\n    position.seconds = uUtils.getInteger(pos.seconds);\n    position.totalMeters = 0;\n    position.totalSeconds = 0;\n    return position;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasComment() {\n    return (this.comment != null && this.comment.length > 0);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasImage() {\n    return (this.image != null && this.image.length > 0);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasSpeed() {\n    return this.speed != null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasAltitude() {\n    return this.altitude != null;\n  }\n\n  /**\n   * @return {?string}\n   */\n  getImagePath() {\n    return this.hasImage() ? `uploads/${this.image}` : null;\n  }\n\n  /**\n   * Get total speed in m/s\n   * @return {number}\n   */\n  get totalSpeed() {\n    return this.totalSeconds ? this.totalMeters / this.totalSeconds : 0;\n  }\n\n  /**\n   * @return {Promise<void, Error>}\n   */\n  delete() {\n    return uPosition.update({\n      action: 'delete',\n      posid: this.id\n    });\n  }\n\n  /**\n   * @return {Promise<void, Error>}\n   */\n  save() {\n    return uPosition.update({\n      action: 'update',\n      posid: this.id,\n      comment: this.comment\n    });\n  }\n\n  /**\n   * @return {Promise<void, Error>}\n   */\n  imageDelete() {\n    return uPosition.update({\n      action: 'imagedel',\n      posid: this.id\n    }).then(() => { this.image = null; });\n  }\n\n  /**\n   * @param {File} imageFile\n   * @return {Promise<void, Error>}\n   */\n  imageAdd(imageFile) {\n    const data = new FormData();\n    data.append('image', imageFile);\n    data.append('action', 'imageadd');\n    data.append('posid', this.id);\n    return uPosition.update(data).then(\n      /**\n       * @param {Object} result\n       * @param {string} result.image\n       */\n      (result) => { this.image = result.image; });\n  }\n\n  /**\n   * Save track data\n   * @param {Object} data\n   * @return {Promise<void|Object, Error>}\n   */\n  static update(data) {\n    return uAjax.post('utils/handleposition.php', data);\n  }\n\n  /**\n   * Calculate distance to target point using haversine formula\n   * @param {uPosition} target\n   * @return {number} Distance in meters\n   */\n  distanceTo(target) {\n    const lat1 = uUtils.deg2rad(this.latitude);\n    const lon1 = uUtils.deg2rad(this.longitude);\n    const lat2 = uUtils.deg2rad(target.latitude);\n    const lon2 = uUtils.deg2rad(target.longitude);\n    const latD = lat2 - lat1;\n    const lonD = lon2 - lon1;\n    const bearing = 2 * Math.asin(Math.sqrt((Math.sin(latD / 2) ** 2) + Math.cos(lat1) * Math.cos(lat2) * (Math.sin(lonD / 2) ** 2)));\n    return bearing * 6371000;\n  }\n\n  /**\n   * Calculate time elapsed since target point\n   * @param {uPosition} target\n   * @return {number} Number of seconds\n   */\n  secondsTo(target) {\n    return this.timestamp - target.timestamp;\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uListItem from './listitem.js';\nimport uPosition from './position.js';\n\n/**\n * Set of unrelated positions\n * @class uPositionSet\n * @property {uPosition[]} positions\n */\nexport default class uPositionSet extends uListItem {\n\n  constructor() {\n    super();\n    this.positions = [];\n  }\n\n  clear() {\n    this.positions.length = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  get length() {\n    return this.positions.length;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasPositions() {\n    return this.positions.length > 0;\n  }\n\n  // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  isLastPosition(id) {\n    return true;\n  }\n\n  // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  isFirstPosition(id) {\n    return true;\n  }\n\n  /**\n   * Get track data from json\n   * @param {Object[]} posArr Positions data\n   * @param {boolean=} isUpdate If true append to old data\n   */\n  fromJson(posArr, isUpdate = false) {\n    let positions = [];\n    if (isUpdate) {\n      positions = this.positions;\n    } else {\n      this.clear();\n    }\n    for (const pos of posArr) {\n      positions.push(uPosition.fromJson(pos));\n    }\n    // update at the end to avoid observers update invidual points\n    this.positions = positions;\n  }\n\n  /**\n   * Fetch latest position of each user.\n   * @return {Promise<void, Error>}\n   */\n  fetchLatest() {\n    this.clear();\n    return uPositionSet.fetch({ last: true }).then((_positions) => {\n      this.fromJson(_positions);\n    });\n  }\n\n  /**\n   * Fetch latest position of each user.\n   * @return {Promise<?uPositionSet, Error>}\n   */\n  static fetchLatest() {\n    const set = new uPositionSet();\n    return set.fetchLatest().then(() => {\n      if (set.length) {\n        return set;\n      }\n      return null;\n    });\n  }\n\n  /**\n   * @param params\n   * @return {Promise<Object[], Error>}\n   */\n  static fetch(params) {\n    return uAjax.get('utils/getpositions.php', params);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uPosition from './position.js';\nimport uPositionSet from './positionset.js';\nimport uUser from './user.js';\nimport uUtils from './utils.js';\n\n/**\n * Set of positions representing user's track\n * @class uTrack\n * @property {number} id\n * @property {string} name\n * @property {uUser} user\n * @property {uPosition[]} positions\n * @property {PlotData} plotData\n */\nexport default class uTrack extends uPositionSet {\n\n  /**\n   * @param {number} id\n   * @param {string} name\n   * @param {uUser} user\n   */\n  constructor(id, name, user) {\n    super();\n    if (!Number.isSafeInteger(id) || id <= 0 || !name || !(user instanceof uUser)) {\n      throw new Error('Invalid argument for track constructor');\n    }\n    this.id = id;\n    this.name = name;\n    this.user = user;\n    this.plotData = [];\n    this.maxId = 0;\n    this.maxSpeed = 0;\n    this.maxAltitude = null;\n    this.minAltitude = null;\n    this.totalMeters = 0;\n    this.totalSeconds = 0;\n    this.listItem(id, name);\n  }\n\n  setName(name) {\n    this.name = name;\n    this.listText = name;\n  }\n\n  clear() {\n    super.clear();\n    this.clearTrackCounters();\n  }\n\n  clearTrackCounters() {\n    this.maxId = 0;\n    this.maxSpeed = 0;\n    this.maxAltitude = null;\n    this.minAltitude = null;\n    this.plotData.length = 0;\n    this.totalMeters = 0;\n    this.totalSeconds = 0;\n  }\n\n  /**\n   * @param {uTrack} track\n   * @return {boolean}\n   */\n  isEqualTo(track) {\n    return !!track && track.id === this.id;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasPlotData() {\n    return this.plotData.length > 0;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasAltitudes() {\n    return this.maxAltitude !== null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasSpeeds() {\n    return this.maxSpeed > 0;\n  }\n\n  /**\n   * Get track data from json\n   * @param {Object[]} posArr Positions data\n   * @param {boolean=} isUpdate If true append to old data\n   */\n  fromJson(posArr, isUpdate = false) {\n    let positions = [];\n    if (isUpdate && this.hasPositions) {\n      positions = this.positions;\n    } else {\n      this.clear();\n    }\n    for (const pos of posArr) {\n      const position = uPosition.fromJson(pos);\n      this.calculatePosition(position);\n      positions.push(position);\n    }\n    // update at the end to avoid observers update invidual points\n    this.positions = positions;\n  }\n\n  /**\n   * @param {number} id\n   * @return {boolean}\n   */\n  isLastPosition(id) {\n    return this.length > 0 && id === this.length - 1;\n  }\n\n  /**\n   * @param {number} id\n   * @return {boolean}\n   */\n  isFirstPosition(id) {\n    return this.length > 0 && id === 0;\n  }\n\n  /**\n   * Fetch track positions\n   * @return {Promise<void, Error>}\n   */\n  fetchPositions() {\n    const params = {\n      userid: this.user.id,\n      trackid: this.id\n    };\n    if (this.maxId) {\n      params.afterid = this.maxId;\n    }\n    return uPositionSet.fetch(params).then((_positions) => {\n      this.fromJson(_positions, params.afterid > 0);\n    });\n  }\n\n  /**\n   * Fetch track with latest position of a user.\n   * @param {uUser} user\n   * @return {Promise<?uTrack, Error>}\n   */\n  static fetchLatest(user) {\n    return this.fetch({\n      last: true,\n      userid: user.id\n    }).then((_positions) => {\n      if (_positions.length) {\n        const track = new uTrack(_positions[0].trackid, _positions[0].trackname, user);\n        track.fromJson(_positions);\n        return track;\n      }\n      return null;\n    });\n  }\n\n  /**\n   * Fetch tracks for given user\n   * @throws\n   * @param {uUser} user\n   * @return {Promise<uTrack[], Error>}\n   */\n  static fetchList(user) {\n    return uAjax.get('utils/gettracks.php', { userid: user.id }).then(\n      /**\n       * @param {Array.<{id: number, name: string}>} _tracks\n       * @return {uTrack[]}\n       */\n      (_tracks) => {\n        const tracks = [];\n        for (const track of _tracks) {\n          tracks.push(new uTrack(track.id, track.name, user));\n        }\n        return tracks;\n    });\n  }\n\n  /**\n   * Export to file\n   * @param {string} type File type\n   */\n  export(type) {\n    if (this.hasPositions) {\n      const url = `utils/export.php?type=${type}&userid=${this.user.id}&trackid=${this.id}`;\n      uUtils.openUrl(url);\n    }\n  }\n\n  /**\n   * Imports tracks submited with HTML form and returns last imported track id\n   * @param {HTMLFormElement} form\n   * @param {uUser} user\n   * @return {Promise<uTrack[], Error>}\n   */\n  static import(form, user) {\n    return uAjax.post('utils/import.php', form)\n      .then(\n        /**\n         * @param {Array.<{id: number, name: string}>} _tracks\n         * @return {uTrack[]}\n         */\n        (_tracks) => {\n          const tracks = [];\n          for (const track of _tracks) {\n            tracks.push(new uTrack(track.id, track.name, user));\n          }\n          return tracks;\n      });\n  }\n\n  delete() {\n    return uTrack.update({\n      action: 'delete',\n      trackid: this.id\n    });\n  }\n\n  saveMeta() {\n    return uTrack.update({\n      action: 'update',\n      trackid: this.id,\n      trackname: this.name\n    });\n  }\n\n  /**\n   * @param {number} id\n   * @return {Promise<{id: number, name: string, userId: number, comment: string|null}, Error>}\n   */\n  static getMeta(id) {\n    return uTrack.update({\n      action: 'getmeta',\n      trackid: id\n    });\n  }\n\n  /**\n   * Save track data\n   * @param {Object} data\n   * @return {Promise<void, Error>}\n   */\n  static update(data) {\n    return uAjax.post('utils/handletrack.php', data);\n  }\n\n  recalculatePositions() {\n    this.clearTrackCounters();\n    let previous = null;\n    for (const position of this.positions) {\n      position.meters = previous ? position.distanceTo(previous) : 0;\n      position.seconds = previous ? position.secondsTo(previous) : 0;\n      this.calculatePosition(position);\n      previous = position;\n    }\n  }\n\n  /**\n   * Calculate position total counters and plot data\n   * @param {uPosition} position\n   */\n  calculatePosition(position) {\n    this.totalMeters += position.meters;\n    this.totalSeconds += position.seconds;\n    position.totalMeters = this.totalMeters;\n    position.totalSeconds = this.totalSeconds;\n    if (position.hasAltitude()) {\n      this.plotData.push({ x: position.totalMeters, y: position.altitude });\n      if (this.maxAltitude === null || position.altitude > this.maxAltitude) {\n        this.maxAltitude = position.altitude;\n      }\n      if (this.minAltitude === null || position.altitude < this.minAltitude) {\n        this.minAltitude = position.altitude;\n      }\n    }\n    if (position.id > this.maxId) {\n      this.maxId = position.id;\n    }\n    if (position.hasSpeed() && position.speed > this.maxSpeed) {\n      this.maxSpeed = position.speed;\n    }\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uListItem from './listitem.js';\nimport uTrack from './track.js';\n\n/**\n * @class uUser\n * @property {number} id\n * @property {string} login\n * @property {boolean} isAdmin\n */\nexport default class uUser extends uListItem {\n  /**\n   * @param {number} id\n   * @param {string} login\n   * @param {boolean=} isAdmin\n   */\n  constructor(id, login, isAdmin = false) {\n    super();\n    if (!Number.isSafeInteger(id) || id <= 0) {\n      throw new Error('Invalid argument for user constructor');\n    }\n    this.id = id;\n    this.login = login;\n    this.isAdmin = isAdmin;\n    this.listItem(id, login);\n  }\n\n  /**\n   * @param {uUser} user\n   * @return {boolean}\n   */\n  isEqualTo(user) {\n    return !!user && user.id === this.id;\n  }\n\n  /**\n   * @return {Promise<uTrack, Error>}\n   */\n  fetchLastPosition() {\n    return uTrack.fetchLatest(this);\n  }\n\n  /**\n   * @throws\n   * @return {Promise<uUser[], Error>}\n   */\n  static fetchList() {\n    return uAjax.get('utils/getusers.php').then((_users) => {\n      const users = [];\n      for (const user of _users) {\n        users.push(new uUser(user.id, user.login, user.isAdmin));\n      }\n      return users;\n    });\n  }\n\n  delete() {\n    return uUser.update({\n      action: 'delete',\n      login: this.login\n    });\n  }\n\n  /**\n   *\n   * @param {string} login\n   * @param {string} password\n   * @param {boolean} isAdmin\n   * @return {Promise<uUser>}\n   */\n  static add(login, password, isAdmin) {\n    return uUser.update({\n      action: 'add',\n      login: login,\n      pass: password,\n      admin: isAdmin\n    }).then((user) => new uUser(user.id, login, isAdmin));\n  }\n\n  /**\n   * @param {Object} data\n   * @return {Promise<*, Error>}\n   */\n  static update(data) {\n    return uAjax.post('utils/handleuser.php', data);\n  }\n\n  /**\n   * @param {string} password New password\n   * @param {string} oldPassword Current password\n   * @return {Promise<void, Error>}\n   */\n  setPassword(password, oldPassword) {\n    return uAjax.post('utils/changepass.php',\n      {\n        login: this.login,\n        pass: password,\n        oldpass: oldPassword\n      });\n  }\n\n  /**\n   * @param {boolean} isAdmin\n   * @param {string|null} password\n   * @return {Promise<void, Error>}\n   */\n  modify(isAdmin, password = null) {\n    const data = {\n      action: 'update',\n      login: this.login,\n      admin: isAdmin\n    };\n    if (password) {\n      data.pass = password;\n    }\n    return uUser.update(data)\n      .then(() => { this.isAdmin = isAdmin; });\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uUser from './user.js';\n\nexport default class uAuth {\n\n  constructor() {\n    /** @type {boolean} */\n    this._isAdmin = false;\n    /** @type {boolean} */\n    this._isAuthenticated = false;\n    /** @type {?uUser} */\n    this._user = null;\n  }\n\n  /**\n   * @param {uUser} user\n   */\n  set user(user) {\n    if (user) {\n      this._user = user;\n      this._isAuthenticated = true;\n    } else {\n      this._user = null;\n      this._isAuthenticated = false;\n      this._isAdmin = false;\n    }\n  }\n\n  /**\n   * @param {boolean} isAdmin\n   */\n  set isAdmin(isAdmin) {\n    if (!this._user) {\n      throw new Error('No authenticated user');\n    }\n    this._isAdmin = isAdmin;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isAdmin() {\n    return this._isAdmin;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isAuthenticated() {\n    return this._isAuthenticated;\n  }\n\n  /**\n   * @return {?uUser}\n   */\n  get user() {\n    return this._user;\n  }\n\n  /**\n   * Load auth state from data object\n   * @param {Object} data\n   * @param {boolean} data.isAdmin\n   * @param {boolean} data.isAuthenticated\n   * @param {?number} data.userId\n   * @param {?string} data.userLogin\n   */\n  load(data) {\n    if (data) {\n      if (data.isAuthenticated) {\n        this.user = new uUser(data.userId, data.userLogin);\n        this.isAdmin = data.isAdmin;\n      }\n    }\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uListItem from './listitem.js';\n\nexport default class uLayer extends uListItem {\n\n  /**\n   * @param {number} id\n   * @param {string} name\n   * @param {string} url\n   * @param {number} priority\n   */\n  // eslint-disable-next-line max-params\n  constructor(id, name, url, priority) {\n    super();\n    this.id = id;\n    this.name = name;\n    this.url = url;\n    this.priority = priority;\n    this.listItem(id, name);\n  }\n\n  /**\n   * @param {string} name\n   */\n  setName(name) {\n    this.name = name;\n    this.listItem(this.id, this.name);\n  }\n\n  /**\n   * @param {string} url\n   */\n  setUrl(url) {\n    this.url = url;\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uLayer from './layer.js';\n\n/**\n * @extends {Array.<uLayer>}\n */\nexport default class uLayerCollection extends Array {\n\n  /**\n   * Create new layer in layers array\n   * @param {string} name\n   * @param {string} url\n   * @param {number} priority\n   */\n  // eslint-disable-next-line max-params\n  addNewLayer(name, url, priority = 0) {\n    this.addLayer(this.getMaxId() + 1, name, url, priority);\n  }\n\n  /**\n   * @param {number} id\n   * @param {string} name\n   * @param {string} url\n   * @param {number} priority\n   */\n  // eslint-disable-next-line max-params\n  addLayer(id, name, url, priority = 0) {\n    this.push(new uLayer(id, name, url, priority));\n  }\n\n  /**\n   * @param {number} id\n   */\n  delete(id) {\n    const index = this.map((o) => o.id).indexOf(id);\n    this.splice(index, 1);\n  }\n\n  /**\n   * @param {number} id\n   * @return {uLayer}\n   */\n  get(id) {\n    return this.find((o) => o.id === id);\n  }\n\n  /**\n   * Return max id from layers array\n   * @return {number}\n   */\n  getMaxId() {\n    return Math.max(...this.map((o) => o.id), 0);\n  }\n\n  /**\n   * Set layer with given id as priority\n   * @param {number} id\n   */\n  setPriorityLayer(id) {\n    for (const layer of this) {\n      if (layer.id > 0 && layer.id === id) {\n        layer.priority = 1;\n      } else {\n        layer.priority = 0;\n      }\n    }\n  }\n\n  /**\n   * Return id of first layer with priority\n   * @return {number}\n   */\n  getPriorityLayer() {\n    for (const layer of this) {\n      if (layer.priority > 0) {\n        return layer.id;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Load from array\n   * @param {Array} layers\n   */\n  load(layers) {\n    this.length = 0;\n    for (const layer of layers) {\n      if (layer.id > 0) {\n        this.addLayer(layer.id, layer.name, layer.url, layer.priority);\n      }\n    }\n  }\n\n}\n\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uLayerCollection from './layercollection.js';\nimport uObserve from './observe.js';\n\n/**\n * @class uConfig\n * @property {string} colorExtra\n * @property {string} colorHilite\n * @property {string} colorNormal\n * @property {string} colorStart\n * @property {string} colorStop\n * @property {string} googleKey\n * @property {number} initLatitude\n * @property {number} initLongitude\n * @property {number} initLongitude\n * @property {number} interval;\n * @property {string} lang\n * @property {string} mapApi\n * @property {uLayerCollection} olLayers\n * @property {number} passLenMin\n * @property {number} passStrength\n * @property {boolean} publicTracks\n * @property {boolean} requireAuth\n * @property {boolean} showLatest\n * @property {string} strokeColor\n * @property {number} strokeOpacity\n * @property {number} strokeWeight\n * @property {string} units\n * @property {number} uploadMaxSize\n */\nexport default class uConfig {\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    this.interval = 10;\n    this.units = 'metric';\n    this.lang = 'en';\n    this.mapApi = 'openlayers';\n    this.googleKey = '';\n    this.olLayers = new uLayerCollection();\n    this.initLatitude = 52.23;\n    this.initLongitude = 21.01;\n    this.requireAuth = true;\n    this.publicTracks = false;\n    this.passStrength = 2;\n    this.passLenMin = 10;\n    this.strokeWeight = 2;\n    this.strokeColor = '#ff0000';\n    this.strokeOpacity = 1;\n    // marker colors\n    this.colorNormal = '#ffffff';\n    this.colorStart = '#55b500';\n    this.colorStop = '#ff6a00';\n    this.colorExtra = '#cccccc';\n    this.colorHilite = '#feff6a';\n    this.uploadMaxSize = 0;\n    this.initUnits();\n  }\n\n  initUnits() {\n    if (this.units === 'imperial') {\n      this.factorSpeed = 2.237; // m/s to mph\n      this.unitSpeed = 'unitmph';\n      this.factorDistance = 3.28; // m to feet\n      this.unitDistance = 'unitft';\n      this.factorDistanceMajor = 0.621; // km to miles\n      this.unitDistanceMajor = 'unitmi';\n    } else if (this.units === 'nautical') {\n      this.factorSpeed = 1.944; // m/s to kt\n      this.unitSpeed = 'unitkt';\n      this.factorDistance = 1; // meters\n      this.unitDistance = 'unitm';\n      this.factorDistanceMajor = 0.54; // km to nautical miles\n      this.unitDistanceMajor = 'unitnm';\n    } else {\n      this.factorSpeed = 3.6; // m/s to km/h\n      this.unitSpeed = 'unitkmh';\n      this.factorDistance = 1;\n      this.unitDistance = 'unitm';\n      this.factorDistanceMajor = 1;\n      this.unitDistanceMajor = 'unitkm';\n    }\n    this.unitDay = 'unitday';\n    this.unitAltitude = 'unitamsl';\n  }\n\n  /**\n   * Load config values from data object\n   * @param {Object} data\n   */\n  load(data) {\n    if (data) {\n      for (const property in data) {\n        if (property === 'layers') {\n          this.olLayers.load(data[property]);\n        } else if (data.hasOwnProperty(property) && this.hasOwnProperty(property)) {\n          this[property] = data[property];\n        }\n      }\n      this.initUnits();\n    }\n  }\n\n  /**\n   * Save config values from data object\n   * @param {Object} data\n   */\n  save(data) {\n    this.load(data);\n    data = Object.keys(this)\n      .filter((key) => typeof this[key] !== 'function')\n      .reduce((obj, key) => {\n        obj[key] = this[key];\n        return obj;\n      }, {});\n    return uAjax.post('utils/saveconfig.php', data);\n  }\n\n  reinitialize() {\n    uObserve.unobserveAll(this);\n    this.initialize();\n  }\n\n  /**\n   * @param {string} property\n   * @param {ObserveCallback} callback\n   */\n  onChanged(property, callback) {\n    uObserve.observe(this, property, callback);\n  }\n\n\n  /**\n   * @param {string} password\n   * @return {boolean}\n   */\n  validPassStrength(password) {\n    return this.getPassRegExp().test(password);\n  }\n\n  /**\n   * Set password validation regexp\n   * @return {RegExp}\n   */\n  getPassRegExp() {\n    let regex = '';\n    if (this.passStrength > 0) {\n      // lower and upper case\n      regex += '(?=.*[a-z])(?=.*[A-Z])';\n    }\n    if (this.passStrength > 1) {\n      // digits\n      regex += '(?=.*[0-9])';\n    }\n    if (this.passStrength > 2) {\n      // not latin, not digits\n      regex += '(?=.*[^a-zA-Z0-9])';\n    }\n    if (this.passLenMin > 0) {\n      regex += `(?=.{${this.passLenMin},})`;\n    }\n    if (regex.length === 0) {\n      regex = '.*';\n    }\n    return new RegExp(regex);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uUtils from './utils.js';\n\nexport default class uLang {\n  constructor() {\n    this.strings = {};\n    this.config = null;\n  }\n\n  /**\n   * @param {uConfig} config\n   * @param {Object<string, string>} data\n   */\n  init(config, data) {\n    this.config = config;\n    if (data) {\n      /** @type {Object<string, string>} */\n      this.strings = data;\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {...(string|number)=} params Optional parameters\n   * @return {string}\n   */\n  _(name, ...params) {\n    if (typeof this.strings[name] === 'undefined') {\n      throw new Error('Unknown localized string');\n    }\n    if (params.length) {\n      return uUtils.sprintf(this.strings[name], ...params);\n    }\n    return this.strings[name];\n  }\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  unit(name) {\n    const unitName = this.config[name];\n    if (typeof this.config[name] === 'undefined') {\n      throw new Error('Unknown localized unit');\n    }\n    return this._(unitName);\n  }\n\n  /**\n   * Get speed converted to locale units\n   * @param {number} ms Speed in meters per second\n   * @param {?boolean=false} withUnit\n   * @return {string}\n   */\n  getLocaleSpeed(ms, withUnit = false) {\n    const value = Math.round(ms * this.config.factorSpeed * 100) / 100;\n    let localized = value.toLocaleString(this.config.lang);\n    if (withUnit) {\n      localized += ` ${this.unit('unitSpeed')}`;\n    }\n    return localized;\n  }\n\n  /**\n   * Get distance converted to locale units\n   * @param {number} m Distance in meters\n   * @param {?boolean=false} withUnit\n   * @return {string}\n   */\n  getLocaleDistanceMajor(m, withUnit = false) {\n    const value = Math.round(m * this.config.factorDistanceMajor / 10) / 100;\n    let localized = value.toLocaleString(this.config.lang);\n    if (withUnit) {\n      localized += ` ${this.unit('unitDistanceMajor')}`;\n    }\n    return localized;\n  }\n\n  /**\n   * @param {number} m Distance in meters\n   * @param {?boolean=false} withUnit\n   * @return {string}\n   */\n  getLocaleDistance(m, withUnit = false) {\n    const value = Math.round(m * this.config.factorDistance * 100) / 100;\n    let localized = value.toLocaleString(this.config.lang);\n    if (withUnit) {\n      localized += ` ${this.unit('unitDistance')}`;\n    }\n    return localized;\n  }\n\n  /**\n   * @param {number} m Altitude in meters\n   * @param {?boolean=false} withUnit\n   * @return {string}\n   */\n  getLocaleAltitude(m, withUnit = false) {\n    let localized = this.getLocaleDistance(m, withUnit);\n    if (withUnit) {\n      localized += ` ${this.unit('unitAltitude')}`;\n    }\n    // use typographic minus\n    return localized.replace('-', '−');\n  }\n\n  /**\n   * @param {number} m Accuracy in meters\n   * @param {?boolean=false} withUnit\n   * @return {string}\n   */\n  getLocaleAccuracy(m, withUnit = false) {\n    return this.getLocaleDistance(m, withUnit);\n  }\n\n  /**\n   * @param {number} s Duration in seconds\n   * @return {string} Formatted to (d) h:m:s\n   */\n  getLocaleDuration(s) {\n    const d = Math.floor(s / 86400);\n    const h = Math.floor((s % 86400) / 3600);\n    const m = Math.floor(((s % 86400) % 3600) / 60);\n    s = ((s % 86400) % 3600) % 60;\n    return ((d > 0) ? (`${d} ${this.unit('unitDay')} `) : '') +\n      ((`00${h}`).slice(-2)) + ':' + ((`00${m}`).slice(-2)) + ':' + ((`00${s}`).slice(-2)) + '';\n  }\n\n  /**\n   * @param {uPosition} pos\n   * @return {string}\n   */\n  getLocaleCoordinates(pos) {\n    return `${this.coordStr(pos.longitude, true)} ${this.coordStr(pos.latitude, false)}`;\n  }\n\n  /**\n   * @param {number} pos\n   * @param {boolean} isLon\n   * @return {string}\n   */\n  coordStr(pos, isLon) {\n    const ipos = Math.trunc(pos);\n    const dec = Math.round((Math.abs((pos - ipos) * 60) + Number.EPSILON) * 100) / 100;\n    let dir;\n\n    if (isLon) {\n      dir = pos < 0 ? 'W' : 'E';\n    } else {\n      dir = pos < 0 ? 'S' : 'N';\n    }\n    return `${Math.abs(ipos).toLocaleString(this.config.lang)}°${dec.toLocaleString(this.config.lang, { maximumFractionDigits: 2 })}'${dir}`;\n  }\n\n  getLocalePassRules() {\n    let rulesStr = '';\n    if (this.config.passLenMin > 0) {\n      rulesStr = uUtils.sprintf(this._('passlenmin') + '\\n', this.config.passLenMin);\n    }\n    if (this.config.passStrength > 0 && this.config.passStrength < 4) {\n      rulesStr += this._(`passrules_${this.config.passStrength}`);\n    }\n    return rulesStr;\n  }\n\n  /**\n   * Get languages list { langCode: langName }\n   * @return {Object.<string, string>}\n   */\n  getLangList() {\n    return this.strings['langArr'] || {};\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uAjax from './ajax.js';\nimport uAuth from './auth.js';\nimport uConfig from './config.js';\nimport uLang from './lang.js';\n\n/**\n * @Class uInitializer\n * @property {uAuth} auth\n * @property {uConfig} config\n * @property {uLang} lang\n */\nexport class uInitializer {\n\n  constructor() {\n    this.auth = new uAuth();\n    this.config = new uConfig();\n    this.lang = new uLang();\n  }\n\n  /**\n   * @return {Promise<void, Error>}\n   */\n  initialize() {\n    return uAjax.get('utils/getinit.php').then((_data) => {\n      if (!_data || !_data.auth || !_data.config || !_data.lang) {\n        throw new Error('Corrupted initialization data');\n      }\n      this.auth.load(_data.auth);\n      this.config.load(_data.config);\n      this.lang.init(this.config, _data.lang);\n    });\n  }\n\n  static waitForDom() {\n    return new Promise((resolve) => {\n      if (document.readyState === 'complete' || document.readyState === 'interactive') {\n        setTimeout(resolve, 1);\n      } else {\n        document.addEventListener('DOMContentLoaded', resolve);\n      }\n    });\n  }\n}\n\nexport const initializer = new uInitializer();\nexport const config = initializer.config;\nexport const lang = initializer.lang;\nexport const auth = initializer.auth;\n","/**\n * This object contains all namespaces used within Chartist.\n */\nexport const namespaces: Record<string, string> = {\n  svg: 'http://www.w3.org/2000/svg',\n  xmlns: 'http://www.w3.org/2000/xmlns/',\n  xhtml: 'http://www.w3.org/1999/xhtml',\n  xlink: 'http://www.w3.org/1999/xlink',\n  ct: 'http://gionkunz.github.com/chartist-js/ct'\n};\n\n/**\n * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n */\nexport const precision = 8;\n\n/**\n * A map with characters to escape for strings to be safely used as attribute values.\n */\nexport const escapingMap: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#039;'\n};\n","/**\n * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n * @return Returns the passed number value with unit.\n */\nexport function ensureUnit<T>(value: T, unit: string) {\n  if (typeof value === 'number') {\n    return value + unit;\n  }\n\n  return value;\n}\n\n/**\n * Converts a number or string to a quantity object.\n * @return Returns an object containing the value as number and the unit as string.\n */\nexport function quantity<T>(input: T) {\n  if (typeof input === 'string') {\n    const match = /^(\\d+)\\s*(.*)$/g.exec(input);\n    return {\n      value: match ? +match[1] : 0,\n      unit: match?.[2] || undefined\n    };\n  }\n\n  return {\n    value: Number(input)\n  };\n}\n\n/**\n * Generates a-z from a number 0 to 26\n * @param n A number from 0 to 26 that will result in a letter a-z\n * @return A character from a-z based on the input number n\n */\nexport function alphaNumerate(n: number) {\n  // Limit to a-z\n  return String.fromCharCode(97 + (n % 26));\n}\n","import type { Bounds } from './types';\nimport { precision as globalPrecision } from './constants';\n\nexport const EPSILON = 2.221e-16;\n\n/**\n * Calculate the order of magnitude for the chart scale\n * @param value The value Range of the chart\n * @return The order of magnitude\n */\nexport function orderOfMagnitude(value: number) {\n  return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n}\n\n/**\n * Project a data length into screen coordinates (pixels)\n * @param axisLength The svg element for the chart\n * @param length Single data value from a series array\n * @param bounds All the values to set the bounds of the chart\n * @return The projected data length in pixels\n */\nexport function projectLength(\n  axisLength: number,\n  length: number,\n  bounds: Bounds\n) {\n  return (length / bounds.range) * axisLength;\n}\n\n/**\n * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n * @param value The value that should be rounded with precision\n * @param [digits] The number of digits after decimal used to do the rounding\n * @returns Rounded value\n */\nexport function roundWithPrecision(value: number, digits?: number) {\n  const precision = Math.pow(10, digits || globalPrecision);\n  return Math.round(value * precision) / precision;\n}\n\n/**\n * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n * @param num An integer number where the smallest factor should be searched for\n * @returns The smallest integer factor of the parameter num.\n */\nexport function rho(num: number) {\n  if (num === 1) {\n    return num;\n  }\n\n  function gcd(p: number, q: number): number {\n    if (p % q === 0) {\n      return q;\n    } else {\n      return gcd(q, p % q);\n    }\n  }\n\n  function f(x: number) {\n    return x * x + 1;\n  }\n\n  let x1 = 2;\n  let x2 = 2;\n  let divisor: number;\n\n  if (num % 2 === 0) {\n    return 2;\n  }\n\n  do {\n    x1 = f(x1) % num;\n    x2 = f(f(x2)) % num;\n    divisor = gcd(Math.abs(x1 - x2), num);\n  } while (divisor === 1);\n\n  return divisor;\n}\n\n/**\n * Calculate cartesian coordinates of polar coordinates\n * @param centerX X-axis coordinates of center point of circle segment\n * @param centerY X-axis coordinates of center point of circle segment\n * @param radius Radius of circle segment\n * @param angleInDegrees Angle of circle segment in degrees\n * @return Coordinates of point on circumference\n */\nexport function polarToCartesian(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number\n) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n","import type { Bounds } from '../types';\nimport {\n  orderOfMagnitude,\n  projectLength,\n  roundWithPrecision,\n  rho,\n  EPSILON\n} from '../math';\n\n/**\n * Calculate and retrieve all the bounds for the chart and return them in one array\n * @param axisLength The length of the Axis used for\n * @param highLow An object containing a high and low property indicating the value range of the chart.\n * @param scaleMinSpace The minimum projected length a step should result in\n * @param onlyInteger\n * @return All the values to set the bounds of the chart\n */\nexport function getBounds(\n  axisLength: number,\n  highLow: { high: number; low: number },\n  scaleMinSpace: number,\n  onlyInteger = false\n) {\n  const bounds: Bounds = {\n    high: highLow.high,\n    low: highLow.low,\n    valueRange: 0,\n    oom: 0,\n    step: 0,\n    min: 0,\n    max: 0,\n    range: 0,\n    numberOfSteps: 0,\n    values: []\n  };\n\n  bounds.valueRange = bounds.high - bounds.low;\n  bounds.oom = orderOfMagnitude(bounds.valueRange);\n  bounds.step = Math.pow(10, bounds.oom);\n  bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n  bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n  bounds.range = bounds.max - bounds.min;\n  bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n  // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n  // If we are already below the scaleMinSpace value we will scale up\n  const length = projectLength(axisLength, bounds.step, bounds);\n  const scaleUp = length < scaleMinSpace;\n  const smallestFactor = onlyInteger ? rho(bounds.range) : 0;\n\n  // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n  if (onlyInteger && projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n    bounds.step = 1;\n  } else if (\n    onlyInteger &&\n    smallestFactor < bounds.step &&\n    projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace\n  ) {\n    // If step 1 was too small, we can try the smallest factor of range\n    // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n    // is larger than the scaleMinSpace we should go for it.\n    bounds.step = smallestFactor;\n  } else {\n    // Trying to divide or multiply by 2 and find the best step value\n    let optimizationCounter = 0;\n    for (;;) {\n      if (\n        scaleUp &&\n        projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace\n      ) {\n        bounds.step *= 2;\n      } else if (\n        !scaleUp &&\n        projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace\n      ) {\n        bounds.step /= 2;\n        if (onlyInteger && bounds.step % 1 !== 0) {\n          bounds.step *= 2;\n          break;\n        }\n      } else {\n        break;\n      }\n\n      if (optimizationCounter++ > 1000) {\n        throw new Error(\n          'Exceeded maximum number of iterations while optimizing scale step!'\n        );\n      }\n    }\n  }\n\n  bounds.step = Math.max(bounds.step, EPSILON);\n  function safeIncrement(value: number, increment: number) {\n    // If increment is too small use *= (1+EPSILON) as a simple nextafter\n    if (value === (value += increment)) {\n      value *= 1 + (increment > 0 ? EPSILON : -EPSILON);\n    }\n    return value;\n  }\n\n  // Narrow min and max based on new step\n  let newMin = bounds.min;\n  let newMax = bounds.max;\n  while (newMin + bounds.step <= bounds.low) {\n    newMin = safeIncrement(newMin, bounds.step);\n  }\n  while (newMax - bounds.step >= bounds.high) {\n    newMax = safeIncrement(newMax, -bounds.step);\n  }\n  bounds.min = newMin;\n  bounds.max = newMax;\n  bounds.range = bounds.max - bounds.min;\n\n  const values: number[] = [];\n  for (let i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n    const value = roundWithPrecision(i);\n    if (value !== values[values.length - 1]) {\n      values.push(value);\n    }\n  }\n  bounds.values = values;\n\n  return bounds;\n}\n","/**\n * Simple recursive object extend\n * @param target Target object where the source will be merged into\n * @param sources This object (objects) will be merged into target and then target is returned\n * @return An object that has the same reference as target but is extended and merged with the properties of source\n */\nexport function extend<T>(target: T): T;\nexport function extend<T, A>(target: T, a: A): T & A;\nexport function extend<T, A, B>(target: T, a: A, b: B): T & A & B;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function extend(target: any = {}, ...sources: any[]) {\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    for (const prop in source) {\n      const sourceProp = source[prop];\n      if (\n        typeof sourceProp === 'object' &&\n        sourceProp !== null &&\n        !(sourceProp instanceof Array)\n      ) {\n        target[prop] = extend(target[prop], sourceProp);\n      } else {\n        target[prop] = sourceProp;\n      }\n    }\n  }\n\n  return target;\n}\n","/**\n * Helps to simplify functional style code\n * @param n This exact value will be returned by the noop function\n * @return The same value that was provided to the n parameter\n */\nexport const noop = <T>(n: T) => n;\n\n/**\n * Functional style helper to produce array with given length initialized with undefined values\n */\nexport function times(length: number): undefined[];\nexport function times<T = unknown>(\n  length: number,\n  filler: (index: number) => T\n): T[];\nexport function times<T = unknown>(\n  length: number,\n  filler?: (index: number) => T\n) {\n  return Array.from({ length }, filler ? (_, i) => filler(i) : () => void 0);\n}\n\n/**\n * Sum helper to be used in reduce functions\n */\nexport const sum = (previous: number, current: number) =>\n  previous + (current ? current : 0);\n\n/**\n * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n *\n * For example:\n * @example\n * ```ts\n * const data = [[1, 2], [3], []];\n * serialMap(data, cb);\n *\n * // where cb will be called 2 times\n * // 1. call arguments: (1, 3, undefined)\n * // 2. call arguments: (2, undefined, undefined)\n * ```\n */\nexport const serialMap = <T, K>(array: T[][], callback: (...args: T[]) => K) =>\n  times(Math.max(...array.map(element => element.length)), index =>\n    callback(...array.map(element => element[index]))\n  );\n","import type { FilterByKey } from './types';\n\n/**\n * This function safely checks if an objects has an owned property.\n * @param target The object where to check for a property\n * @param property The property name\n * @returns Returns true if the object owns the specified property\n */\nexport function safeHasProperty<T, K extends string>(\n  target: T,\n  property: K\n): target is FilterByKey<T, K>;\nexport function safeHasProperty(target: unknown, property: string) {\n  return (\n    target !== null &&\n    typeof target === 'object' &&\n    Reflect.has(target, property)\n  );\n}\n\n/**\n * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n */\nexport function isNumeric(value: number): true;\nexport function isNumeric(value: unknown): boolean;\nexport function isNumeric(value: unknown) {\n  return value !== null && isFinite(value as number);\n}\n\n/**\n * Returns true on all falsey values except the numeric value 0.\n */\nexport function isFalseyButZero(\n  value: unknown\n): value is undefined | null | false | '' {\n  return !value && value !== 0;\n}\n\n/**\n * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n */\nexport function getNumberOrUndefined(value: number): number;\nexport function getNumberOrUndefined(value: unknown): number | undefined;\nexport function getNumberOrUndefined(value: unknown) {\n  return isNumeric(value) ? Number(value) : undefined;\n}\n\n/**\n * Checks if value is array of arrays or not.\n */\nexport function isArrayOfArrays(data: unknown): data is unknown[][] {\n  if (!Array.isArray(data)) {\n    return false;\n  }\n\n  return data.every(Array.isArray);\n}\n\n/**\n * Loop over array.\n */\nexport function each<T>(\n  list: T[],\n  callback: (item: T, index: number, itemIndex: number) => void,\n  reverse = false\n) {\n  let index = 0;\n\n  list[reverse ? 'reduceRight' : 'reduce']<void>(\n    (_, item, itemIndex) => callback(item, index++, itemIndex),\n    void 0\n  );\n}\n","import type {\n  Multi,\n  AxisName,\n  FlatSeriesValue,\n  Series,\n  SeriesObject\n} from '../types';\nimport { safeHasProperty, getNumberOrUndefined } from '../../utils';\n\n/**\n * Get meta data of a specific value in a series.\n */\nexport function getMetaData(\n  seriesData: FlatSeriesValue | Series | SeriesObject,\n  index: number\n) {\n  const value = Array.isArray(seriesData)\n    ? seriesData[index]\n    : safeHasProperty(seriesData, 'data')\n    ? seriesData.data[index]\n    : null;\n  return safeHasProperty(value, 'meta') ? value.meta : undefined;\n}\n\n/**\n * Checks if a value is considered a hole in the data series.\n * @returns True if the value is considered a data hole\n */\nexport function isDataHoleValue(value: unknown): value is null | undefined;\nexport function isDataHoleValue(value: unknown) {\n  return (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && isNaN(value))\n  );\n}\n\n/**\n * Checks if value is array of series objects.\n */\nexport function isArrayOfSeries(\n  value: unknown\n): value is (Series | SeriesObject)[] {\n  return (\n    Array.isArray(value) &&\n    value.every(_ => Array.isArray(_) || safeHasProperty(_, 'data'))\n  );\n}\n\n/**\n * Checks if provided value object is multi value (contains x or y properties)\n */\nexport function isMultiValue(value: unknown): value is Multi {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    (Reflect.has(value, 'x') || Reflect.has(value, 'y'))\n  );\n}\n\n/**\n * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n */\nexport function getMultiValue(\n  value: Multi | number | unknown,\n  dimension: AxisName = 'y'\n) {\n  if (isMultiValue(value) && safeHasProperty(value, dimension)) {\n    return getNumberOrUndefined(value[dimension]);\n  } else {\n    return getNumberOrUndefined(value);\n  }\n}\n","import type {\n  Options,\n  AxisName,\n  NormalizedSeries,\n  NormalizedSeriesValue\n} from '../types';\nimport { safeHasProperty } from '../../utils';\nimport { isDataHoleValue } from './data';\n\n/**\n * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n * @param data The array that contains the data to be visualized in the chart\n * @param options The Object that contains the chart options\n * @param dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n * @return An object that contains the highest and lowest value that will be visualized on the chart.\n */\nexport function getHighLow(\n  data: NormalizedSeries[],\n  options: Options,\n  dimension?: AxisName\n) {\n  // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n  options = {\n    ...options,\n    ...(dimension ? (dimension === 'x' ? options.axisX : options.axisY) : {})\n  };\n\n  const highLow = {\n    high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n    low: options.low === undefined ? Number.MAX_VALUE : +options.low\n  };\n  const findHigh = options.high === undefined;\n  const findLow = options.low === undefined;\n\n  // Function to recursively walk through arrays and find highest and lowest number\n  function recursiveHighLow(\n    sourceData: NormalizedSeriesValue | NormalizedSeries | NormalizedSeries[]\n  ) {\n    if (isDataHoleValue(sourceData)) {\n      return;\n    } else if (Array.isArray(sourceData)) {\n      for (let i = 0; i < sourceData.length; i++) {\n        recursiveHighLow(sourceData[i]);\n      }\n    } else {\n      const value = Number(\n        dimension && safeHasProperty(sourceData, dimension)\n          ? sourceData[dimension]\n          : sourceData\n      );\n\n      if (findHigh && value > highLow.high) {\n        highLow.high = value;\n      }\n\n      if (findLow && value < highLow.low) {\n        highLow.low = value;\n      }\n    }\n  }\n\n  // Start to find highest and lowest number recursively\n  if (findHigh || findLow) {\n    recursiveHighLow(data);\n  }\n\n  // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n  // used to generate the chart. This is useful when the chart always needs to contain the position of the\n  // invisible reference value in the view i.e. for bipolar scales.\n  if (options.referenceValue || options.referenceValue === 0) {\n    highLow.high = Math.max(options.referenceValue, highLow.high);\n    highLow.low = Math.min(options.referenceValue, highLow.low);\n  }\n\n  // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n  // to set the high or low to 0 depending on the polarity\n  if (highLow.high <= highLow.low) {\n    // If both values are 0 we set high to 1\n    if (highLow.low === 0) {\n      highLow.high = 1;\n    } else if (highLow.low < 0) {\n      // If we have the same negative value for the bounds we set bounds.high to 0\n      highLow.high = 0;\n    } else if (highLow.high > 0) {\n      // If we have the same positive value for the bounds we set bounds.low to 0\n      highLow.low = 0;\n    } else {\n      // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n      highLow.high = 1;\n      highLow.low = 0;\n    }\n  }\n\n  return highLow;\n}\n","import type {\n  Data,\n  NormalizedData,\n  Multi,\n  AxisName,\n  NormalizedMulti,\n  Series,\n  FlatSeries,\n  NormalizedSeries,\n  NormalizedFlatSeries,\n  SeriesObject,\n  SeriesPrimitiveValue\n} from '../types';\nimport {\n  isArrayOfArrays,\n  times,\n  safeHasProperty,\n  getNumberOrUndefined\n} from '../../utils';\nimport { isDataHoleValue, isArrayOfSeries } from './data';\n\n/**\n * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n * @param data The data object that is passed as second argument to the charts\n * @return The normalized data object\n */\nexport function normalizeData(\n  data: Data<FlatSeries>,\n  reverse?: boolean,\n  multi?: false\n): NormalizedData<NormalizedFlatSeries>;\nexport function normalizeData(\n  data: Data<(Series | SeriesObject)[]>,\n  reverse: boolean | undefined,\n  multi: true | AxisName\n): NormalizedData<NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data<FlatSeries | (Series | SeriesObject)[]>,\n  reverse: boolean | undefined,\n  multi: boolean | AxisName,\n  distributed: true\n): NormalizedData<NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data<FlatSeries | (Series | SeriesObject)[]>,\n  reverse?: boolean,\n  multi?: boolean | AxisName\n): NormalizedData<NormalizedFlatSeries | NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data,\n  reverse = false,\n  multi?: boolean | AxisName,\n  distributed?: boolean\n) {\n  let labelCount: number;\n  const normalized: NormalizedData = {\n    labels: (data.labels || []).slice(),\n    series: normalizeSeries(data.series, multi, distributed)\n  };\n  const inputLabelCount = normalized.labels.length;\n\n  // If all elements of the normalized data array are arrays we're dealing with\n  // multi series data and we need to find the largest series if they are un-even\n  if (isArrayOfArrays(normalized.series)) {\n    // Getting the series with the the most elements\n    labelCount = Math.max(\n      inputLabelCount,\n      ...normalized.series.map(series => series.length)\n    );\n\n    normalized.series.forEach(series => {\n      series.push(...times(Math.max(0, labelCount - series.length)));\n    });\n  } else {\n    // We're dealing with Pie data so we just take the normalized array length\n    labelCount = normalized.series.length;\n  }\n\n  // Padding the labels to labelCount with empty strings\n  normalized.labels.push(\n    ...times(Math.max(0, labelCount - inputLabelCount), () => '')\n  );\n\n  if (reverse) {\n    reverseData(normalized);\n  }\n\n  return normalized;\n}\n\n/**\n * Reverses the series, labels and series data arrays.\n */\nfunction reverseData(data: Data) {\n  data.labels?.reverse();\n  data.series.reverse();\n  for (const series of data.series) {\n    if (safeHasProperty(series, 'data')) {\n      series.data.reverse();\n    } else if (Array.isArray(series)) {\n      series.reverse();\n    }\n  }\n}\n\nfunction normalizeMulti(\n  value: number | string | boolean | Date | Multi,\n  multi?: boolean | AxisName\n) {\n  // We need to prepare multi value output (x and y data)\n  let x: number | undefined;\n  let y: number | undefined;\n\n  // Single series value arrays are assumed to specify the Y-Axis value\n  // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n  // If multi is a string then it's assumed that it specified which dimension should be filled as default\n  if (typeof value !== 'object') {\n    const num = getNumberOrUndefined(value);\n\n    if (multi === 'x') {\n      x = num;\n    } else {\n      y = num;\n    }\n  } else {\n    if (safeHasProperty(value, 'x')) {\n      x = getNumberOrUndefined(value.x);\n    }\n\n    if (safeHasProperty(value, 'y')) {\n      y = getNumberOrUndefined(value.y);\n    }\n  }\n\n  if (x === undefined && y === undefined) {\n    return undefined;\n  }\n\n  return { x, y } as NormalizedMulti;\n}\n\nfunction normalizePrimitive(\n  value: SeriesPrimitiveValue,\n  multi?: boolean | AxisName\n) {\n  if (isDataHoleValue(value)) {\n    // We're dealing with a hole in the data and therefore need to return undefined\n    // We're also returning undefined for multi value output\n    return undefined;\n  }\n\n  if (multi) {\n    return normalizeMulti(value, multi);\n  }\n\n  return getNumberOrUndefined(value);\n}\n\nfunction normalizeSingleSeries(\n  series: Series | SeriesObject,\n  multi?: boolean | AxisName\n): NormalizedSeries {\n  if (!Array.isArray(series)) {\n    // We are dealing with series object notation so we need to recurse on data property\n    return normalizeSingleSeries(series.data, multi);\n  }\n\n  return series.map(value => {\n    if (safeHasProperty(value, 'value')) {\n      // We are dealing with value object notation so we need to recurse on value property\n      return normalizePrimitive(value.value, multi);\n    }\n\n    return normalizePrimitive(value, multi);\n  });\n}\n\n/**\n * Convert data series into plain array\n * @param series The series object that contains the data to be visualized in the chart\n * @param multi Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n * @return A plain array that contains the data to be visualized in the chart\n */\nfunction normalizeSeries(\n  series: FlatSeries,\n  multi?: false,\n  distributed?: false\n): NormalizedFlatSeries;\nfunction normalizeSeries(\n  series: (Series | SeriesObject)[],\n  multi: true | AxisName,\n  distributed?: false\n): NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi: boolean | undefined | AxisName,\n  distributed: true\n): NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi?: boolean | undefined | AxisName,\n  distributed?: boolean\n): NormalizedFlatSeries | NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi?: boolean | undefined | AxisName,\n  distributed?: boolean\n) {\n  if (isArrayOfSeries(series)) {\n    return series.map(_ => normalizeSingleSeries(_, multi));\n  }\n\n  const normalizedSeries = normalizeSingleSeries(series, multi);\n\n  if (distributed) {\n    return normalizedSeries.map(value => [value]);\n  }\n\n  return normalizedSeries;\n}\n","import type { Segment, SegmentData } from '../types';\nimport { getMultiValue } from './data';\n\n/**\n * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n * valueData property describing the segment.\n *\n * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n * points with undefined values are discarded.\n *\n * **Options**\n * The following options are used to determine how segments are formed\n * ```javascript\n * var options = {\n *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n *   fillHoles: false,\n *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n *   increasingX: false\n * };\n * ```\n *\n * @param pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n * @param valueData List of associated point values in the form [v1, v2 .. vn]\n * @param options Options set by user\n * @return List of segments, each containing a pathCoordinates and valueData property.\n */\nexport function splitIntoSegments(\n  pathCoordinates: number[],\n  valueData: SegmentData[],\n  options?: {\n    increasingX?: boolean;\n    fillHoles?: boolean;\n  }\n) {\n  const finalOptions = {\n    increasingX: false,\n    fillHoles: false,\n    ...options\n  };\n\n  const segments: Segment[] = [];\n  let hole = true;\n\n  for (let i = 0; i < pathCoordinates.length; i += 2) {\n    // If this value is a \"hole\" we set the hole flag\n    if (getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n      if (!finalOptions.fillHoles) {\n        hole = true;\n      }\n    } else {\n      if (\n        finalOptions.increasingX &&\n        i >= 2 &&\n        pathCoordinates[i] <= pathCoordinates[i - 2]\n      ) {\n        // X is not increasing, so we need to make sure we start a new segment\n        hole = true;\n      }\n\n      // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n      if (hole) {\n        segments.push({\n          pathCoordinates: [],\n          valueData: []\n        });\n        // As we have a valid value now, we are not in a \"hole\" anymore\n        hole = false;\n      }\n\n      // Add to the segment pathCoordinates and valueData\n      segments[segments.length - 1].pathCoordinates.push(\n        pathCoordinates[i],\n        pathCoordinates[i + 1]\n      );\n      segments[segments.length - 1].valueData.push(valueData[i / 2]);\n    }\n  }\n\n  return segments;\n}\n","import { escapingMap } from '../constants';\n\n/**\n * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n * If called with null or undefined the function will return immediately with null or undefined.\n */\nexport function serialize(data: number | string | object): string;\nexport function serialize(\n  data: number | string | object | null | undefined | unknown\n): string | null | undefined;\nexport function serialize(\n  data: number | string | object | null | undefined | unknown\n) {\n  let serialized = '';\n\n  if (data === null || data === undefined) {\n    return data;\n  } else if (typeof data === 'number') {\n    serialized = '' + data;\n  } else if (typeof data === 'object') {\n    serialized = JSON.stringify({ data: data });\n  } else {\n    serialized = String(data);\n  }\n\n  return Object.keys(escapingMap).reduce(\n    (result, key) => result.replaceAll(key, escapingMap[key]),\n    serialized\n  );\n}\n\n/**\n * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n */\nexport function deserialize<T extends object | number | string = object>(\n  data: string\n): T;\nexport function deserialize<T extends object | number | string = object>(\n  data: string | null | undefined\n): T | null | undefined;\nexport function deserialize(data: unknown) {\n  if (typeof data !== 'string') {\n    return data;\n  }\n\n  if (data === 'NaN') {\n    return NaN;\n  }\n\n  data = Object.keys(escapingMap).reduce(\n    (result, key) => result.replaceAll(escapingMap[key], key),\n    data\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let parsedData: any = data;\n\n  if (typeof data === 'string') {\n    try {\n      parsedData = JSON.parse(data);\n      parsedData = parsedData.data !== undefined ? parsedData.data : parsedData;\n    } catch (e) {\n      /* Ingore */\n    }\n  }\n\n  return parsedData;\n}\n","import { Svg } from './Svg';\n\ntype SvgMethods = Exclude<\n  keyof Svg,\n  | 'constructor'\n  | 'parent'\n  | 'querySelector'\n  | 'querySelectorAll'\n  | 'replace'\n  | 'append'\n  | 'classes'\n  | 'height'\n  | 'width'\n>;\n\ntype SvgListMethods = {\n  [method in SvgMethods]: (...args: Parameters<Svg[method]>) => SvgList;\n};\n\n/**\n * This helper class is to wrap multiple `Svg` elements into a list where you can call the `Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Svg` on multiple elements.\n * An instance of this class is also returned by `Svg.querySelectorAll`.\n */\nexport class SvgList implements SvgListMethods {\n  private svgElements: Svg[] = [];\n\n  /**\n   * @param nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   */\n  constructor(nodeList: ArrayLike<Element>) {\n    for (let i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Svg(nodeList[i]));\n    }\n  }\n\n  private call<T extends SvgMethods>(method: T, args: Parameters<Svg[T]>) {\n    this.svgElements.forEach(element =>\n      Reflect.apply(element[method], element, args)\n    );\n    return this;\n  }\n\n  attr(...args: Parameters<Svg['attr']>) {\n    return this.call('attr', args);\n  }\n\n  elem(...args: Parameters<Svg['elem']>) {\n    return this.call('elem', args);\n  }\n\n  root(...args: Parameters<Svg['root']>) {\n    return this.call('root', args);\n  }\n\n  getNode(...args: Parameters<Svg['getNode']>) {\n    return this.call('getNode', args);\n  }\n\n  foreignObject(...args: Parameters<Svg['foreignObject']>) {\n    return this.call('foreignObject', args);\n  }\n\n  text(...args: Parameters<Svg['text']>) {\n    return this.call('text', args);\n  }\n\n  empty(...args: Parameters<Svg['empty']>) {\n    return this.call('empty', args);\n  }\n\n  remove(...args: Parameters<Svg['remove']>) {\n    return this.call('remove', args);\n  }\n\n  addClass(...args: Parameters<Svg['addClass']>) {\n    return this.call('addClass', args);\n  }\n\n  removeClass(...args: Parameters<Svg['removeClass']>) {\n    return this.call('removeClass', args);\n  }\n\n  removeAllClasses(...args: Parameters<Svg['removeAllClasses']>) {\n    return this.call('removeAllClasses', args);\n  }\n\n  animate(...args: Parameters<Svg['animate']>) {\n    return this.call('animate', args);\n  }\n}\n","import type { EventEmitter } from '../event';\nimport { ensureUnit, quantity } from '../core/lang';\nimport type { Attributes, AnimationDefinition, AnimationEvent } from './types';\nimport type { Svg } from './Svg';\n\n/**\n * This Object contains some standard easing cubic bezier curves.\n * Then can be used with their name in the `Svg.animate`.\n * You can also extend the list and use your own name in the `animate` function.\n * Click the show code button to see the available bezier functions.\n */\nexport const easings = {\n  easeInSine: [0.47, 0, 0.745, 0.715],\n  easeOutSine: [0.39, 0.575, 0.565, 1],\n  easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n  easeInQuad: [0.55, 0.085, 0.68, 0.53],\n  easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n  easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n  easeInCubic: [0.55, 0.055, 0.675, 0.19],\n  easeOutCubic: [0.215, 0.61, 0.355, 1],\n  easeInOutCubic: [0.645, 0.045, 0.355, 1],\n  easeInQuart: [0.895, 0.03, 0.685, 0.22],\n  easeOutQuart: [0.165, 0.84, 0.44, 1],\n  easeInOutQuart: [0.77, 0, 0.175, 1],\n  easeInQuint: [0.755, 0.05, 0.855, 0.06],\n  easeOutQuint: [0.23, 1, 0.32, 1],\n  easeInOutQuint: [0.86, 0, 0.07, 1],\n  easeInExpo: [0.95, 0.05, 0.795, 0.035],\n  easeOutExpo: [0.19, 1, 0.22, 1],\n  easeInOutExpo: [1, 0, 0, 1],\n  easeInCirc: [0.6, 0.04, 0.98, 0.335],\n  easeOutCirc: [0.075, 0.82, 0.165, 1],\n  easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n};\n\nexport function createAnimation(\n  element: Svg,\n  attribute: string,\n  animationDefinition: AnimationDefinition,\n  createGuided = false,\n  eventEmitter?: EventEmitter\n) {\n  const { easing, ...def } = animationDefinition;\n  const attributeProperties: Attributes = {};\n  let animationEasing;\n  let timeout;\n\n  // Check if an easing is specified in the definition object and delete it from the object as it will not\n  // be part of the animate element attributes.\n  if (easing) {\n    // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n    animationEasing = Array.isArray(easing) ? easing : easings[easing];\n  }\n\n  // If numeric dur or begin was provided we assume milli seconds\n  def.begin = ensureUnit(def.begin, 'ms');\n  def.dur = ensureUnit(def.dur, 'ms');\n\n  if (animationEasing) {\n    def.calcMode = 'spline';\n    def.keySplines = animationEasing.join(' ');\n    def.keyTimes = '0;1';\n  }\n\n  // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n  if (createGuided) {\n    def.fill = 'freeze';\n    // Animated property on our element should already be set to the animation from value in guided mode\n    attributeProperties[attribute] = def.from;\n    element.attr(attributeProperties);\n\n    // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n    // which needs to be in ms aside\n    timeout = quantity(def.begin || 0).value;\n    def.begin = 'indefinite';\n  }\n\n  const animate = element.elem('animate', {\n    attributeName: attribute,\n    ...def\n  });\n\n  if (createGuided) {\n    // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n    setTimeout(() => {\n      // If beginElement fails we set the animated attribute to the end position and remove the animate element\n      // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occurred in\n      // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n      try {\n        // @ts-expect-error Try legacy API.\n        animate._node.beginElement();\n      } catch (err) {\n        // Set animated attribute to current animated value\n        attributeProperties[attribute] = def.to;\n        element.attr(attributeProperties);\n        // Remove the animate element as it's no longer required\n        animate.remove();\n      }\n    }, timeout);\n  }\n\n  const animateNode = animate.getNode();\n\n  if (eventEmitter) {\n    animateNode.addEventListener('beginEvent', () =>\n      eventEmitter.emit<AnimationEvent>('animationBegin', {\n        element: element,\n        animate: animateNode,\n        params: animationDefinition\n      })\n    );\n  }\n\n  animateNode.addEventListener('endEvent', () => {\n    if (eventEmitter) {\n      eventEmitter.emit<AnimationEvent>('animationEnd', {\n        element: element,\n        animate: animateNode,\n        params: animationDefinition\n      });\n    }\n\n    if (createGuided) {\n      // Set animated attribute to current animated value\n      attributeProperties[attribute] = def.to;\n      element.attr(attributeProperties);\n      // Remove the animate element as it's no longer required\n      animate.remove();\n    }\n  });\n}\n","import type { EventEmitter } from '../event';\nimport { namespaces } from '../core/constants';\nimport type { Attributes, AnimationDefinition } from './types';\nimport { SvgList } from './SvgList';\nimport { createAnimation, easings } from './animation';\n\n/**\n * Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n */\nexport class Svg {\n  /**\n   * @todo Only there for chartist <1 compatibility. Remove after deprecation warining.\n   * @deprecated Use the animation module export `easings` directly.\n   */\n  static readonly Easing = easings;\n\n  private _node: Element;\n\n  /**\n   * @param name The name of the SVG element to create or an SVG dom element which should be wrapped into Svg\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  constructor(\n    name: string | Element,\n    attributes?: Attributes,\n    className?: string,\n    parent?: Svg,\n    insertFirst = false\n  ) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if (name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if (name === 'svg') {\n        this.attr({\n          'xmlns:ct': namespaces.ct\n        });\n      }\n    }\n\n    if (attributes) {\n      this.attr(attributes);\n    }\n\n    if (className) {\n      this.addClass(className);\n    }\n\n    if (parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param ns If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  attr(attributes: string, ns?: string): string | null;\n  attr(attributes: Attributes): this;\n  attr(attributes: string | Attributes, ns?: string) {\n    if (typeof attributes === 'string') {\n      if (ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(key => {\n      // If the attribute value is undefined we can skip this one\n      if (attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        const namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(\n          namespaces[namespacedAttribute[0]],\n          key,\n          String(attributes[key])\n        );\n      } else {\n        this._node.setAttribute(key, String(attributes[key]));\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   * @param name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return Returns a Svg wrapper object that can be used to modify the containing SVG data\n   */\n  elem(\n    name: string,\n    attributes?: Attributes,\n    className?: string,\n    insertFirst = false\n  ) {\n    return new Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   * @return Returns a Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  parent() {\n    return this._node.parentNode instanceof SVGElement\n      ? new Svg(this._node.parentNode)\n      : null;\n  }\n\n  /**\n   * This method returns a Svg wrapper around the root SVG element of the current tree.\n   * @return The root SVG element wrapped in a Svg element\n   */\n  root() {\n    let node = this._node;\n\n    while (node.nodeName !== 'svg') {\n      if (node.parentElement) {\n        node = node.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return new Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Svg wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper for the element found or null if no element was found\n   */\n  querySelector(selector: string) {\n    const foundNode = this._node.querySelector(selector);\n    return foundNode ? new Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Svg.List wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper list for the element found or null if no element was found\n   */\n  querySelectorAll(selector: string) {\n    const foundNodes = this._node.querySelectorAll(selector);\n    return new SvgList(foundNodes);\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   */\n  getNode<T extends Element = Element>() {\n    return this._node as T;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   * @param content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param attributes An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst Specifies if the foreignObject should be inserted as first child\n   * @return New wrapper object that wraps the foreignObject element\n   */\n  foreignObject(\n    content: string | Node,\n    attributes?: Attributes,\n    className?: string,\n    insertFirst = false\n  ) {\n    let contentNode: Node;\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if (typeof content === 'string') {\n      const container = document.createElement('div');\n      container.innerHTML = content;\n      contentNode = container.firstChild as Node;\n    } else {\n      contentNode = content;\n    }\n\n    if (contentNode instanceof Element) {\n      // Adding namespace to content element\n      contentNode.setAttribute('xmlns', namespaces.xmlns);\n    }\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    const fnObj = this.elem(\n      'foreignObject',\n      attributes,\n      className,\n      insertFirst\n    );\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(contentNode);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Svg wrapper.\n   * @param t The text that should be added to the text element that is created\n   * @return The same wrapper object that was used to add the newly created element\n   */\n  text(t: string) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   * @return The same wrapper object that got emptied\n   */\n  empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   * @return The parent wrapper object of the element that got removed\n   */\n  remove() {\n    this._node.parentNode?.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   * @param newElement The new Svg object that will be used to replace the current wrapper object\n   * @return The wrapper of the new element\n   */\n  replace(newElement: Svg) {\n    this._node.parentNode?.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   * @param element The Svg element that should be added as a child\n   * @param insertFirst Specifies if the element should be inserted as first child\n   * @return The wrapper of the appended object\n   */\n  append(element: Svg, insertFirst = false) {\n    if (insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   * @return A list of classes or an empty array if there are no classes on the current element\n   */\n  classes() {\n    const classNames = this._node.getAttribute('class');\n\n    return classNames ? classNames.trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */\n  addClass(names: string) {\n    this._node.setAttribute(\n      'class',\n      this.classes()\n        .concat(names.trim().split(/\\s+/))\n        .filter(function (elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        })\n        .join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */\n  removeClass(names: string) {\n    const removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute(\n      'class',\n      this.classes()\n        .filter(name => removedClasses.indexOf(name) === -1)\n        .join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   * @return The wrapper of the current element\n   */\n  removeAllClasses() {\n    this._node.setAttribute('class', '');\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   * @return The elements height in pixels\n   */\n  height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   * @return The elements width in pixels\n   */\n  width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   * @param animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return The current element where the animation was added\n   */\n  animate(\n    animations: Record<string, AnimationDefinition | AnimationDefinition[]>,\n    guided = true,\n    eventEmitter?: EventEmitter\n  ) {\n    Object.keys(animations).forEach(attribute => {\n      const attributeAnimation = animations[attribute];\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if (Array.isArray(attributeAnimation)) {\n        attributeAnimation.forEach(animationDefinition =>\n          createAnimation(\n            this,\n            attribute,\n            animationDefinition,\n            false,\n            eventEmitter\n          )\n        );\n      } else {\n        createAnimation(\n          this,\n          attribute,\n          attributeAnimation,\n          guided,\n          eventEmitter\n        );\n      }\n    });\n\n    return this;\n  }\n}\n","import type {\n  ChartPadding,\n  ChartRect,\n  Options,\n  Label,\n  GridDrawEvent,\n  GridBackgroundDrawEvent,\n  LabelDrawEvent\n} from './types';\nimport type { EventEmitter } from '../event';\nimport type { Axis } from '../axes';\nimport { namespaces } from './constants';\nimport { Svg } from '../svg/Svg';\nimport { quantity } from './lang';\n\n/**\n * Create or reinitialize the SVG element for the chart\n * @param container The containing DOM Node object that will be used to plant the SVG element\n * @param width Set the width of the SVG element. Default is 100%\n * @param height Set the height of the SVG element. Default is 100%\n * @param className Specify a class to be added to the SVG element\n * @return The created/reinitialized SVG element\n */\nexport function createSvg(\n  container: Element,\n  width: number | string = '100%',\n  height: number | string = '100%',\n  className?: string\n) {\n  // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n  // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n  Array.from(container.querySelectorAll('svg'))\n    .filter(svg => svg.getAttributeNS(namespaces.xmlns, 'ct'))\n    .forEach(svg => container.removeChild(svg));\n\n  // Create svg object with width and height or use 100% as default\n  const svg = new Svg('svg')\n    .attr({\n      width,\n      height\n    })\n    .attr({\n      // TODO: Check better solution (browser support) and remove inline styles due to CSP\n      style: `width: ${width}; height: ${height};`\n    });\n\n  if (className) {\n    svg.addClass(className);\n  }\n\n  // Add the DOM node to our container\n  container.appendChild(svg.getNode());\n\n  return svg;\n}\n\n/**\n * Converts a number into a padding object.\n * @param padding\n * @param fallback This value is used to fill missing values if a incomplete padding object was passed\n * @returns Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n */\nexport function normalizePadding(\n  padding: number | Partial<ChartPadding> | undefined\n) {\n  return typeof padding === 'number'\n    ? {\n        top: padding,\n        right: padding,\n        bottom: padding,\n        left: padding\n      }\n    : padding === undefined\n    ? { top: 0, right: 0, bottom: 0, left: 0 }\n    : {\n        top: typeof padding.top === 'number' ? padding.top : 0,\n        right: typeof padding.right === 'number' ? padding.right : 0,\n        bottom: typeof padding.bottom === 'number' ? padding.bottom : 0,\n        left: typeof padding.left === 'number' ? padding.left : 0\n      };\n}\n\n/**\n * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n * @param svg The svg element for the chart\n * @param options The Object that contains all the optional values for the chart\n * @return The chart rectangles coordinates inside the svg element plus the rectangles measurements\n */\nexport function createChartRect(svg: Svg, options: Options) {\n  const hasAxis = Boolean(options.axisX || options.axisY);\n  const yAxisOffset = options.axisY?.offset || 0;\n  const xAxisOffset = options.axisX?.offset || 0;\n  const yAxisPosition = options.axisY?.position;\n  const xAxisPosition = options.axisX?.position;\n  // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n  let width = svg.width() || quantity(options.width).value || 0;\n  let height = svg.height() || quantity(options.height).value || 0;\n  const normalizedPadding = normalizePadding(options.chartPadding);\n\n  // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n  width = Math.max(\n    width,\n    yAxisOffset + normalizedPadding.left + normalizedPadding.right\n  );\n  height = Math.max(\n    height,\n    xAxisOffset + normalizedPadding.top + normalizedPadding.bottom\n  );\n\n  const chartRect = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n    padding: normalizedPadding,\n    width() {\n      return this.x2 - this.x1;\n    },\n    height() {\n      return this.y1 - this.y2;\n    }\n  };\n\n  if (hasAxis) {\n    if (xAxisPosition === 'start') {\n      chartRect.y2 = normalizedPadding.top + xAxisOffset;\n      chartRect.y1 = Math.max(\n        height - normalizedPadding.bottom,\n        chartRect.y2 + 1\n      );\n    } else {\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(\n        height - normalizedPadding.bottom - xAxisOffset,\n        chartRect.y2 + 1\n      );\n    }\n\n    if (yAxisPosition === 'start') {\n      chartRect.x1 = normalizedPadding.left + yAxisOffset;\n      chartRect.x2 = Math.max(\n        width - normalizedPadding.right,\n        chartRect.x1 + 1\n      );\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(\n        width - normalizedPadding.right - yAxisOffset,\n        chartRect.x1 + 1\n      );\n    }\n  } else {\n    chartRect.x1 = normalizedPadding.left;\n    chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n    chartRect.y2 = normalizedPadding.top;\n    chartRect.y1 = Math.max(\n      height - normalizedPadding.bottom,\n      chartRect.y2 + 1\n    );\n  }\n\n  return chartRect;\n}\n\n/**\n * Creates a grid line based on a projected value.\n */\nexport function createGrid(\n  position: number,\n  index: number,\n  axis: Axis,\n  offset: number,\n  length: number,\n  group: Svg,\n  classes: string[],\n  eventEmitter: EventEmitter\n) {\n  const positionalData = {\n    [`${axis.units.pos}1`]: position,\n    [`${axis.units.pos}2`]: position,\n    [`${axis.counterUnits.pos}1`]: offset,\n    [`${axis.counterUnits.pos}2`]: offset + length\n  } as Record<'x1' | 'y1' | 'x2' | 'y2', number>;\n\n  const gridElement = group.elem('line', positionalData, classes.join(' '));\n\n  // Event for grid draw\n  eventEmitter.emit<GridDrawEvent>('draw', {\n    type: 'grid',\n    axis,\n    index,\n    group,\n    element: gridElement,\n    ...positionalData\n  });\n}\n\n/**\n * Creates a grid background rect and emits the draw event.\n */\nexport function createGridBackground(\n  gridGroup: Svg,\n  chartRect: ChartRect,\n  className: string,\n  eventEmitter: EventEmitter\n) {\n  const gridBackground = gridGroup.elem(\n    'rect',\n    {\n      x: chartRect.x1,\n      y: chartRect.y2,\n      width: chartRect.width(),\n      height: chartRect.height()\n    },\n    className,\n    true\n  );\n\n  // Event for grid background draw\n  eventEmitter.emit<GridBackgroundDrawEvent>('draw', {\n    type: 'gridBackground',\n    group: gridGroup,\n    element: gridBackground\n  });\n}\n\n/**\n * Creates a label based on a projected value and an axis.\n */\nexport function createLabel(\n  position: number,\n  length: number,\n  index: number,\n  label: Label,\n  axis: Axis,\n  axisOffset: number,\n  labelOffset: { x: number; y: number },\n  group: Svg,\n  classes: string[],\n  eventEmitter: EventEmitter\n) {\n  const positionalData = {\n    [axis.units.pos]: position + labelOffset[axis.units.pos],\n    [axis.counterUnits.pos]: labelOffset[axis.counterUnits.pos],\n    [axis.units.len]: length,\n    [axis.counterUnits.len]: Math.max(0, axisOffset - 10)\n  } as Record<'x' | 'y' | 'width' | 'height', number>;\n  // We need to set width and height explicitly to px as span will not expand with width and height being\n  // 100% in all browsers\n  const stepLength = Math.round(positionalData[axis.units.len]);\n  const stepCounterLength = Math.round(positionalData[axis.counterUnits.len]);\n  const content = document.createElement('span');\n\n  content.className = classes.join(' ');\n  content.style[axis.units.len] = stepLength + 'px';\n  content.style[axis.counterUnits.len] = stepCounterLength + 'px';\n  content.textContent = String(label);\n\n  const labelElement = group.foreignObject(content, {\n    style: 'overflow: visible;',\n    ...positionalData\n  });\n\n  eventEmitter.emit<LabelDrawEvent>('draw', {\n    type: 'label',\n    axis,\n    index,\n    group,\n    element: labelElement,\n    text: label,\n    ...positionalData\n  });\n}\n","import type { EventEmitter } from '../event';\nimport type { OptionsChangedEvent, ResponsiveOptions } from './types';\nimport { extend } from '../utils';\n\nexport interface OptionsProvider<T = unknown> {\n  removeMediaQueryListeners(): void;\n  getCurrentOptions(): T;\n}\n\n/**\n * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n * @param options Options set by user\n * @param responsiveOptions Optional functions to add responsive behavior to chart\n * @param eventEmitter The event emitter that will be used to emit the options changed events\n * @return The consolidated options object from the defaults, base and matching responsive options\n */\nexport function optionsProvider<T = unknown>(\n  options: T,\n  responsiveOptions: ResponsiveOptions<T> | undefined,\n  eventEmitter: EventEmitter\n): OptionsProvider<T> {\n  let currentOptions: T;\n  const mediaQueryListeners: MediaQueryList[] = [];\n\n  function updateCurrentOptions(mediaEvent?: Event) {\n    const previousOptions = currentOptions;\n    currentOptions = extend({}, options);\n\n    if (responsiveOptions) {\n      responsiveOptions.forEach(responsiveOption => {\n        const mql = window.matchMedia(responsiveOption[0]);\n        if (mql.matches) {\n          currentOptions = extend(currentOptions, responsiveOption[1]);\n        }\n      });\n    }\n\n    if (eventEmitter && mediaEvent) {\n      eventEmitter.emit<OptionsChangedEvent<T>>('optionsChanged', {\n        previousOptions,\n        currentOptions\n      });\n    }\n  }\n\n  function removeMediaQueryListeners() {\n    mediaQueryListeners.forEach(mql =>\n      mql.removeEventListener('change', updateCurrentOptions)\n    );\n  }\n\n  if (!window.matchMedia) {\n    throw new Error(\n      \"window.matchMedia not found! Make sure you're using a polyfill.\"\n    );\n  } else if (responsiveOptions) {\n    responsiveOptions.forEach(responsiveOption => {\n      const mql = window.matchMedia(responsiveOption[0]);\n      mql.addEventListener('change', updateCurrentOptions);\n      mediaQueryListeners.push(mql);\n    });\n  }\n  // Execute initially without an event argument so we get the correct options\n  updateCurrentOptions();\n\n  return {\n    removeMediaQueryListeners,\n    getCurrentOptions() {\n      return currentOptions;\n    }\n  };\n}\n","import type { SegmentData } from '../core';\nimport type { SvgPathOptions, PathCommand, PathParams } from './types';\n\n/**\n * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n */\nconst elementDescriptions: Record<string, string[]> = {\n  m: ['x', 'y'],\n  l: ['x', 'y'],\n  c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n};\n\n/**\n * Default options for newly created SVG path objects.\n */\nconst defaultOptions = {\n  // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n  accuracy: 3\n};\n\nfunction element(\n  command: string,\n  params: PathParams,\n  pathElements: PathCommand[],\n  pos: number,\n  relative: boolean,\n  data?: SegmentData\n) {\n  const pathElement: PathCommand = {\n    command: relative ? command.toLowerCase() : command.toUpperCase(),\n    ...params,\n    ...(data ? { data } : {})\n  };\n\n  pathElements.splice(pos, 0, pathElement);\n}\n\nfunction forEachParam<T extends PathParams = PathParams>(\n  pathElements: PathCommand<T>[],\n  cb: (\n    cmd: PathCommand<T>,\n    param: keyof T,\n    cmdIndex: number,\n    paramIndex: number,\n    cmds: PathCommand<T>[]\n  ) => void\n) {\n  pathElements.forEach((pathElement, pathElementIndex) => {\n    elementDescriptions[pathElement.command.toLowerCase()].forEach(\n      (paramName, paramIndex) => {\n        cb(\n          pathElement,\n          paramName as keyof PathParams,\n          pathElementIndex,\n          paramIndex,\n          pathElements\n        );\n      }\n    );\n  });\n}\n\nexport class SvgPath {\n  /**\n   * This static function on `SvgPath` is joining multiple paths together into one paths.\n   * @param paths A list of paths to be joined together. The order is important.\n   * @param close If the newly created path should be a closed path\n   * @param options Path options for the newly created path.\n   */\n  static join(paths: SvgPath[], close = false, options?: SvgPathOptions) {\n    const joinedPath = new SvgPath(close, options);\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      for (let j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  pathElements: PathCommand[] = [];\n  private pos = 0;\n  private options: Required<SvgPathOptions>;\n\n  /**\n   * Used to construct a new path object.\n   * @param close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param options Options object that overrides the default objects. See default options for more details.\n   */\n  constructor(private readonly close = false, options?: SvgPathOptions) {\n    this.options = { ...defaultOptions, ...options };\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   * @param pos If a number is passed then the cursor is set to this position in the path element array.\n   * @return If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  position(pos: number): this;\n  position(): number;\n  position(pos?: number) {\n    if (pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   * @param count Number of path elements that should be removed from the current position.\n   * @return The current path object for easy call chaining.\n   */\n  remove(count: number) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   * @param x The x coordinate for the move element.\n   * @param y The y coordinate for the move element.\n   * @param relative If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  move(x: number, y: number, relative = false, data?: SegmentData) {\n    element(\n      'M',\n      {\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   * @param x The x coordinate for the line element.\n   * @param y The y coordinate for the line element.\n   * @param relative If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  line(x: number, y: number, relative = false, data?: SegmentData) {\n    element(\n      'L',\n      {\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   * @param x1 The x coordinate for the first control point of the bezier curve.\n   * @param y1 The y coordinate for the first control point of the bezier curve.\n   * @param x2 The x coordinate for the second control point of the bezier curve.\n   * @param y2 The y coordinate for the second control point of the bezier curve.\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  curve(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x: number,\n    y: number,\n    relative = false,\n    data?: SegmentData\n  ) {\n    element(\n      'C',\n      {\n        x1: +x1,\n        y1: +y1,\n        x2: +x2,\n        y2: +y2,\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   * @param rx The radius to be used for the x-axis of the arc.\n   * @param ry The radius to be used for the y-axis of the arc.\n   * @param xAr Defines the orientation of the arc\n   * @param lAf Large arc flag\n   * @param sf Sweep flag\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  arc(\n    rx: number,\n    ry: number,\n    xAr: number,\n    lAf: number,\n    sf: number,\n    x: number,\n    y: number,\n    relative = false,\n    data?: SegmentData\n  ) {\n    element(\n      'A',\n      {\n        rx,\n        ry,\n        xAr,\n        lAf,\n        sf,\n        x,\n        y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   * @param path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return The current path object for easy call chaining.\n   */\n  parse(path: string) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    const chunks = path\n      .replace(/([A-Za-z])(-?[0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce<string[][]>((result, pathElement) => {\n        if (pathElement.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(pathElement);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if (chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    const elements = chunks.map(chunk => {\n      const command = chunk.shift() as string;\n      const description = elementDescriptions[command.toLowerCase()];\n\n      return {\n        command,\n        ...description.reduce<Record<string, number>>(\n          (result, paramName, index) => {\n            result[paramName] = +chunk[index];\n            return result;\n          },\n          {}\n        )\n      } as PathCommand;\n    });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    this.pathElements.splice(this.pos, 0, ...elements);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   */\n  stringify() {\n    const accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return (\n      this.pathElements.reduce((path, pathElement) => {\n        const params = elementDescriptions[\n          pathElement.command.toLowerCase()\n        ].map(paramName => {\n          const value = pathElement[paramName as keyof PathCommand] as number;\n\n          return this.options.accuracy\n            ? Math.round(value * accuracyMultiplier) / accuracyMultiplier\n            : value;\n        });\n\n        return path + pathElement.command + params.join(',');\n      }, '') + (this.close ? 'Z' : '')\n    );\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */\n  scale(x: number, y: number) {\n    forEachParam(this.pathElements, (pathElement, paramName) => {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */\n  translate(x: number, y: number) {\n    forEachParam(this.pathElements, (pathElement, paramName) => {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   * @param transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return The current path object for easy call chaining.\n   */\n  transform(\n    transformFnc: <T extends PathParams = PathParams>(\n      cmd: PathCommand<T>,\n      param: keyof T,\n      cmdIndex: number,\n      paramIndex: number,\n      cmds: PathCommand<T>[]\n    ) => number | void\n  ) {\n    forEachParam(\n      this.pathElements,\n      (pathElement, paramName, pathElementIndex, paramIndex, pathElements) => {\n        const transformed = transformFnc(\n          pathElement,\n          paramName,\n          pathElementIndex,\n          paramIndex,\n          pathElements\n        );\n        if (transformed || transformed === 0) {\n          pathElement[paramName] = transformed;\n        }\n      }\n    );\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   * @param close Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   */\n  clone(close = false) {\n    const clone = new SvgPath(close || this.close);\n    clone.pos = this.pos;\n    clone.pathElements = this.pathElements\n      .slice()\n      .map(pathElement => ({ ...pathElement }));\n    clone.options = { ...this.options };\n    return clone;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   * @param command The command you'd like to use to split the path\n   */\n  splitByCommand(command: string) {\n    const split = [new SvgPath()];\n\n    this.pathElements.forEach(pathElement => {\n      if (\n        pathElement.command === command.toUpperCase() &&\n        split[split.length - 1].pathElements.length !== 0\n      ) {\n        split.push(new SvgPath());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n}\n","import type { SegmentData } from '../core';\nimport { getMultiValue } from '../core';\nimport { SvgPath } from '../svg';\n\nexport interface NoneInterpolationOptions {\n  fillHoles?: boolean;\n}\n\n/**\n * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.none({\n *     fillHoles: false\n *   })\n * });\n * ```\n */\nexport function none(options?: NoneInterpolationOptions) {\n  const finalOptions = {\n    fillHoles: false,\n    ...options\n  };\n\n  return function noneInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ) {\n    const path = new SvgPath();\n    let hole = true;\n\n    for (let i = 0; i < pathCoordinates.length; i += 2) {\n      const currX = pathCoordinates[i];\n      const currY = pathCoordinates[i + 1];\n      const currData = valueData[i / 2];\n\n      if (getMultiValue(currData.value) !== undefined) {\n        if (hole) {\n          path.move(currX, currY, false, currData);\n        } else {\n          path.line(currX, currY, false, currData);\n        }\n\n        hole = false;\n      } else if (!finalOptions.fillHoles) {\n        hole = true;\n      }\n    }\n\n    return path;\n  };\n}\n","import type { SegmentData } from '../core';\nimport { splitIntoSegments } from '../core';\nimport { SvgPath } from '../svg';\nimport { none } from './none';\n\nexport interface MonotoneCubicInterpolationOptions {\n  fillHoles?: boolean;\n}\n\n/**\n * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n *\n * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n *\n * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.monotoneCubic({\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the monotoneCubic factory function.\n */\nexport function monotoneCubic(options?: MonotoneCubicInterpolationOptions) {\n  const finalOptions = {\n    fillHoles: false,\n    ...options\n  };\n\n  return function monotoneCubicInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ): SvgPath {\n    // First we try to split the coordinates into segments\n    // This is necessary to treat \"holes\" in line charts\n    const segments = splitIntoSegments(pathCoordinates, valueData, {\n      fillHoles: finalOptions.fillHoles,\n      increasingX: true\n    });\n\n    if (!segments.length) {\n      // If there were no segments return 'Chartist.Interpolation.none'\n      return none()([], []);\n    } else if (segments.length > 1) {\n      // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n      // afterwards together into a single path.\n      // For each segment we will recurse the monotoneCubic fn function\n      // Join the segment path data into a single path and return\n      return SvgPath.join(\n        segments.map(segment =>\n          monotoneCubicInterpolation(segment.pathCoordinates, segment.valueData)\n        )\n      );\n    } else {\n      // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n      // segment\n      pathCoordinates = segments[0].pathCoordinates;\n      valueData = segments[0].valueData;\n\n      // If less than three points we need to fallback to no smoothing\n      if (pathCoordinates.length <= 4) {\n        return none()(pathCoordinates, valueData);\n      }\n\n      const xs = [];\n      const ys = [];\n      const n = pathCoordinates.length / 2;\n      const ms = [];\n      const ds = [];\n      const dys = [];\n      const dxs = [];\n\n      // Populate x and y coordinates into separate arrays, for readability\n      for (let i = 0; i < n; i++) {\n        xs[i] = pathCoordinates[i * 2];\n        ys[i] = pathCoordinates[i * 2 + 1];\n      }\n\n      // Calculate deltas and derivative\n      for (let i = 0; i < n - 1; i++) {\n        dys[i] = ys[i + 1] - ys[i];\n        dxs[i] = xs[i + 1] - xs[i];\n        ds[i] = dys[i] / dxs[i];\n      }\n\n      // Determine desired slope (m) at each point using Fritsch-Carlson method\n      // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n      ms[0] = ds[0];\n      ms[n - 1] = ds[n - 2];\n\n      for (let i = 1; i < n - 1; i++) {\n        if (ds[i] === 0 || ds[i - 1] === 0 || ds[i - 1] > 0 !== ds[i] > 0) {\n          ms[i] = 0;\n        } else {\n          ms[i] =\n            (3 * (dxs[i - 1] + dxs[i])) /\n            ((2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n          if (!isFinite(ms[i])) {\n            ms[i] = 0;\n          }\n        }\n      }\n\n      // Now build a path from the slopes\n      const path = new SvgPath().move(xs[0], ys[0], false, valueData[0]);\n\n      for (let i = 0; i < n - 1; i++) {\n        path.curve(\n          // First control point\n          xs[i] + dxs[i] / 3,\n          ys[i] + (ms[i] * dxs[i]) / 3,\n          // Second control point\n          xs[i + 1] - dxs[i] / 3,\n          ys[i + 1] - (ms[i + 1] * dxs[i]) / 3,\n          // End point\n          xs[i + 1],\n          ys[i + 1],\n\n          false,\n          valueData[i + 1]\n        );\n      }\n\n      return path;\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type EventListener<T = any> = (data: T) => void;\n\nexport type AllEventsListener<T = any> = (event: string, data: T) => void;\n\nexport class EventEmitter {\n  private readonly listeners = new Map<string, Set<EventListener>>();\n  private readonly allListeners = new Set<AllEventsListener>();\n\n  /**\n   * Add an event handler for a specific event\n   * @param event The event name\n   * @param listener A event handler function\n   */\n  on(event: '*', listener: AllEventsListener): void;\n  on(event: string, listener: EventListener): void;\n  on(event: string, listener: EventListener | AllEventsListener) {\n    const { allListeners, listeners } = this;\n\n    if (event === '*') {\n      allListeners.add(listener);\n    } else {\n      if (!listeners.has(event)) {\n        listeners.set(event, new Set());\n      }\n\n      (listeners.get(event) as Set<EventListener>).add(\n        listener as EventListener\n      );\n    }\n  }\n\n  /**\n   * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n   * @param event The event name where a specific or all handlers should be removed\n   * @param [listener] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n   */\n  off(event: '*', listener?: AllEventsListener): void;\n  off(event: string, listener?: EventListener): void;\n  off(event: string, listener?: EventListener | AllEventsListener) {\n    const { allListeners, listeners } = this;\n\n    if (event === '*') {\n      if (listener) {\n        allListeners.delete(listener);\n      } else {\n        allListeners.clear();\n      }\n    } else if (listeners.has(event)) {\n      const eventListeners = listeners.get(event) as Set<EventListener>;\n\n      if (listener) {\n        eventListeners.delete(listener as EventListener);\n      } else {\n        eventListeners.clear();\n      }\n\n      if (!eventListeners.size) {\n        listeners.delete(event);\n      }\n    }\n  }\n\n  /**\n   * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n   * @param event The event name that should be triggered\n   * @param data Arbitrary data that will be passed to the event handler callback functions\n   */\n  emit<T = any>(event: string, data: T) {\n    const { allListeners, listeners } = this;\n\n    // Only do something if there are event handlers with this name existing\n    if (listeners.has(event)) {\n      (listeners.get(event) as Set<EventListener>).forEach(listener =>\n        listener(data)\n      );\n    }\n\n    // Emit event to star event handlers\n    allListeners.forEach(listener => listener(event, data));\n  }\n}\n","import type { Data, Options, DataEvent, ResponsiveOptions } from '../core';\nimport type { Svg } from '../svg';\nimport type { BaseChartEventsTypes } from './types';\nimport { OptionsProvider, optionsProvider } from '../core';\nimport { extend } from '../utils';\nimport { EventListener, AllEventsListener, EventEmitter } from '../event';\n\nconst instances = new WeakMap<Element, BaseChart<unknown>>();\n\nexport abstract class BaseChart<TEventsTypes = BaseChartEventsTypes> {\n  protected svg?: Svg;\n  protected readonly container: Element;\n  protected readonly eventEmitter = new EventEmitter();\n  private readonly resizeListener = () => this.update();\n  // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n  // the chart was created.\n  private initializeTimeoutId: NodeJS.Timer | null = setTimeout(\n    () => this.initialize(),\n    0\n  );\n  private optionsProvider?: OptionsProvider<Options>;\n\n  constructor(\n    query: string | Element | null,\n    protected data: Data,\n    private readonly defaultOptions: Options,\n    private options: Options,\n    private readonly responsiveOptions?: ResponsiveOptions<Options>\n  ) {\n    const container =\n      typeof query === 'string' ? document.querySelector(query) : query;\n\n    if (!container) {\n      throw new Error('Target element is not found');\n    }\n\n    this.container = container;\n\n    const prevInstance = instances.get(container);\n\n    // If chartist was already initialized in this container we are detaching all event listeners first\n    if (prevInstance) {\n      prevInstance.detach();\n    }\n\n    instances.set(container, this);\n  }\n\n  abstract createChart(options: Options): void;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   * @param data Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param options Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param override If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   */\n  update(data?: Data, options?: Options, override = false) {\n    if (data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit<DataEvent>('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if (options) {\n      this.options = extend(\n        {},\n        override ? this.options : this.defaultOptions,\n        options\n      );\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if (!this.initializeTimeoutId) {\n        this.optionsProvider?.removeMediaQueryListeners();\n        this.optionsProvider = optionsProvider(\n          this.options,\n          this.responsiveOptions,\n          this.eventEmitter\n        );\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if (!this.initializeTimeoutId && this.optionsProvider) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   */\n  detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if (!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider?.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    instances.delete(this.container);\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   * @param event Name of the event. Check the examples for supported events.\n   * @param listener The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  on<T extends keyof TEventsTypes>(\n    event: T,\n    listener: EventListener<TEventsTypes[T]>\n  ): this;\n  on(event: '*', listener: AllEventsListener): this;\n  on(event: string, listener: EventListener): this;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  on(event: string, listener: any) {\n    this.eventEmitter.on(event, listener);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   * @param event Name of the event for which a handler should be removed\n   * @param listener The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  off<T extends keyof TEventsTypes>(\n    event: T,\n    listener?: EventListener<TEventsTypes[T]>\n  ): this;\n  off(event: '*', listener?: AllEventsListener): this;\n  off(event: string, listener?: EventListener): this;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  off(event: string, listener?: any) {\n    this.eventEmitter.off(event, listener);\n    return this;\n  }\n\n  initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = optionsProvider(\n      this.options,\n      this.responsiveOptions,\n      this.eventEmitter\n    );\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.on('optionsChanged', () => this.update());\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if (this.options.plugins) {\n      this.options.plugins.forEach(plugin => {\n        if (Array.isArray(plugin)) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      });\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit<DataEvent>('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = null;\n  }\n}\n","import type {\n  Label,\n  ChartRect,\n  OptionsWithDefaults,\n  NormalizedSeriesPrimitiveValue,\n  NormalizedSeries\n} from '../core';\nimport type { Svg } from '../svg';\nimport type { EventEmitter } from '../event';\nimport { isFalseyButZero } from '../utils';\nimport { createGrid, createLabel } from '../core';\n\nexport const axisUnits = {\n  x: {\n    pos: 'x',\n    len: 'width',\n    dir: 'horizontal',\n    rectStart: 'x1',\n    rectEnd: 'x2',\n    rectOffset: 'y2'\n  },\n  y: {\n    pos: 'y',\n    len: 'height',\n    dir: 'vertical',\n    rectStart: 'y2',\n    rectEnd: 'y1',\n    rectOffset: 'x1'\n  }\n} as const;\n\nexport type XAxisUnits = typeof axisUnits.x;\nexport type YAxisUnits = typeof axisUnits.y;\nexport type AxisUnits = XAxisUnits | YAxisUnits;\n\nexport abstract class Axis {\n  public readonly counterUnits: AxisUnits;\n  public readonly range:\n    | {\n        min: number;\n        max: number;\n      }\n    | undefined;\n  readonly axisLength: number;\n  private readonly gridOffset: number;\n\n  constructor(\n    public readonly units: AxisUnits,\n    private readonly chartRect: ChartRect,\n    private readonly ticks: Label[]\n  ) {\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.axisLength =\n      chartRect[this.units.rectEnd] - chartRect[this.units.rectStart];\n    this.gridOffset = chartRect[this.units.rectOffset];\n  }\n\n  abstract projectValue(\n    value: NormalizedSeriesPrimitiveValue | Label,\n    index?: number,\n    series?: NormalizedSeries\n  ): number;\n\n  createGridAndLabels(\n    gridGroup: Svg,\n    labelGroup: Svg,\n    chartOptions: OptionsWithDefaults,\n    eventEmitter: EventEmitter\n  ) {\n    const axisOptions =\n      this.units.pos === 'x' ? chartOptions.axisX : chartOptions.axisY;\n    const projectedValues = this.ticks.map((tick, i) =>\n      this.projectValue(tick, i)\n    );\n    const labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach((projectedValue, index) => {\n      const labelValue = labelValues[index];\n      const labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      let labelLength;\n      if (projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(\n          this.axisLength - projectedValue,\n          this.axisLength / this.ticks.length\n        );\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (except for 0)\n      if (labelValue !== '' && isFalseyButZero(labelValue)) {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if (this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if (chartOptions.axisX.position === 'start') {\n          labelOffset.y =\n            this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + 5;\n        } else {\n          labelOffset.y =\n            this.chartRect.y1 + chartOptions.axisX.labelOffset.y + 5;\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - labelLength;\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if (chartOptions.axisY.position === 'start') {\n          labelOffset.x =\n            this.chartRect.padding.left + chartOptions.axisY.labelOffset.x;\n        } else {\n          labelOffset.x =\n            this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if (axisOptions.showGrid) {\n        createGrid(\n          projectedValue,\n          index,\n          this,\n          this.gridOffset,\n          this.chartRect[this.counterUnits.len](),\n          gridGroup,\n          [\n            chartOptions.classNames.grid,\n            chartOptions.classNames[this.units.dir]\n          ],\n          eventEmitter\n        );\n      }\n\n      if (axisOptions.showLabel) {\n        createLabel(\n          projectedValue,\n          labelLength,\n          index,\n          labelValue,\n          this,\n          axisOptions.offset,\n          labelOffset,\n          labelGroup,\n          [\n            chartOptions.classNames.label,\n            chartOptions.classNames[this.units.dir],\n            axisOptions.position === 'start'\n              ? chartOptions.classNames[axisOptions.position]\n              : chartOptions.classNames.end\n          ],\n          eventEmitter\n        );\n      }\n    });\n  }\n}\n","import type {\n  ChartRect,\n  AxisOptions,\n  Bounds,\n  NormalizedSeries,\n  NormalizedSeriesPrimitiveValue\n} from '../core';\nimport { getBounds, getHighLow, getMultiValue } from '../core';\nimport { AxisUnits, Axis } from './Axis';\n\nexport class AutoScaleAxis extends Axis {\n  private readonly bounds: Bounds;\n  public override readonly range: {\n    min: number;\n    max: number;\n  };\n\n  constructor(\n    axisUnit: AxisUnits,\n    data: NormalizedSeries[],\n    chartRect: ChartRect,\n    options: AxisOptions\n  ) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    const highLow = options.highLow || getHighLow(data, options, axisUnit.pos);\n    const bounds = getBounds(\n      chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart],\n      highLow,\n      options.scaleMinSpace || 20,\n      options.onlyInteger\n    );\n    const range = {\n      min: bounds.min,\n      max: bounds.max\n    };\n\n    super(axisUnit, chartRect, bounds.values);\n\n    this.bounds = bounds;\n    this.range = range;\n  }\n\n  projectValue(value: NormalizedSeriesPrimitiveValue) {\n    const finalValue = Number(getMultiValue(value, this.units.pos));\n\n    return (\n      (this.axisLength * (finalValue - this.bounds.min)) / this.bounds.range\n    );\n  }\n}\n","import type { ChartRect, AxisOptions } from '../core';\nimport { AxisUnits, Axis } from './Axis';\n\nexport class StepAxis extends Axis {\n  private readonly stepLength: number;\n  public readonly stretch: boolean;\n\n  constructor(\n    axisUnit: AxisUnits,\n    _data: unknown,\n    chartRect: ChartRect,\n    options: AxisOptions\n  ) {\n    const ticks = options.ticks || [];\n\n    super(axisUnit, chartRect, ticks);\n\n    const calc = Math.max(1, ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n    this.stretch = Boolean(options.stretch);\n  }\n\n  projectValue(_value: unknown, index: number) {\n    return this.stepLength * index;\n  }\n}\n","import type { Axis } from '../../axes';\nimport type {\n  LineChartData,\n  LineChartOptions,\n  LineChartOptionsWithDefaults,\n  LineChartCreatedEvent,\n  PointDrawEvent,\n  LineDrawEvent,\n  AreaDrawEvent,\n  LineChartEventsTypes\n} from './LineChart.types';\nimport type {\n  SegmentData,\n  Series,\n  SeriesObject,\n  ResponsiveOptions\n} from '../../core';\nimport {\n  alphaNumerate,\n  normalizeData,\n  serialize,\n  getMetaData,\n  createSvg,\n  createChartRect,\n  createGridBackground\n} from '../../core';\nimport { isNumeric, noop, extend, safeHasProperty, each } from '../../utils';\nimport { StepAxis, AutoScaleAxis, axisUnits } from '../../axes';\nimport { monotoneCubic, none } from '../../interpolation';\nimport { BaseChart } from './../BaseChart';\n\nexport function getSeriesOption<\n  T extends keyof Omit<LineChartOptionsWithDefaults, 'series'>\n>(\n  series: Series | SeriesObject,\n  options: LineChartOptionsWithDefaults,\n  key: T\n) {\n  if (\n    safeHasProperty(series, 'name') &&\n    series.name &&\n    options.series?.[series.name]\n  ) {\n    const seriesOptions = options?.series[series.name];\n    const value = seriesOptions[key];\n    const result = value === undefined ? options[key] : value;\n\n    return result as LineChartOptionsWithDefaults[T];\n  } else {\n    return options[key];\n  }\n}\n\n/**\n * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n */\nconst defaultOptions = {\n  // Options for X-Axis\n  axisX: {\n    // The offset of the labels to the chart area\n    offset: 30,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'end' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n    type: undefined\n  },\n  // Options for Y-Axis\n  axisY: {\n    // The offset of the labels to the chart area\n    offset: 40,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'start' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n    type: undefined,\n    // This value specifies the minimum height in pixel of the scale steps\n    scaleMinSpace: 20,\n    // Use only integer values (whole numbers) for the scale steps\n    onlyInteger: false\n  },\n  // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n  width: undefined,\n  // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n  height: undefined,\n  // If the line should be drawn or not\n  showLine: true,\n  // If dots should be drawn or not\n  showPoint: true,\n  // If the line chart should draw an area\n  showArea: false,\n  // The base for the area chart that will be used to close the area shape (is normally 0)\n  areaBase: 0,\n  // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n  lineSmooth: true,\n  // If the line chart should add a background fill to the .ct-grids group.\n  showGridBackground: false,\n  // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n  low: undefined,\n  // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n  high: undefined,\n  // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n  chartPadding: {\n    top: 15,\n    right: 15,\n    bottom: 5,\n    left: 10\n  },\n  // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n  fullWidth: false,\n  // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n  reverseData: false,\n  // Override the class names that get used to generate the SVG structure of the chart\n  classNames: {\n    chart: 'ct-chart-line',\n    label: 'ct-label',\n    labelGroup: 'ct-labels',\n    series: 'ct-series',\n    line: 'ct-line',\n    point: 'ct-point',\n    area: 'ct-area',\n    grid: 'ct-grid',\n    gridGroup: 'ct-grids',\n    gridBackground: 'ct-grid-background',\n    vertical: 'ct-vertical',\n    horizontal: 'ct-horizontal',\n    start: 'ct-start',\n    end: 'ct-end'\n  }\n};\n\nexport class LineChart extends BaseChart<LineChartEventsTypes> {\n  /**\n   * This method creates a new line chart.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object that needs to consist of a labels and a series array\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return An object which exposes the API for the created chart\n   *\n   * @example\n   * ```ts\n   * // Create a simple line chart\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * const options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new LineChart('.ct-chart', data, options);\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * const chart = new LineChart('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Create a line chart with responsive options\n   *\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * const responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new LineChart('.ct-chart', data, null, responsiveOptions);\n   * ```\n   */\n  constructor(\n    query: string | Element | null,\n    protected override data: LineChartData,\n    options?: LineChartOptions,\n    responsiveOptions?: ResponsiveOptions<LineChartOptions>\n  ) {\n    super(\n      query,\n      data,\n      defaultOptions,\n      extend({}, defaultOptions, options),\n      responsiveOptions\n    );\n  }\n\n  /**\n   * Creates a new chart\n   */\n  createChart(options: LineChartOptionsWithDefaults) {\n    const { data } = this;\n    const normalizedData = normalizeData(data, options.reverseData, true);\n\n    // Create new svg object\n    const svg = createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart\n    );\n\n    this.svg = svg;\n\n    // Create groups for labels, grid and series\n    const gridGroup = svg.elem('g').addClass(options.classNames.gridGroup);\n    const seriesGroup = svg.elem('g');\n    const labelGroup = svg.elem('g').addClass(options.classNames.labelGroup);\n\n    const chartRect = createChartRect(svg, options);\n    let axisX: Axis;\n    let axisY: Axis;\n\n    if (options.axisX.type === undefined) {\n      axisX = new StepAxis(axisUnits.x, normalizedData.series, chartRect, {\n        ...options.axisX,\n        ticks: normalizedData.labels,\n        stretch: options.fullWidth\n      });\n    } else {\n      // eslint-disable-next-line new-cap\n      axisX = new options.axisX.type(\n        axisUnits.x,\n        normalizedData.series,\n        chartRect,\n        options.axisX\n      );\n    }\n\n    if (options.axisY.type === undefined) {\n      axisY = new AutoScaleAxis(axisUnits.y, normalizedData.series, chartRect, {\n        ...options.axisY,\n        high: isNumeric(options.high) ? options.high : options.axisY.high,\n        low: isNumeric(options.low) ? options.low : options.axisY.low\n      });\n    } else {\n      // eslint-disable-next-line new-cap\n      axisY = new options.axisY.type(\n        axisUnits.y,\n        normalizedData.series,\n        chartRect,\n        options.axisY\n      );\n    }\n\n    axisX.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n    axisY.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n\n    if (options.showGridBackground) {\n      createGridBackground(\n        gridGroup,\n        chartRect,\n        options.classNames.gridBackground,\n        this.eventEmitter\n      );\n    }\n\n    // Draw the series\n    each(\n      data.series,\n      (series, seriesIndex) => {\n        const seriesElement = seriesGroup.elem('g');\n        const seriesName = safeHasProperty(series, 'name') && series.name;\n        const seriesClassName =\n          safeHasProperty(series, 'className') && series.className;\n        const seriesMeta = safeHasProperty(series, 'meta')\n          ? series.meta\n          : undefined;\n\n        // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n        if (seriesName) {\n          seriesElement.attr({\n            'ct:series-name': seriesName\n          });\n        }\n\n        if (seriesMeta) {\n          seriesElement.attr({\n            'ct:meta': serialize(seriesMeta)\n          });\n        }\n\n        // Use series class from series data or if not set generate one\n        seriesElement.addClass(\n          [\n            options.classNames.series,\n            seriesClassName ||\n              `${options.classNames.series}-${alphaNumerate(seriesIndex)}`\n          ].join(' ')\n        );\n\n        const pathCoordinates: number[] = [];\n        const pathData: SegmentData[] = [];\n\n        normalizedData.series[seriesIndex].forEach((value, valueIndex) => {\n          const p = {\n            x:\n              chartRect.x1 +\n              axisX.projectValue(\n                value,\n                valueIndex,\n                normalizedData.series[seriesIndex]\n              ),\n            y:\n              chartRect.y1 -\n              axisY.projectValue(\n                value,\n                valueIndex,\n                normalizedData.series[seriesIndex]\n              )\n          };\n          pathCoordinates.push(p.x, p.y);\n          pathData.push({\n            value,\n            valueIndex,\n            meta: getMetaData(series, valueIndex)\n          });\n        });\n\n        const seriesOptions = {\n          lineSmooth: getSeriesOption(series, options, 'lineSmooth'),\n          showPoint: getSeriesOption(series, options, 'showPoint'),\n          showLine: getSeriesOption(series, options, 'showLine'),\n          showArea: getSeriesOption(series, options, 'showArea'),\n          areaBase: getSeriesOption(series, options, 'areaBase')\n        };\n\n        let smoothing;\n        if (typeof seriesOptions.lineSmooth === 'function') {\n          smoothing = seriesOptions.lineSmooth;\n        } else {\n          smoothing = seriesOptions.lineSmooth ? monotoneCubic() : none();\n        }\n\n        // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n        // index, value and meta data\n        const path = smoothing(pathCoordinates, pathData);\n\n        // If we should show points we need to create them now to avoid secondary loop\n        // Points are drawn from the pathElements returned by the interpolation function\n        // Small offset for Firefox to render squares correctly\n        if (seriesOptions.showPoint) {\n          path.pathElements.forEach(pathElement => {\n            const { data: pathElementData } = pathElement;\n            const point = seriesElement.elem(\n              'line',\n              {\n                x1: pathElement.x,\n                y1: pathElement.y,\n                x2: pathElement.x + 0.01,\n                y2: pathElement.y\n              },\n              options.classNames.point\n            );\n\n            if (pathElementData) {\n              let x: number | undefined;\n              let y: number | undefined;\n\n              if (safeHasProperty(pathElementData.value, 'x')) {\n                x = pathElementData.value.x;\n              }\n\n              if (safeHasProperty(pathElementData.value, 'y')) {\n                y = pathElementData.value.y;\n              }\n\n              point.attr({\n                'ct:value': [x, y].filter(isNumeric).join(','),\n                'ct:meta': serialize(pathElementData.meta)\n              });\n            }\n\n            this.eventEmitter.emit<PointDrawEvent>('draw', {\n              type: 'point',\n              value: pathElementData?.value,\n              index: pathElementData?.valueIndex || 0,\n              meta: pathElementData?.meta,\n              series,\n              seriesIndex,\n              axisX,\n              axisY,\n              group: seriesElement,\n              element: point,\n              x: pathElement.x,\n              y: pathElement.y,\n              chartRect\n            });\n          });\n        }\n\n        if (seriesOptions.showLine) {\n          const line = seriesElement.elem(\n            'path',\n            {\n              d: path.stringify()\n            },\n            options.classNames.line,\n            true\n          );\n\n          this.eventEmitter.emit<LineDrawEvent>('draw', {\n            type: 'line',\n            values: normalizedData.series[seriesIndex],\n            path: path.clone(),\n            chartRect,\n            // TODO: Remove redundant\n            index: seriesIndex,\n            series,\n            seriesIndex,\n            meta: seriesMeta,\n            axisX,\n            axisY,\n            group: seriesElement,\n            element: line\n          });\n        }\n\n        // Area currently only works with axes that support a range!\n        if (seriesOptions.showArea && axisY.range) {\n          // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n          // the area is not drawn outside the chart area.\n          const areaBase = Math.max(\n            Math.min(seriesOptions.areaBase, axisY.range.max),\n            axisY.range.min\n          );\n\n          // We project the areaBase value into screen coordinates\n          const areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n          // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n          path\n            .splitByCommand('M')\n            // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n            .filter(pathSegment => pathSegment.pathElements.length > 1)\n            .map(solidPathSegments => {\n              // Receiving the filtered solid path segments we can now convert those segments into fill areas\n              const firstElement = solidPathSegments.pathElements[0];\n              const lastElement =\n                solidPathSegments.pathElements[\n                  solidPathSegments.pathElements.length - 1\n                ];\n\n              // Cloning the solid path segment with closing option and removing the first move command from the clone\n              // We then insert a new move that should start at the area base and draw a straight line up or down\n              // at the end of the path we add an additional straight line to the projected area base value\n              // As the closing option is set our path will be automatically closed\n              return solidPathSegments\n                .clone(true)\n                .position(0)\n                .remove(1)\n                .move(firstElement.x, areaBaseProjected)\n                .line(firstElement.x, firstElement.y)\n                .position(solidPathSegments.pathElements.length + 1)\n                .line(lastElement.x, areaBaseProjected);\n            })\n            .forEach(areaPath => {\n              // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n              // and adding the created DOM elements to the correct series group\n              const area = seriesElement.elem(\n                'path',\n                {\n                  d: areaPath.stringify()\n                },\n                options.classNames.area,\n                true\n              );\n\n              // Emit an event for each area that was drawn\n              this.eventEmitter.emit<AreaDrawEvent>('draw', {\n                type: 'area',\n                values: normalizedData.series[seriesIndex],\n                path: areaPath.clone(),\n                series,\n                seriesIndex,\n                axisX,\n                axisY,\n                chartRect,\n                // TODO: Remove redundant\n                index: seriesIndex,\n                group: seriesElement,\n                element: area,\n                meta: seriesMeta\n              });\n            });\n        }\n      },\n      options.reverseData\n    );\n\n    this.eventEmitter.emit<LineChartCreatedEvent>('created', {\n      chartRect,\n      axisX,\n      axisY,\n      svg,\n      options\n    });\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uObserve from './observe.js';\n\n/**\n * @class ViewModel\n * @property {Object} model\n */\nexport default class ViewModel {\n\n  /**\n   * @param {Object} model\n   */\n  constructor(model) {\n    this._model = model;\n    this.root = document;\n  }\n\n  /**\n   * @return {Object}\n   */\n  get model() {\n    return this._model;\n  }\n\n  /**\n   * Apply bindings for model properties\n   * @param {HTMLElement=} root Root element\n   */\n  bindAll(root = document) {\n    this.root = root;\n    for (const key in this._model) {\n      if (this._model.hasOwnProperty(key)) {\n        this.bind(key);\n      }\n    }\n  }\n\n  /**\n   * Creates bidirectional binding between model property and DOM element.\n   * For input elements model property value change triggers change in DOM element and vice versa.\n   * In case of anchor or button element binding is one way. Model property is callback that will receive click event.\n   * @param {string} key\n   */\n  bind(key) {\n    const dataProp = 'bind';\n    const observers = this.root.querySelectorAll(`[data-${dataProp}]`);\n    observers.forEach(/** @param {HTMLElement} element */ (element) => {\n      const name = element.dataset[dataProp];\n      if (name === key) {\n        if (element instanceof HTMLInputElement ||\n          element instanceof HTMLSelectElement ||\n          element instanceof HTMLTextAreaElement) {\n          this.onChangeBind(element, key);\n        } else if (element instanceof HTMLAnchorElement ||\n          element instanceof HTMLButtonElement) {\n          this.onClickBind(element, key);\n        } else {\n          this.viewUpdateBind(element, key);\n        }\n      }\n    });\n  }\n\n  /**\n   * One way bind: view element click event to view model event handler\n   * @param {HTMLAnchorElement} element\n   * @param {string} key\n   */\n  onClickBind(element, key) {\n    element.addEventListener('click', (event) => {\n      if (typeof this._model[key] !== 'function') {\n        throw new Error(`Property ${key} is not a callback`);\n      }\n      this._model[key](event);\n      event.preventDefault();\n    });\n  }\n\n  /**\n   * Two way bind: view element change event to view model property\n   * @param {(HTMLInputElement|HTMLSelectElement)} element\n   * @param {string} key\n   */\n  onChangeBind(element, key) {\n    let prop = 'value';\n    let getVal = (val) => val;\n    if (element.type === 'checkbox') {\n      prop = 'checked';\n      getVal = (val) => !!val;\n    }\n    element.addEventListener('change', () => {\n      this._model[key] = element[prop];\n    });\n    uObserve.observe(this.model, key, (val) => {\n      val = getVal(val);\n      if (element[prop] !== val) {\n        element[prop] = val;\n      }\n    });\n  }\n\n  /**\n   * One way bind: view model property to view element content\n   * @param {HTMLElement} element\n   * @param {string} key\n   */\n  viewUpdateBind(element, key) {\n    uObserve.observe(this.model, key, (content) => {\n      if (element.innerHTML !== content) {\n        element.innerHTML = content;\n      }\n    });\n  }\n\n  /**\n   * @param {string} property\n   * @param {ObserveCallback} callback\n   */\n  onChanged(property, callback) {\n    uObserve.observe(this.model, property, callback);\n  }\n\n  /**\n   * @param {string} property\n   * @param {ObserveCallback} callback\n   */\n  unsubscribe(property, callback) {\n    uObserve.unobserve(this.model, property, callback);\n  }\n\n  getBoundElement(property) {\n    return this.root.querySelector(`[data-bind='${property}']`);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AutoScaleAxis, LineChart } from 'chartist';\nimport { lang as $ } from './initializer.js';\nimport ViewModel from './viewmodel.js';\nimport ctAxisTitle from 'chartist-plugin-axistitle';\nimport uObserve from './observe.js';\nimport uUtils from './utils.js';\n\n/**\n * @typedef {Object} PlotPoint\n * @property {number} x\n * @property {number} y\n */\n/**\n * @typedef {PlotPoint[]} PlotData\n */\n\n// FIXME: Chartist is not suitable for large data sets\nconst LARGE_DATA = 1000;\nexport default class ChartViewModel extends ViewModel {\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super({\n      pointSelected: null,\n      chartVisible: false,\n      buttonVisible: false,\n      onChartToggle: null,\n      onMenuToggle: null\n    });\n    this.state = state;\n    /** @type {PlotData} */\n    this.data = [];\n    /** @type {?LineChart} */\n    this.chart = null;\n    /** @type {?NodeListOf<SVGLineElement>} */\n    this.chartPoints = null;\n    /** @type {HTMLDivElement} */\n    this.chartElement = document.querySelector('#chart');\n    /** @type {HTMLDivElement} */\n    this.chartContainer = this.chartElement.parentElement;\n    /** @type {HTMLAnchorElement} */\n    this.buttonElement = document.querySelector('#altitudes');\n  }\n\n  /**\n   * @return {ChartViewModel}\n   */\n  init() {\n    this.chartSetup();\n    this.setObservers();\n    this.bindAll();\n    return this;\n  }\n\n  chartSetup() {\n    uUtils.addCss('css/dist/chartist.css', 'chartist_css');\n    this.chart = ChartViewModel.getChart(this.chartElement, this.data);\n    this.chart.on('created', () => this.onCreated());\n  }\n\n  static getChart(element, data) {\n    return new LineChart(element, {\n      series: [ data ]\n    }, {\n      lineSmooth: true,\n      showArea: true,\n      axisX: {\n        type: AutoScaleAxis,\n        onlyInteger: true,\n        showLabel: false\n      },\n      plugins: [\n        ctAxisTitle({\n          axisY: {\n            axisTitle: `${$._('altitude')} (${$.unit('unitDistance')} ${$.unit('unitAltitude')})`,\n            axisClass: 'ct-axis-title',\n            offset: {\n              x: 0,\n              y: 11\n            },\n            textAnchor: 'middle',\n            flipTitle: true\n          }\n        })\n      ]\n    });\n  }\n\n  onCreated() {\n    if (this.data.length && this.data.length <= LARGE_DATA) {\n      this.chartPoints = document.querySelectorAll('.ct-series .ct-point');\n      const len = this.chartPoints.length;\n      for (let id = 0; id < len; id++) {\n        this.chartPoints[id].addEventListener('click', () => {\n          this.model.pointSelected = id;\n        });\n      }\n    }\n  }\n\n  setObservers() {\n    this.state.onChanged('currentTrack', (track) => {\n      if (track) {\n        uObserve.observe(track, 'positions', () => {\n          this.onTrackUpdate(track, true);\n        });\n      }\n      this.onTrackUpdate(track);\n    });\n    this.onChanged('buttonVisible', (visible) => this.renderButton(visible));\n    this.onChanged('chartVisible', (visible) => this.renderContainer(visible));\n    this.model.onChartToggle = () => {\n      this.model.chartVisible = !this.model.chartVisible;\n    };\n    this.model.onMenuToggle = () => {\n      if (this.model.chartVisible) {\n        this.chart.update();\n      }\n    };\n  }\n\n  /**\n   * @param {?uTrack} track\n   * @param {boolean=} update\n   */\n  onTrackUpdate(track, update = false) {\n    this.render(track, update);\n    this.model.buttonVisible = !!track && track.hasPlotData;\n  }\n\n  /**\n   * @param {boolean} isVisible\n   */\n  renderContainer(isVisible) {\n    if (isVisible) {\n      this.chartContainer.style.display = 'block';\n      this.render(this.state.currentTrack);\n    } else {\n      this.chartContainer.style.display = 'none';\n    }\n  }\n\n  /**\n   * @param {boolean} isVisible\n   */\n  renderButton(isVisible) {\n    if (isVisible) {\n      this.buttonElement.classList.remove('menu-hidden');\n    } else {\n      this.buttonElement.classList.add('menu-hidden');\n    }\n  }\n\n  /**\n   * @param {?uTrack} track\n   * @param {boolean=} update\n   */\n  render(track, update = false) {\n    let data = [];\n    if (track && track.hasPlotData && this.model.chartVisible) {\n      data = track.plotData;\n    } else {\n      this.model.chartVisible = false;\n    }\n    if (update || this.data !== data) {\n      console.log(`Chart${update ? ' forced' : ''} update (${data.length})`);\n      this.data = data;\n      const options = {\n        lineSmooth: (data.length <= LARGE_DATA)\n      };\n      this.chart.update({ series: [ data ] }, options, true);\n    }\n  }\n\n  /**\n   * @param {number} pointId\n   * @param {string} $className\n   */\n  pointAddClass(pointId, $className) {\n    if (this.model.chartVisible && this.chartPoints && this.chartPoints.length > pointId) {\n      const point = this.chartPoints[pointId];\n      point.classList.add($className);\n    }\n  }\n\n  /**\n   * @param {string} $className\n   */\n  pointsRemoveClass($className) {\n    if (this.model.chartVisible && this.chartPoints) {\n      this.chartPoints.forEach((el) => el.classList.remove($className));\n    }\n  }\n\n  /**\n   * @param {number} pointId\n   */\n  onPointOver(pointId) {\n    this.pointAddClass(pointId, 'ct-point-hilight');\n  }\n\n  onPointOut() {\n    this.pointsRemoveClass('ct-point-hilight');\n  }\n\n  /**\n   * @param {number} pointId\n   */\n  onPointSelect(pointId) {\n    this.pointAddClass(pointId, 'ct-point-selected');\n  }\n\n  onPointUnselect() {\n    this.pointsRemoveClass('ct-point-selected');\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uUtils from './utils.js';\n\nexport default class uAlert {\n\n  /**\n   * @typedef {Object} AlertOptions\n   * @property {number} [autoClose=0] Optional autoclose delay time in ms, default 0 – no autoclose\n   * @property {boolean} [hasButton] Optional can be closed by button click, default true when autoClose not set\n   * @property {string} [id] Optional box id\n   * @property {string} [class] Optional box class\n   * @property {boolean} [fixed=false] Optional set fixed position, default false\n   */\n\n  /**\n   * Builds alert box\n   * @param {string} message\n   * @param {AlertOptions} [options] Optional options\n   */\n  constructor(message, options = {}) {\n    this.autoClose = options.autoClose || 0;\n    this.hasButton = typeof options.hasButton !== 'undefined' ? options.hasButton : this.autoClose === 0\n    this.fixedPosition = options.fixed || false;\n    const html = `<div class=\"alert\"><span>${message}</span></div>`;\n    /** @var HTMLElement */\n    this.box = uUtils.nodeFromHtml(html);\n    if (options.id) {\n      this.box.id = options.id;\n    }\n    if (options.class) {\n      this.box.classList.add(options.class);\n    }\n    if (this.hasButton) {\n      const button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.textContent = '×';\n      button.onclick = () => this.destroy();\n      this.box.appendChild(button);\n    }\n    this.closeHandle = null;\n  }\n\n  /**\n   * Calculate new box top offset\n   * @return {number} Top offset\n   */\n  static getPosition() {\n    const boxes = document.querySelectorAll('.alert');\n    const lastBox = boxes[boxes.length - 1];\n    let position = 0;\n    if (lastBox) {\n      const maxPosition = document.body.clientHeight - 100;\n      position = lastBox.getBoundingClientRect().bottom;\n      if (position > maxPosition) {\n        position = maxPosition;\n      }\n    }\n    return position;\n  }\n\n  render() {\n    if (!this.fixedPosition) {\n      const top = uAlert.getPosition();\n      if (top) {\n        this.box.style.top = `${top}px`;\n      }\n    }\n    document.body.appendChild(this.box);\n    setTimeout(() => {\n      if (this.box) {\n        this.box.classList.add('in');\n      }\n    }, 50);\n  }\n\n  destroy() {\n    if (this.closeHandle) {\n      clearTimeout(this.closeHandle);\n      this.closeHandle = null;\n    }\n    if (this.box && document.body.contains(this.box)) {\n      const element = this.box;\n      requestAnimationFrame(() => {\n        element.classList.add('out');\n        setTimeout(() => {\n          element.remove();\n        }, 1000);\n      });\n      this.box = null;\n    }\n  }\n\n  /**\n   * Show alert box\n   * @param {string} message\n   * @param {AlertOptions} [options] Optional options\n   * @return uAlert\n   */\n  static show(message, options) {\n    const box = new uAlert(message, options);\n    box.render();\n    if (box.autoClose) {\n      box.closeHandle = setTimeout(() => box.destroy(), box.autoClose);\n    }\n    return box;\n  }\n\n  /**\n   * Show alert error box\n   * @param {string} message\n   * @param {Error=} e Optional error to be logged to console\n   * @return uAlert\n   */\n  static error(message, e) {\n    if (e instanceof Error) {\n      console.error(`${e.name}: ${e.message} (${e.stack})`);\n    }\n    return this.show(message, { class: 'error' });\n  }\n\n  /**\n   * Show alert toast box\n   * @param {string} message\n   * @return uAlert\n   */\n  static toast(message) {\n    return this.show(message, { class: 'toast', autoClose: 10000 });\n  }\n\n  static spinner() {\n    return this.show('', { class: 'spinner', hasButton: false, fixed: true });\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $ } from './initializer.js';\n\nexport default class uDialog {\n\n  /**\n   * Builds modal dialog\n   * @param {(string|Node|NodeList|Array.<Node>)} content\n   */\n  constructor(content) {\n    const dialog = document.createElement('div');\n    dialog.setAttribute('id', 'modal');\n    const dialogHeader = document.createElement('div');\n    dialogHeader.setAttribute('id', 'modal-header');\n    const buttonClose = document.createElement('button');\n    buttonClose.setAttribute('id', 'modal-close');\n    buttonClose.setAttribute('type', 'button');\n    buttonClose.setAttribute('class', 'button-reject');\n    buttonClose.setAttribute('data-bind', 'onCancel');\n    const img = document.createElement('img');\n    img.setAttribute('src', 'images/close.svg');\n    img.setAttribute('alt', $._('close'));\n    buttonClose.append(img);\n    dialogHeader.append(buttonClose);\n    const dialogBody = document.createElement('div');\n    dialogBody.setAttribute('id', 'modal-body');\n    if (typeof content === 'string') {\n      dialogBody.innerHTML = content;\n    } else if (content instanceof NodeList || content instanceof Array) {\n      for (const node of content) {\n        dialogBody.append(node);\n      }\n    } else {\n      dialogBody.append(content);\n    }\n    dialogBody.prepend(dialogHeader);\n    dialog.append(dialogBody);\n    this.element = dialog;\n    this.visible = false;\n  }\n\n  /**\n   * Show modal dialog\n   */\n  show() {\n    if (!this.visible) {\n      document.body.append(this.element);\n      this.visible = true;\n      this.autofocus();\n    }\n  }\n\n  /**\n   * Set focus to element with autofocus attribute\n   */\n  autofocus() {\n    const focusEl = this.element.querySelector('[autofocus]');\n    if (focusEl) {\n      focusEl.focus();\n    }\n  }\n\n  /**\n   * Remove modal dialog\n   */\n  destroy() {\n    document.body.removeChild(this.element);\n    this.visible = false\n  }\n\n  /**\n   * Show confirmation dialog and return user decision\n   * @param {string} message\n   * @return {boolean} True if confirmed, false otherwise\n   */\n  static isConfirmed(message) {\n    return confirm(message);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config } from './initializer.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uDialog from './dialog.js';\nimport uLayer from './layer.js';\nimport uLayerCollection from './layercollection.js';\nimport uSelect from './select.js';\n\n/**\n * @class ConfigDialogModel\n */\nexport default class ConfigDialogModel extends ViewModel {\n\n  constructor() {\n    super({\n      colorExtra: config.colorExtra,\n      colorHilite: config.colorHilite,\n      colorNormal: config.colorNormal,\n      colorStart: config.colorStart,\n      colorStop: config.colorStop,\n      googleKey: config.googleKey,\n      initLatitude: config.initLatitude,\n      initLongitude: config.initLongitude,\n      interval: config.interval,\n      lang: config.lang,\n      layerId: 0,\n      layerName: null,\n      layers: new uLayerCollection(new uLayer(0, 'OpenStreetMap', '', 0), ...config.olLayers),\n      layerUrl: null,\n      mapApi: config.mapApi,\n      passLenMin: config.passLenMin,\n      passStrength: config.passStrength,\n      publicTracks: config.publicTracks,\n      requireAuth: config.requireAuth,\n      strokeColor: config.strokeColor,\n      strokeOpacity: config.strokeOpacity,\n      strokeWeight: config.strokeWeight,\n      units: config.units,\n      uploadMaxSize: config.uploadMaxSize,\n      uploadMaxSizeMB: config.uploadMaxSize / 1024 / 1024\n    });\n    this.model.onCancel = () => this.onCancel();\n    this.model.onSave = () => this.onSave();\n    this.model.onLayerUpdate = () => this.onLayerUpdate();\n    this.model.onLayerCancel = () => this.onLayerCancel();\n    this.model.onLayerEdit = () => this.onLayerEdit();\n    this.model.onLayerDelete = () => this.onLayerDelete();\n    this.model.onLayerAdd = () => this.onLayerAdd();\n  }\n\n  init() {\n    const html = this.getHtml();\n    this.dialog = new uDialog(html);\n    this.dialog.show();\n    this.bindAll(this.dialog.element);\n    this.toggleEditEl = this.getBoundElement('onLayerEdit').parentNode;\n    this.layerEditEl = this.getBoundElement('layerName').parentNode;\n    this.layerSelect = new uSelect(this.getBoundElement('layerId'));\n    this.setPublicTracksActivity(this.model.requireAuth);\n    this.toggleEditVisible();\n    this.onChanged('layerId', (listValue) => {\n      const layer = this.model.layers.get(parseInt(listValue));\n      this.model.layerName = layer ? layer.name : '';\n      this.model.layerUrl = layer ? layer.url : '';\n      this.toggleEditVisible();\n    });\n    this.model.layerId = config.olLayers.getPriorityLayer().toString();\n    this.onChanged('uploadMaxSizeMB', (value) => { this.model.uploadMaxSize = value * 1024 * 1024;})\n    this.onChanged('layers', (list) => this.layerSelect.setOptions(list));\n    this.onChanged('requireAuth', (value) => {\n      this.setPublicTracksActivity(value);\n    });\n  }\n\n  setPublicTracksActivity(value) {\n    if (value) {\n      this.getBoundElement('publicTracks').disabled = false;\n    } else {\n      this.model.publicTracks = true;\n      this.getBoundElement('publicTracks').disabled = true;\n    }\n  }\n\n  onCancel() {\n    this.dialog.destroy();\n  }\n\n  onSave() {\n    if (this.validate()) {\n      this.model.layers.setPriorityLayer(parseInt(this.model.layerId));\n      config.save(this.model)\n        .then(() => this.dialog.destroy())\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  /**\n   * Validate form\n   * @return {boolean} True if valid\n   */\n  validate() {\n    const form = this.dialog.element.querySelector('form');\n    return form.checkValidity();\n  }\n\n  toggleEditVisible() {\n    if (parseInt(this.model.layerId) > 0) {\n      this.toggleEditEl.style.visibility = 'visible';\n    } else {\n      this.toggleEditEl.style.visibility = 'hidden';\n      this.hideEditElement();\n    }\n  }\n\n  onLayerDelete() {\n    this.model.layers.delete(parseInt(this.model.layerId));\n    this.model.layerId = '0';\n  }\n\n  onLayerEdit() {\n    if (this.layerEditEl.style.display === 'none') {\n      this.showEditElement();\n    } else {\n      this.hideEditElement();\n    }\n  }\n\n  onLayerUpdate() {\n    if (!this.model.layerName || !this.model.layerUrl) {\n      return;\n    }\n    if (this.model.layerId === '-1') {\n      this.model.layers.addNewLayer(this.model.layerName, this.model.layerUrl);\n    } else {\n      const layer = this.currentLayer();\n      layer.setName(this.model.layerName);\n      layer.setUrl(this.model.layerUrl);\n    }\n    this.hideEditElement();\n    this.layerSelect.setOptions(this.model.layers);\n  }\n\n  onLayerCancel() {\n    this.hideEditElement();\n    this.layerSelect.setOptions(this.model.layers);\n  }\n\n  onLayerAdd() {\n    this.model.layerId = '-1';\n    this.onLayerEdit();\n  }\n\n  hideEditElement() {\n    this.layerEditEl.style.display = 'none';\n  }\n\n  showEditElement() {\n    this.layerEditEl.style.display = 'block';\n  }\n\n  currentLayer() {\n    return this.model.layers.get(parseInt(this.model.layerId));\n  }\n\n  /**\n   * @return {string}\n   */\n  getHtml() {\n    let langOptions = '';\n    for (const [ langCode, langName ] of Object.entries($.getLangList())) {\n      langOptions += `<option value=\"${langCode}\"${this.model.lang === langCode ? ' selected' : ''}>${langName}</option>`;\n    }\n    let unitOptions = '';\n    for (const units of [ 'metric', 'imperial', 'nautical' ]) {\n      unitOptions += `<option value=\"${units}\"${this.model.units === units ? ' selected' : ''}>${$._(units)}</option>`;\n    }\n    let layerOptions = '';\n    for (const layer of this.model.layers) {\n      layerOptions += `<option value=\"${layer.id}\"${layer.priority > 0 ? ' selected' : ''}>${layer.name}</option>`;\n    }\n    return `<div><img style=\"vertical-align: bottom; margin-right: 10px;\" src=\"images/settings.svg\" alt=\"${$._('settings')}\"> <b>${$._('editingconfig')}</b></div>\n      <div style=\"clear: both; padding-bottom: 1em;\"></div>\n      <form id=\"config-form\">\n        <label><b>${$._('language')}</b>\n        <select data-bind=\"lang\">\n          ${langOptions}\n        </select></label>\n        <label><b>${$._('units')}</b>\n        <select data-bind=\"units\">\n          ${unitOptions}\n        </select></label>\n        <label><b>${$._('api')}</b>\n        <select data-bind=\"mapApi\">\n          <option value=\"openlayers\"${this.model.mapApi === 'openlayers' ? ' selected' : ''}>OpenLayers</option>\n          <option value=\"gmaps\"${this.model.mapApi === 'gmaps' ? ' selected' : ''}>Google Maps</option>\n        </select></label>\n        <label><b>${$._('ollayers')}</b>\n        <select data-bind=\"layerId\">\n          ${layerOptions}\n        </select>\n        <a data-bind=\"onLayerAdd\"><img src=\"images/add.svg\" alt=\"${$._('add')}\"></a> \n        <span style=\"visibility: hidden;\">\n        <a data-bind=\"onLayerEdit\"><img src=\"images/edit.svg\" alt=\"${$._('edit')}\"></a> \n        <a data-bind=\"onLayerDelete\"><img src=\"images/delete.svg\" alt=\"${$._('delete')}\"></a>\n        </span></label>\n        <div style=\"display: none; text-align: center;\">\n          <input type=\"text\" maxlength=\"50\" placeholder=\"${$._('layername')}\" data-bind=\"layerName\">\n          <input type=\"text\" maxlength=\"255\" placeholder=\"${$._('layerurl')}\" data-bind=\"layerUrl\">\n          <button class=\"button-resolve\" data-bind=\"onLayerUpdate\" type=\"submit\">${$._('submit')}</button>\n          <button class=\"button-reject\" data-bind=\"onLayerCancel\" type=\"button\">${$._('cancel')}</button>\n        </div>\n        <label><b>${$._('interval')}</b>\n        <input type=\"number\" data-bind=\"interval\" min=\"1\" value=\"${this.model.interval}\" required></label>\n        <label><b>${$._('longitude')}</b>\n        <input type=\"number\" data-bind=\"initLongitude\" min=\"-180\" max=\"180\" step=\"0.01\" value=\"${this.model.initLongitude}\" required></label>\n        <label><b>${$._('latitude')}</b>\n        <input type=\"number\" data-bind=\"initLatitude\" min=\"-90\" max=\"90\" step=\"0.01\" value=\"${this.model.initLatitude}\" required></label>\n        <label><b>${$._('googlekey')}</b>\n        <input type=\"text\" data-bind=\"googleKey\" value=\"${this.model.googleKey}\"></label>\n        <label><b>${$._('passlength')}</b>\n        <input type=\"number\" data-bind=\"passLenMin\" min=\"1\" value=\"${this.model.passLenMin}\" required></label>\n        <label><b>${$._('passstrength')}</b>\n        <select data-bind=\"passStrength\">\n          <option value=\"0\"${this.model.passStrength === 0 ? ' selected' : ''}>password</option>\n          <option value=\"1\"${this.model.passStrength === 1 ? ' selected' : ''}>paSsword</option>\n          <option value=\"2\"${this.model.passStrength === 2 ? ' selected' : ''}>paSsword1</option>\n          <option value=\"3\"${this.model.passStrength === 3 ? ' selected' : ''}>paSsword1#</option>\n        </select></label>\n        <label><b>${$._('uploadmaxsize')}</b>\n        <input type=\"number\" data-bind=\"uploadMaxSizeMB\" min=\"1\" value=\"${this.model.uploadMaxSizeMB}\" required></label>\n        <label><b>${$._('requireauth')}</b>\n        <input type=\"checkbox\" data-bind=\"requireAuth\"${this.model.requireAuth ? ' checked' : ''}></label>\n        <label><b>${$._('publictracks')}</b>\n        <input type=\"checkbox\" data-bind=\"publicTracks\"${this.model.publicTracks ? ' checked' : ''}></label>\n        <label><b>${$._('strokeweight')}</b>\n        <input type=\"number\" data-bind=\"strokeWeight\" min=\"1\" value=\"${this.model.strokeWeight}\" required></label>\n        <label><b>${$._('strokeopacity')}</b>\n        <input type=\"number\" data-bind=\"strokeOpacity\" min=\"0\" max=\"1\" step=\"0.01\" value=\"${this.model.strokeOpacity}\" required></label>\n        <label><b>${$._('strokecolor')}</b>\n        <input type=\"color\" data-bind=\"strokeColor\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.strokeColor}\" required></label>\n        <label><b>${$._('colornormal')}</b>\n        <input type=\"color\" data-bind=\"colorNormal\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.colorNormal}\" required></label>\n        <label><b>${$._('colorstart')}</b>\n        <input type=\"color\" data-bind=\"colorStart\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.colorStart}\" required></label>\n        <label><b>${$._('colorstop')}</b>\n        <input type=\"color\" data-bind=\"colorStop\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.colorStop}\" required></label>\n        <label><b>${$._('colorextra')}</b>\n        <input type=\"color\" data-bind=\"colorExtra\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.colorExtra}\" required></label>\n        <label><b>${$._('colorhilite')}</b>\n        <input type=\"color\" data-bind=\"colorHilite\" pattern=\"#[0-9a-f]{6}\" maxlength=\"7\" value=\"${this.model.colorHilite}\" required></label>\n        <div class=\"buttons\">\n          <button class=\"button-reject\" data-bind=\"onCancel\" type=\"button\">${$._('cancel')}</button>\n          <button class=\"button-resolve\" data-bind=\"onSave\" type=\"submit\">${$._('submit')}</button>\n        </div>\n      </form>`;\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config } from './initializer.js';\nimport ConfigDialogModel from './configdialogmodel.js';\nimport ViewModel from './viewmodel.js';\nimport uUtils from './utils.js';\n\n/**\n * @class ConfigViewModel\n */\nexport default class ConfigViewModel extends ViewModel {\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super(config);\n    this.state = state;\n    this.model.onSetInterval = () => this.setAutoReloadInterval();\n    this.model.onConfigEdit = () => this.showConfigDialog();\n  }\n\n  /**\n   * @return {ConfigViewModel}\n   */\n  init() {\n    this.setObservers();\n    this.bindAll();\n    return this;\n  }\n\n  setObservers() {\n    this.onChanged('mapApi', (api) => {\n      uUtils.setCookie('api', api);\n    });\n    this.onChanged('lang', (_lang) => {\n      uUtils.setCookie('lang', _lang);\n      ConfigViewModel.reload();\n    });\n    this.onChanged('units', (units) => {\n      uUtils.setCookie('units', units);\n      ConfigViewModel.reload();\n    });\n    this.onChanged('interval', (interval) => {\n      uUtils.setCookie('interval', interval);\n    });\n  }\n\n  static reload() {\n    window.location.reload();\n  }\n\n  setAutoReloadInterval() {\n    const interval = parseInt(prompt($._('newinterval')));\n    if (!isNaN(interval) && interval !== this.model.interval) {\n      this.model.interval = interval;\n    }\n  }\n\n  showConfigDialog() {\n    const vm = new ConfigDialogModel(this);\n    vm.init();\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport ViewModel from './viewmodel.js';\nimport { config } from './initializer.js';\nimport uUtils from './utils.js';\n\nconst hiddenClass = 'menu-hidden';\n\nexport default class MainViewModel extends ViewModel {\n\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super({\n      onMenuToggle: null,\n      onShowUserMenu: null,\n      onLogin: null,\n      onLogout: null\n    });\n    this.state = state;\n    this.model.onMenuToggle = () => this.toggleSideMenu();\n    this.model.onShowUserMenu = () => this.toggleUserMenu();\n    this.model.onLogin = () => MainViewModel.login();\n    this.model.onLogout = () => MainViewModel.logout();\n    this.hideUserMenuCallback = (e) => this.hideUserMenu(e);\n    this.menuEl = document.querySelector('#menu');\n    this.userMenuEl = document.querySelector('#user-menu');\n  }\n\n  /**\n   * @return {MainViewModel}\n   */\n  init() {\n    this.bindAll();\n    return this;\n  }\n\n  toggleSideMenu() {\n    if (this.menuEl.classList.contains(hiddenClass)) {\n      this.menuEl.classList.remove(hiddenClass);\n    } else {\n      this.menuEl.classList.add(hiddenClass);\n    }\n  }\n\n  /**\n   * Toggle user menu visibility\n   */\n  toggleUserMenu() {\n    if (this.userMenuEl.classList.contains(hiddenClass)) {\n      this.userMenuEl.classList.remove(hiddenClass);\n      window.addEventListener('click', this.hideUserMenuCallback, true);\n    } else {\n      this.userMenuEl.classList.add(hiddenClass);\n    }\n  }\n\n  /**\n   * Click listener callback to hide user menu\n   * @param {MouseEvent} event\n   */\n  hideUserMenu(event) {\n    const el = event.target;\n    this.userMenuEl.classList.add(hiddenClass);\n    window.removeEventListener('click', this.hideUserMenuCallback, true);\n    if (el.parentElement.id !== 'user-menu') {\n      event.stopPropagation();\n    }\n  }\n\n  static login() {\n    uUtils.openUrl(`login.php${window.location.hash}`);\n  }\n\n  static logout() {\n    let url = 'utils/logout.php';\n    if (!config.requireAuth) {\n      url += `?hash=${window.location.hash.replace('#', '')}`;\n    }\n    uUtils.openUrl(url);\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config } from '../initializer.js';\nimport MapViewModel from '../mapviewmodel.js';\nimport uAlert from '../alert.js';\nimport uTrack from '../track.js';\nimport uUtils from '../utils.js';\n\n// google maps\n/**\n * Google Maps API\n * @class GoogleMapsApi\n * @implements {MapViewModel.api}\n */\nexport default class GoogleMapsApi {\n\n  /**\n   * @param {MapViewModel} vm\n   */\n  constructor(vm) {\n    /** @type {google.maps.Map} */\n    this.map = null;\n    /** @type {MapViewModel} */\n    this.viewModel = vm;\n    /** @type {google.maps.Polyline[]} */\n    this.polies = [];\n    /** @type {google.maps.Marker[]} */\n    this.markers = [];\n    /** @type {google.maps.InfoWindow} */\n    this.popup = null;\n    /** @type {number} */\n    this.timeoutHandle = 0;\n  }\n\n  /**\n   * Load and initialize api scripts\n   * @return {Promise<void, Error>}\n   */\n  init() {\n    const params = `?${(config.googleKey) ? `key=${config.googleKey}&` : ''}callback=gm_loaded`;\n    const gmReady = Promise.all([\n      GoogleMapsApi.onScriptLoaded(),\n      uUtils.loadScript(`https://maps.googleapis.com/maps/api/js${params}`, 'mapapi_gmaps', GoogleMapsApi.loadTimeoutMs)\n    ]);\n    return gmReady.then(() => this.initMap());\n  }\n\n  /**\n   * Listen to Google Maps callbacks\n   * @return {Promise<void, Error>}\n   */\n  static onScriptLoaded() {\n    const timeout = uUtils.timeoutPromise(GoogleMapsApi.loadTimeoutMs);\n    const gmInitialize = new Promise((resolve, reject) => {\n      window.gm_loaded = () => {\n        GoogleMapsApi.gmInitialized = true;\n        resolve();\n      };\n      window.gm_authFailure = () => {\n        GoogleMapsApi.authError = true;\n        let message = $._('apifailure', 'Google Maps');\n        message += '<br><br>' + $._('gmauthfailure');\n        message += '<br><br>' + $._('gmapilink');\n        if (GoogleMapsApi.gmInitialized) {\n          uAlert.error(message);\n        }\n        reject(new Error(message));\n      };\n      if (GoogleMapsApi.authError) {\n        window.gm_authFailure();\n      }\n      if (GoogleMapsApi.gmInitialized) {\n        window.gm_loaded();\n      }\n    });\n    return Promise.race([ gmInitialize, timeout ]);\n  }\n\n  /**\n   * Start map engine when loaded\n   */\n  initMap() {\n    const mapOptions = {\n      center: new google.maps.LatLng(config.initLatitude, config.initLongitude),\n      zoom: 8,\n      mapTypeId: google.maps.MapTypeId.TERRAIN,\n      scaleControl: true,\n      controlSize: 30\n    };\n    // noinspection JSCheckFunctionSignatures\n    this.map = new google.maps.Map(this.viewModel.mapElement, mapOptions);\n    this.popup = new google.maps.InfoWindow();\n    this.popup.addListener('closeclick', () => {\n      this.popupClose();\n    });\n    this.saveState = () => {\n      this.viewModel.state.mapParams = this.getState();\n    };\n  }\n\n  /**\n   * Clean up API\n   */\n  cleanup() {\n    this.polies.length = 0;\n    this.markers.length = 0;\n    this.popup = null;\n    if (this.map && this.map.getDiv()) {\n      this.map.getDiv().innerHTML = '';\n    }\n    this.map = null;\n  }\n\n  /**\n   * Display track\n   * @param {uPositionSet} track\n   * @param {boolean} update Should fit bounds if true\n   * @return {Promise.<void>}\n   */\n  displayTrack(track, update) {\n    if (!track || !track.hasPositions) {\n      return Promise.resolve();\n    }\n    google.maps.event.clearListeners(this.map, 'idle');\n    const promise = new Promise((resolve) => {\n      google.maps.event.addListenerOnce(this.map, 'tilesloaded', () => {\n        console.log('tilesloaded');\n        if (this.map) {\n          this.saveState();\n          this.map.addListener('idle', this.saveState);\n        }\n        resolve();\n      })\n    });\n    // init polyline\n    const polyOptions = {\n      strokeColor: config.strokeColor,\n      strokeOpacity: config.strokeOpacity,\n      strokeWeight: config.strokeWeight\n    };\n    // noinspection JSCheckFunctionSignatures\n    let poly;\n    const latlngbounds = new google.maps.LatLngBounds();\n    if (this.polies.length) {\n      poly = this.polies[0];\n      for (let i = 0; i < this.markers.length; i++) {\n        latlngbounds.extend(this.markers[i].getPosition());\n      }\n    } else {\n      poly = new google.maps.Polyline(polyOptions);\n      poly.setMap(this.map);\n      this.polies.push(poly);\n    }\n    const path = poly.getPath();\n    let start = this.markers.length;\n    if (start > 0) {\n      this.removePoint(--start);\n    }\n    for (let i = start; i < track.length; i++) {\n      // set marker\n      this.setMarker(i, track);\n      // update polyline\n      const position = track.positions[i];\n      const coordinates = new google.maps.LatLng(position.latitude, position.longitude);\n      if (track instanceof uTrack) {\n        path.push(coordinates);\n      }\n      latlngbounds.extend(coordinates);\n    }\n    if (update) {\n      this.map.fitBounds(latlngbounds);\n      if (track.length === 1) {\n        // only one point, zoom out\n        const zListener =\n          google.maps.event.addListenerOnce(this.map, 'bounds_changed', function () {\n            if (this.getZoom()) {\n              this.setZoom(15);\n            }\n          });\n        setTimeout(() => {\n          google.maps.event.removeListener(zListener);\n        }, 2000);\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * Clear map\n   */\n  clearMap() {\n    if (this.polies) {\n      for (let i = 0; i < this.polies.length; i++) {\n        this.polies[i].setMap(null);\n      }\n    }\n    if (this.markers) {\n      for (let i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(null);\n      }\n    }\n    if (this.popup.getMap()) {\n      this.popupClose();\n    }\n    this.popup.setContent('');\n    this.markers.length = 0;\n    this.polies.length = 0;\n  }\n\n  /**\n   * @param {string} fill Fill color\n   * @param {boolean} isLarge Is large icon\n   * @param {boolean} isExtra Is styled with extra mark\n   * @return {google.maps.Icon}\n   */\n  static getMarkerIcon(fill, isLarge, isExtra) {\n    // noinspection JSValidateTypes\n    return {\n      anchor: new google.maps.Point(15, 35),\n      url: MapViewModel.getSvgSrc(fill, isLarge, isExtra)\n    };\n  }\n\n  /**\n   * Set marker\n   * @param {uPositionSet} track\n   * @param {number} id\n   */\n  setMarker(id, track) {\n    // marker\n    const position = track.positions[id];\n    // noinspection JSCheckFunctionSignatures\n    const marker = new google.maps.Marker({\n      position: new google.maps.LatLng(position.latitude, position.longitude),\n      title: (new Date(position.timestamp * 1000)).toLocaleString(),\n      map: this.map\n    });\n    const isExtra = position.hasComment() || position.hasImage();\n    let icon;\n    if (track.isLastPosition(id)) {\n      icon = GoogleMapsApi.getMarkerIcon(config.colorStop, true, isExtra);\n    } else if (track.isFirstPosition(id)) {\n      icon = GoogleMapsApi.getMarkerIcon(config.colorStart, true, isExtra);\n    } else {\n      icon = GoogleMapsApi.getMarkerIcon(isExtra ? config.colorExtra : config.colorNormal, false, isExtra);\n    }\n    marker.setIcon(icon);\n\n    marker.addListener('click', () => {\n      this.popupOpen(id, marker);\n    });\n    marker.addListener('mouseover', () => {\n      this.viewModel.model.markerOver = id;\n    });\n    marker.addListener('mouseout', () => {\n      this.viewModel.model.markerOver = null;\n    });\n\n    this.markers.push(marker);\n  }\n\n  /**\n   * @param {number} id\n   */\n  removePoint(id) {\n    if (this.markers.length > id) {\n      this.markers[id].setMap(null);\n      this.markers.splice(id, 1);\n      if (this.polies.length) {\n        this.polies[0].getPath().removeAt(id);\n      }\n      if (this.viewModel.model.markerSelect === id) {\n        this.popupClose();\n      }\n    }\n  }\n\n  /**\n   * Open popup on marker with given id\n   * @param {number} id\n   * @param {google.maps.Marker} marker\n   */\n  popupOpen(id, marker) {\n    this.popup.setContent(this.viewModel.getPopupElement(id));\n    this.popup.open(this.map, marker);\n    this.viewModel.model.markerSelect = id;\n  }\n\n  /**\n   * Close popup\n   */\n  popupClose() {\n    this.viewModel.model.markerSelect = null;\n    this.popup.close();\n  }\n\n  /**\n   * Animate marker\n   * @param id Marker sequential id\n   */\n  animateMarker(id) {\n    if (this.popup.getMap()) {\n      this.popupClose();\n      clearTimeout(this.timeoutHandle);\n    }\n    const icon = this.markers[id].getIcon();\n    this.markers[id].setIcon(GoogleMapsApi.getMarkerIcon(config.colorHilite, false, false));\n    this.markers[id].setAnimation(google.maps.Animation.BOUNCE);\n    this.timeoutHandle = setTimeout(() => {\n      this.markers[id].setIcon(icon);\n      this.markers[id].setAnimation(null);\n    }, 2000);\n  }\n\n  /**\n   * Get map bounds\n   * @returns {number[]} Bounds [ lon_sw, lat_sw, lon_ne, lat_ne ]\n   */\n  getBounds() {\n    const bounds = this.map.getBounds();\n    const lat_sw = bounds.getSouthWest().lat();\n    const lon_sw = bounds.getSouthWest().lng();\n    const lat_ne = bounds.getNorthEast().lat();\n    const lon_ne = bounds.getNorthEast().lng();\n    return [ lon_sw, lat_sw, lon_ne, lat_ne ];\n  }\n\n  /**\n   * Zoom to track extent\n   */\n  zoomToExtent() {\n    const bounds = new google.maps.LatLngBounds();\n    for (let i = 0; i < this.markers.length; i++) {\n      bounds.extend(this.markers[i].getPosition());\n    }\n    this.map.fitBounds(bounds);\n  }\n\n  /**\n   * Zoom to bounds\n   * @param {number[]} bounds [ lon_sw, lat_sw, lon_ne, lat_ne ]\n   */\n  zoomToBounds(bounds) {\n    const sw = new google.maps.LatLng(bounds[1], bounds[0]);\n    const ne = new google.maps.LatLng(bounds[3], bounds[2]);\n    const latLngBounds = new google.maps.LatLngBounds(sw, ne);\n    this.map.fitBounds(latLngBounds);\n  }\n\n  /**\n   * Is given position within viewport\n   * @param {number} id\n   * @return {boolean}\n   */\n  isPositionVisible(id) {\n    if (id >= this.markers.length) {\n      return false;\n    }\n    return this.map.getBounds().contains(this.markers[id].getPosition());\n  }\n\n  /**\n   * Center to given position\n   * @param {number} id\n   */\n  centerToPosition(id) {\n    if (id < this.markers.length) {\n      this.map.setCenter(this.markers[id].getPosition());\n    }\n  }\n\n  /**\n   * Update size\n   */\n  // eslint-disable-next-line class-methods-use-this\n  updateSize() {\n    // ignore for google API\n  }\n\n  /**\n   * Set default track style\n   */\n  // eslint-disable-next-line class-methods-use-this\n  setTrackDefaultStyle() {\n    // ignore for google API\n  }\n\n  /**\n   * Set gradient style for given track property and scale\n   * @param {uTrack} track\n   * @param {string} property\n   * @param {{ minValue: number, maxValue: number, minColor: number[], maxColor: number[] }} scale\n   */\n  // eslint-disable-next-line class-methods-use-this,no-unused-vars\n  setTrackGradientStyle(track, property, scale) {\n    // ignore for google API\n  }\n\n    static get loadTimeoutMs() {\n    return 10000;\n  }\n\n  /**\n   * Set map state\n   * Note: ignores rotation\n   * @param {MapParams} state\n   */\n  updateState(state) {\n    this.map.setCenter({ lat: state.center[0], lng: state.center[1] });\n    this.map.setZoom(state.zoom);\n  }\n\n  /**\n   * Get map state\n   * Note: ignores rotation\n   * @return {MapParams|null}\n   */\n  getState() {\n    if (this.map) {\n      const center = this.map.getCenter();\n      return {\n        center: [ center.lat(), center.lng() ],\n        zoom: this.map.getZoom(),\n        rotation: 0\n      };\n    }\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  saveState() {/* empty */}\n}\n\n/** @type {boolean} */\nGoogleMapsApi.authError = false;\n/** @type {boolean} */\nGoogleMapsApi.gmInitialized = false;\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport MapViewModel from '../mapviewmodel.js';\nimport { config } from '../initializer.js';\n// eslint-disable-next-line import/no-unresolved\nimport extentSvg from '../../../images/extent.svg?raw';\n// eslint-disable-next-line import/no-unresolved\nimport layersSvg from '../../../images/layers.svg?raw';\nimport uTrack from '../track.js';\nimport uUtils from '../utils.js';\n\n/**\n * @typedef {Object} MarkerStyles\n * @property {Style} normal\n * @property {Style} start\n * @property {Style} stop\n * @property {Style} extra\n * @property {Style} startExtra\n * @property {Style} stopExtra\n * @property {Style} hilite\n */\n\n/**\n * @typedef {import(\"../lib/ol.js\")} OpenLayers\n * @property {import(\"ol/control\")} control\n * @property {import(\"ol/Feature\").default} Feature\n * @property {import(\"ol/geom\")} geom\n * @property {import(\"ol/layer/Tile\").default} layer.TileLayer\n * @property {import(\"ol/layer/Vector\").default} layer.VectorLayer\n * @property {import(\"ol/Map\").default} Map\n * @property {import(\"ol/Overlay\").default} Overlay\n * @property {import(\"ol/proj\")} proj\n * @property {import(\"ol/source/OSM\").default} source.OSM\n * @property {import(\"ol/source/Vector\").default} source.Vector\n * @property {import(\"ol/source/XYZ\").default} source.XYZ\n * @property {import(\"ol/style/Icon\").default} style.Icon\n * @property {import(\"ol/style/Stroke\").default} style.Stroke\n * @property {import(\"ol/style/Style\").default} style.Style\n * @property {import(\"ol/View\").default} View\n */\n/** @type {?OpenLayers} */\nlet ol;\n\n/**\n * OpenLayers API\n * @class OpenLayersApi\n * @implements {MapViewModel.api}\n */\nexport default class OpenLayersApi {\n\n  /**\n   * @param {MapViewModel} vm\n   * @param {?OpenLayers=} olModule\n   */\n  constructor(vm, olModule = null) {\n    /** @type {Map} */\n    this.map = null;\n    /** @type {MapViewModel} */\n    this.viewModel = vm;\n    /** @type {VectorLayer} */\n    this.layerTrack = null;\n    /** @type {VectorLayer} */\n    this.layerMarkers = null;\n    /** @type {Layer} */\n    this.selectedLayer = null;\n    /** @type {?MarkerStyles} */\n    this.markerStyles = null;\n    /** @type {?Overlay} */\n    this.popup = null;\n    // for tests\n    if (olModule) { ol = olModule; }\n  }\n\n  /**\n   * Initialize map\n   * @return {Promise<void, Error>}\n   */\n  init() {\n    uUtils.addCss('css/dist/ol.css', 'ol_css');\n    const olReady = ol ? Promise.resolve() : import(/* webpackChunkName : \"ol\" */'../lib/ol.js').then((m) => { ol = m; });\n    return olReady.then(() => {\n      this.initMap();\n      this.initLayers();\n      this.initStyles();\n      this.initPopups();\n    });\n  }\n\n  initMap() {\n    const controls = [\n      new ol.control.Zoom(),\n      new ol.control.Rotate(),\n      new ol.control.ScaleLine()\n    ];\n\n    const view = new ol.View({\n      center: ol.proj.fromLonLat([ config.initLongitude, config.initLatitude ]),\n      zoom: 8\n    });\n\n    this.map = new ol.Map({\n      target: this.viewModel.mapElement,\n      controls: controls,\n      view: view\n    });\n\n    this.map.on('pointermove', (e) => {\n      const feature = this.map.forEachFeatureAtPixel(e.pixel,\n        /**\n         * @param {Feature} _feature\n         * @param {Layer} _layer\n         * @return {Feature}\n         */\n        (_feature, _layer) => {\n          if (_layer.get('name') === 'Markers') {\n            return _feature;\n          }\n          return null;\n        });\n\n      if (feature) {\n        this.map.getTargetElement().style.cursor = 'pointer';\n        const id = feature.getId();\n        if (id !== this.viewModel.model.markerOver) {\n          this.viewModel.model.markerOver = id;\n        }\n      } else {\n        this.map.getTargetElement().style.cursor = '';\n        this.viewModel.model.markerOver = null;\n      }\n    });\n\n    this.saveState = () => {\n      this.viewModel.state.mapParams = this.getState();\n    };\n  }\n\n  /**\n   * Initialize map layers\n   */\n  initLayers() {\n    // default layer: OpenStreetMap\n    const osm = new ol.layer.TileLayer({\n      name: 'OpenStreetMap',\n      visible: true,\n      source: new ol.source.OSM()\n    });\n    this.map.addLayer(osm);\n    this.selectedLayer = osm;\n\n    // add extra tile layers\n    for (const layer of config.olLayers) {\n      const olLayer = new ol.layer.TileLayer({\n        name: layer.name,\n        visible: false,\n        source: new ol.source.XYZ({\n          url: layer.url\n        })\n      });\n      this.map.addLayer(olLayer);\n      if (layer.priority) {\n        this.selectedLayer.setVisible(false);\n        this.selectedLayer = olLayer;\n        this.selectedLayer.setVisible(true);\n      }\n    }\n\n    // add track and markers layers\n    this.layerTrack = new ol.layer.VectorLayer({\n      name: 'Track',\n      type: 'data',\n      source: new ol.source.Vector()\n    });\n    this.layerMarkers = new ol.layer.VectorLayer({\n      name: 'Markers',\n      type: 'data',\n      source: new ol.source.Vector()\n    });\n    this.map.addLayer(this.layerTrack);\n    this.map.addLayer(this.layerMarkers);\n\n    this.initLayerSwitcher();\n  }\n\n  initStyles() {\n    const anchor = [ 0.5, 1 ];\n    this.markerStyles = {\n      start: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorStart, true)\n        })\n      }),\n      stop: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorStop, true)\n        })\n      }),\n      normal: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          opacity: 0.7,\n          src: MapViewModel.getSvgSrc(config.colorNormal, false)\n        })\n      }),\n      extra: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorExtra, false, true)\n        })\n      }),\n      startExtra: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorStart, true, true)\n        })\n      }),\n      stopExtra: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorStop, true, true)\n        })\n      }),\n      hilite: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: anchor,\n          src: MapViewModel.getSvgSrc(config.colorHilite, false)\n        })\n      })\n    };\n  }\n\n  /**\n   * Set default track style\n   */\n  setTrackDefaultStyle() {\n    const lineStyle = new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: uUtils.hexToRGBA(config.strokeColor, config.strokeOpacity),\n        width: config.strokeWeight\n      })\n    })\n    this.layerTrack.setStyle(lineStyle);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {Coordinate[]} coordinates\n   * @param {string[]} colors\n   * @return {Style}\n   */\n  getGradientStyle(context, coordinates, colors) {\n    const pixelStart = this.map.getPixelFromCoordinate(coordinates[0]);\n    const pixelEnd = this.map.getPixelFromCoordinate(coordinates[1]);\n    const scale = window.devicePixelRatio;\n    const x0 = pixelStart[0] * scale;\n    const y0 = pixelStart[1] * scale;\n    const x1 = pixelEnd[0] * scale;\n    const y1 = pixelEnd[1] * scale;\n    const gradient = context.createLinearGradient(x0, y0, x1, y1);\n    gradient.addColorStop(0, colors[0]);\n    gradient.addColorStop(1, colors[1]);\n    return new ol.style.Style({\n      geometry: new ol.geom.LineString(coordinates),\n      stroke: new ol.style.Stroke({\n        color: gradient,\n        width: config.strokeWeight * 2\n      })\n    })\n  }\n\n  /**\n   * Set gradient style for given track property and scale\n   * @param {uTrack} track\n   * @param {string} property\n   * @param {{ minValue: number, maxValue: number, minColor: number[], maxColor: number[] }} scale\n   */\n  setTrackGradientStyle(track, property, scale) {\n    const minValue = scale.minValue;\n    const maxValue = scale.maxValue;\n    const minColor = scale.minColor;\n    const maxColor = scale.maxColor;\n    if (track.length < 2 || maxValue < minValue) {\n      this.setTrackDefaultStyle();\n      return;\n    }\n    const canvas = document.createElement('canvas', { alpha: false, desynchronized: true });\n    const ctx = canvas.getContext('2d');\n    /**\n     * @param {Feature} feature\n     * @return {Style[]}\n     */\n    const lineStyle = (feature) => {\n      const styles = [\n        new ol.style.Style({\n          stroke: new ol.style.Stroke({\n            color: 'grey',\n            width: config.strokeWeight * 2 + 2\n          })\n        })\n      ];\n      const geometry = feature.getGeometry();\n      if (minValue === maxValue) {\n        styles.push(new ol.style.Style({\n          geometry: geometry,\n          stroke: new ol.style.Stroke({\n            color: uUtils.getScaleColor(minColor, maxColor, 0.5),\n            width: config.strokeWeight * 2\n          })\n        }));\n        return styles;\n      }\n      let position = track.positions[0];\n      const value = position[property] !== null ? position[property] : 0;\n      let colorStart = uUtils.getScaleColor(minColor, maxColor, (value - minValue) / (maxValue - minValue));\n      let index = 1;\n      geometry.forEachSegment((start, end) => {\n        position = track.positions[index];\n        let colorStop;\n        if (position[property] !== null) {\n          colorStop = uUtils.getScaleColor(minColor, maxColor, (position[property] - minValue) / (maxValue - minValue));\n        } else {\n          colorStop = colorStart;\n        }\n        styles.push(this.getGradientStyle(ctx, [ start, end ], [ colorStart, colorStop ]));\n        colorStart = colorStop;\n        index++;\n      });\n      return styles;\n    };\n    this.layerTrack.setStyle(lineStyle);\n  }\n\n  initPopups() {\n    const popupContainer = document.createElement('div');\n    popupContainer.id = 'popup-container';\n    popupContainer.className = 'ol-popup';\n    const popupContent = document.createElement('div');\n    popupContent.id = 'popup-content';\n    popupContainer.appendChild(popupContent);\n    const popupCloser = document.createElement('a');\n    popupCloser.className = 'ol-popup-closer';\n    popupContainer.appendChild(popupCloser);\n\n    this.popup = new ol.Overlay({\n      element: popupContainer,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    this.map.addOverlay(this.popup);\n\n    popupCloser.onclick = () => {\n      this.popupClose();\n      popupCloser.blur();\n      return false;\n    };\n\n    // add click handler to map to show popup\n    this.map.on('click', (e) => {\n      const coordinate = e.coordinate;\n      const feature = this.map.forEachFeatureAtPixel(e.pixel,\n        /** @param {Feature} _feature\n         *  @param {Layer} _layer\n         *  @return {?Feature}\n         */\n        (_feature, _layer) => {\n          if (_layer.get('name') === 'Markers') {\n            return _feature;\n          }\n          return null;\n        });\n      if (feature) {\n        this.popupOpen(feature.getId(), coordinate);\n      } else {\n        this.popupClose();\n      }\n    });\n  }\n\n  /**\n   * Show popup at coordinate\n   * @param {number} id\n   * @param {Coordinate} coordinate\n   */\n  popupOpen(id, coordinate) {\n    this.popup.getElement().firstElementChild.innerHTML = '';\n    this.popup.getElement().firstElementChild.appendChild(this.viewModel.getPopupElement(id));\n    this.popup.setPosition(coordinate);\n    this.viewModel.model.markerSelect = id;\n  }\n\n  /**\n   * Close popup\n   */\n  popupClose() {\n    if (this.popup) {\n      // eslint-disable-next-line no-undefined\n      this.popup.setPosition(undefined);\n      this.popup.getElement().firstElementChild.innerHTML = '';\n    }\n    this.viewModel.model.markerSelect = null;\n  }\n\n  /**\n   * Switch layer to target\n   * @param {string} targetName\n   */\n  switchLayer(targetName) {\n    this.map.getLayers().forEach(/** @param {Layer} _layer */(_layer) => {\n      if (_layer.get('name') === targetName) {\n        if (_layer.get('type') === 'data') {\n          if (_layer.getVisible()) {\n            _layer.setVisible(false);\n          } else {\n            _layer.setVisible(true);\n          }\n        } else {\n          this.selectedLayer.setVisible(false);\n          this.selectedLayer = _layer;\n          _layer.setVisible(true);\n        }\n      }\n    });\n  }\n\n  initLayerSwitcher() {\n    const switcher = document.createElement('div');\n    switcher.id = 'switcher';\n    switcher.className = 'ol-control';\n    document.body.appendChild(switcher);\n    const switcherContent = document.createElement('div');\n    switcherContent.id = 'switcher-content';\n    switcherContent.className = 'ol-layerswitcher';\n    switcher.appendChild(switcherContent);\n    const switcherCloser = document.createElement('a');\n    switcherCloser.className = 'ol-popup-closer';\n    switcher.appendChild(switcherCloser);\n\n    this.map.getLayers().forEach(/** @param {Layer} _layer */(_layer) => {\n      const layerLabel = document.createElement('label');\n      layerLabel.innerHTML = _layer.get('name');\n      switcherContent.appendChild(layerLabel);\n\n      const layerRadio = document.createElement('input');\n      if (_layer.get('type') === 'data') {\n        layerRadio.type = 'checkbox';\n        layerLabel.className = 'ol-datalayer';\n      } else {\n        layerRadio.type = 'radio';\n      }\n      layerRadio.name = 'layer';\n      layerRadio.value = _layer.get('name');\n      layerRadio.onclick = (e) => {\n        /** @type {HTMLInputElement} */\n        const el = e.target;\n        this.switchLayer(el.value);\n      };\n      if (_layer.getVisible()) {\n        layerRadio.checked = true;\n      }\n      layerLabel.insertBefore(layerRadio, layerLabel.childNodes[0]);\n    });\n\n    const switcherButton = document.createElement('button');\n    const layerImg = uUtils.nodeFromHtml(layersSvg);\n    layerImg.style.width = '60%';\n    switcherButton.appendChild(layerImg);\n\n    const switcherHandle = () => {\n      if (switcher.style.display === 'block') {\n        switcher.style.display = 'none';\n      } else {\n        switcher.style.display = 'block';\n      }\n    };\n\n    switcherCloser.addEventListener('click', switcherHandle, false);\n    switcherButton.addEventListener('click', switcherHandle, false);\n    switcherButton.addEventListener('touchstart', switcherHandle, false);\n\n    const element = document.createElement('div');\n    element.className = 'ol-switcher-button ol-unselectable ol-control';\n    element.appendChild(switcherButton);\n\n    const switcherControl = new ol.control.Control({ element });\n    this.map.addControl(switcherControl);\n  }\n\n  /**\n   * Clean up API\n   */\n  cleanup() {\n    this.layerTrack = null;\n    this.layerMarkers = null;\n    this.selectedLayer = null;\n    this.markerStyles = null;\n    uUtils.removeElementById('switcher');\n    if (this.map && this.map.getTargetElement()) {\n      this.map.getTargetElement().innerHTML = '';\n    }\n    this.map = null;\n  }\n\n  /**\n   * Display track\n   * @param {uPositionSet} track Track\n   * @param {boolean} update Should fit bounds if true\n   * @return {Promise.<void>}\n   */\n  displayTrack(track, update) {\n    if (!track || !track.hasPositions) {\n      return Promise.resolve();\n    }\n    this.map.un('moveend', this.saveState);\n    const promise = new Promise((resolve) => {\n      this.map.once('rendercomplete', () => {\n        console.log('rendercomplete');\n        if (this.map) {\n          this.saveState();\n          this.map.on('moveend', this.saveState);\n        }\n        resolve();\n      });\n    });\n    let start = this.layerMarkers ? this.layerMarkers.getSource().getFeatures().length : 0;\n    if (start > 0) {\n      this.removePoint(--start);\n    }\n    for (let i = start; i < track.length; i++) {\n      this.setMarker(i, track);\n    }\n    if (track instanceof uTrack) {\n      let lineString;\n      if (this.layerTrack && this.layerTrack.getSource().getFeatures().length) {\n        lineString = this.layerTrack.getSource().getFeatures()[0].getGeometry();\n      } else {\n        lineString = new ol.geom.LineString([]);\n        const lineFeature = new ol.Feature({ geometry: lineString });\n        this.layerTrack.getSource().addFeature(lineFeature);\n      }\n      for (let i = start; i < track.length; i++) {\n        const position = track.positions[i];\n        lineString.appendCoordinate(ol.proj.fromLonLat([ position.longitude, position.latitude ]));\n      }\n    }\n\n    let extent = this.layerMarkers.getSource().getExtent();\n\n    if (update) {\n      extent = this.fitToExtent(extent);\n    }\n    this.setZoomToExtent(extent);\n    return promise;\n  }\n\n  /**\n   * Set or replace ZoomToExtent control\n   * @param {Array.<number>} extent\n   */\n  setZoomToExtent(extent) {\n    this.map.getControls().forEach((el) => {\n      if (el instanceof ol.control.ZoomToExtent) {\n        this.map.removeControl(el);\n      }\n    });\n    this.map.addControl(new ol.control.ZoomToExtent({\n      extent: extent,\n      label: OpenLayersApi.getExtentImg()\n    }));\n  }\n\n  /**\n   * Fit to extent, respect max zoom, add padding\n   * @param {Array.<number>} extent\n   * @return {Array.<number>}\n   */\n  fitToExtent(extent) {\n    this.map.getView().fit(extent, { padding: OpenLayersApi.TRACK_PADDING, maxZoom: OpenLayersApi.ZOOM_MAX });\n    return this.map.getView().calculateExtent();\n  }\n\n  /**\n   * Is given position within viewport\n   * @param {number} id\n   * @return {boolean}\n   */\n  isPositionVisible(id) {\n    const mapExtent = this.map.getView().calculateExtent();\n    const marker = this.layerMarkers.getSource().getFeatureById(id).getGeometry();\n    return marker ? ol.extent.containsCoordinate(mapExtent, marker.getCoordinates()) : false;\n  }\n\n  /**\n   * Center to given position\n   * @param {number} id\n   */\n  centerToPosition(id) {\n    const marker = this.layerMarkers.getSource().getFeatureById(id).getGeometry();\n    if (marker) {\n      console.log(`Setting center to position ${id}`)\n      this.map.getView().setCenter(marker.getCoordinates());\n    }\n  }\n\n  /**\n   * Clear map\n   */\n  clearMap() {\n    this.popupClose();\n    if (this.layerTrack) {\n      this.layerTrack.getSource().clear();\n    }\n    if (this.layerMarkers) {\n      this.layerMarkers.getSource().clear();\n    }\n  }\n\n  /**\n   * Get marker style\n   * @param {number} id\n   * @param {uPositionSet} track\n   * @return {Style}\n   */\n  getMarkerStyle(id, track) {\n    const position = track.positions[id];\n    let iconStyle = this.markerStyles.normal;\n    if (position.hasComment() || position.hasImage()) {\n      if (track.isLastPosition(id)) {\n        iconStyle = this.markerStyles.stopExtra;\n      } else if (track.isFirstPosition(id)) {\n        iconStyle = this.markerStyles.startExtra;\n      } else {\n        iconStyle = this.markerStyles.extra;\n      }\n    } else if (track.isLastPosition(id)) {\n      iconStyle = this.markerStyles.stop;\n    } else if (track.isFirstPosition(id)) {\n      iconStyle = this.markerStyles.start;\n    }\n    return iconStyle;\n  }\n\n  /**\n   * Set marker\n   * @param {number} id\n   * @param {uPositionSet} track\n   */\n  setMarker(id, track) {\n    // marker\n    const position = track.positions[id];\n    const marker = new ol.Feature({\n      geometry: new ol.geom.Point(ol.proj.fromLonLat([ position.longitude, position.latitude ]))\n    });\n\n    const iconStyle = this.getMarkerStyle(id, track);\n    marker.setStyle(iconStyle);\n    marker.setId(id);\n    this.layerMarkers.getSource().addFeature(marker);\n  }\n\n  /**\n   * @param {number} id\n   */\n  removePoint(id) {\n    const marker = this.layerMarkers.getSource().getFeatureById(id);\n    if (marker) {\n      this.layerMarkers.getSource().removeFeature(marker);\n      if (this.layerTrack) {\n        const lineString = this.layerTrack.getSource().getFeatures()[0].getGeometry();\n        const coordinates = lineString.getCoordinates();\n        coordinates.splice(id, 1);\n        lineString.setCoordinates(coordinates);\n      }\n      if (this.viewModel.model.markerSelect === id) {\n        this.popupClose();\n      }\n    }\n  }\n\n  /**\n   * Animate marker\n   * @param id Marker sequential id\n   */\n  animateMarker(id) {\n    const marker = this.layerMarkers.getSource().getFeatureById(id);\n    const initStyle = marker.getStyle();\n    marker.setStyle(this.markerStyles.hilite);\n    setTimeout(() => marker.setStyle(initStyle), 2000);\n  }\n\n  /**\n   * Get map bounds\n   * e.g. (20.597985430276808, 52.15547181298076, 21.363595171488573, 52.33750879522563)\n   * @returns {number[]} Bounds [ lon_sw, lat_sw, lon_ne, lat_ne ]\n   */\n  getBounds() {\n    const extent = this.map.getView().calculateExtent();\n    const sw = ol.proj.toLonLat([ extent[0], extent[1] ]);\n    const ne = ol.proj.toLonLat([ extent[2], extent[3] ]);\n    return [ sw[0], sw[1], ne[0], ne[1] ];\n  }\n\n  /**\n   * Zoom to track extent, respect max zoom, add padding\n   */\n  zoomToExtent() {\n    this.fitToExtent(this.layerMarkers.getSource().getExtent());\n  }\n\n  /**\n   * Zoom to bounds\n   * @param {number[]} bounds [ lon_sw, lat_sw, lon_ne, lat_ne ]\n   */\n  zoomToBounds(bounds) {\n    const sw = ol.proj.fromLonLat([ bounds[0], bounds[1] ]);\n    const ne = ol.proj.fromLonLat([ bounds[2], bounds[3] ]);\n    this.map.getView().fit([ sw[0], sw[1], ne[0], ne[1] ]);\n  }\n\n  /**\n   * Update size\n   */\n  updateSize() {\n    this.map.updateSize();\n  }\n\n  /**\n   * Get extent image\n   * @returns {Node|NodeList}\n   */\n  static getExtentImg() {\n    const extentImg = uUtils.nodeFromHtml(extentSvg);\n    extentImg.style.width = '60%';\n    return extentImg;\n  }\n\n  /**\n   * Set map state\n   * @param {MapParams} state\n   */\n  updateState(state) {\n    this.map.getView().setCenter(state.center);\n    this.map.getView().setZoom(state.zoom);\n    this.map.getView().setRotation(state.rotation);\n  }\n\n  /**\n   * Get map state\n   * @return {MapParams|null}\n   */\n  getState() {\n    const view = this.map ? this.map.getView() : null;\n    if (view) {\n      return {\n        center: view.getCenter(),\n        zoom: view.getZoom(),\n        rotation: view.getRotation()\n      };\n    }\n    return null;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  saveState() {/* empty */}\n}\n/** @type {number} */\nOpenLayersApi.ZOOM_MAX = 20;\n/** @type {number[]} */\nOpenLayersApi.TRACK_PADDING = [ 40, 10, 10, 10 ];\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config } from './initializer.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uDialog from './dialog.js';\nimport uObserve from './observe.js';\nimport uUtils from './utils.js';\n\nconst hiddenClass = 'hidden';\n\n/**\n * @class PositionDialogModel\n */\nexport default class PositionDialogModel extends ViewModel {\n\n  /**\n   * @param {uState} state\n   * @param {number} positionIndex\n   */\n  constructor(state, positionIndex) {\n    super({\n      onPositionDelete: null,\n      onPositionUpdate: null,\n      onCancel: null,\n      comment: null,\n      image: null,\n      onImageDelete: null\n    });\n    this.state = state;\n    this.positionIndex = positionIndex;\n    this.position = this.state.currentTrack.positions[positionIndex];\n    this.model.comment = this.position.hasComment() ? this.position.comment : '';\n    this.model.image = this.position.image;\n    this.model.onPositionDelete = () => this.onPositionDelete();\n    this.model.onPositionUpdate = () => this.onPositionUpdate();\n    this.model.onCancel = () => this.onCancel();\n    this.model.onImageDelete = () => this.onImageDelete();\n    this.onChanged('image', (image) => {\n      if (image && image !== this.position.image) { this.readImage(); }\n    });\n  }\n\n  init() {\n    const html = this.getHtml();\n    this.dialog = new uDialog(html);\n    this.dialog.show();\n    this.bindAll(this.dialog.element);\n    this.previewEl = this.getBoundElement('imagePreview');\n    this.fileEl = this.getBoundElement('image');\n    this.imageDeleteEl = this.getBoundElement('onImageDelete');\n    this.initReader();\n  }\n\n  initReader() {\n    this.reader = new FileReader();\n    this.reader.addEventListener('load', () => {\n      this.showThumbnail();\n    }, false);\n    this.reader.addEventListener('error', () => {\n      this.model.image = this.position.image;\n    }, false);\n  }\n\n  readImage() {\n    const file = this.fileEl.files[0];\n    if (file) {\n      if (file.size > config.uploadMaxSize) {\n        uAlert.error($._('isizefailure', config.uploadMaxSize));\n        this.model.image = this.position.image;\n        return;\n      }\n      this.reader.readAsDataURL(file);\n    }\n  }\n\n  showThumbnail() {\n    this.previewEl.onload = () => this.toggleImage();\n    this.previewEl.onerror = () => {\n      uAlert.error($._('iuploadfailure'));\n      this.model.image = this.position.image;\n    };\n    this.previewEl.src = this.reader.result;\n  }\n\n  /**\n   * Toggle image visibility\n   */\n  toggleImage() {\n    if (this.previewEl.classList.contains(hiddenClass)) {\n      this.previewEl.classList.remove(hiddenClass);\n      this.imageDeleteEl.classList.remove(hiddenClass);\n      this.fileEl.classList.add(hiddenClass);\n    } else {\n      this.previewEl.classList.add(hiddenClass);\n      this.imageDeleteEl.classList.add(hiddenClass);\n      this.fileEl.classList.remove(hiddenClass);\n    }\n  }\n\n  onImageDelete() {\n    this.model.image = null;\n    this.toggleImage();\n  }\n\n  /**\n   * @return {string}\n   */\n  getHtml() {\n    return `<div class=\"red-button button-resolve\"><b><a data-bind=\"onPositionDelete\">${$._('delposition')}</a></b></div>\n      <div>${$._('editingposition', this.positionIndex + 1, `<b>${uUtils.htmlEncode(this.position.trackname)}</b>`)}</div>\n      <div style=\"clear: both; padding-bottom: 1em;\"></div>\n      <form id=\"positionForm\">\n        <label><b>${$._('comment')}</b></label><br>\n        <textarea style=\"width:100%;\" maxlength=\"255\" rows=\"5\" placeholder=\"${$._('comment')}\" name=\"comment\" \n        data-bind=\"comment\" autofocus>${uUtils.htmlEncode(this.model.comment)}</textarea>\n        <br><br>\n        <label><b>${$._('image')}</b></label><br>\n        <input type=\"file\" name=\"image\" data-bind=\"image\" accept=\"image/png, image/jpeg, image/gif, image/bmp\"${this.position.hasImage() ? ' class=\"hidden\"' : ''}>\n        <img style=\"max-width:50px; max-height:50px\" data-bind=\"imagePreview\" ${this.position.hasImage() ? `src=\"${this.position.getImagePath()}\"` : 'class=\"hidden\"'}>\n        <a data-bind=\"onImageDelete\" ${this.position.hasImage() ? '' : ' class=\"hidden\"'}>${$._('delimage')}</a>\n        <div class=\"buttons\">\n          <button class=\"button-reject\" data-bind=\"onCancel\" type=\"button\">${$._('cancel')}</button>\n          <button class=\"button-resolve\" data-bind=\"onPositionUpdate\" type=\"submit\">${$._('submit')}</button>\n        </div>\n      </form>`;\n  }\n\n  onPositionDelete() {\n    if (uDialog.isConfirmed($._('positiondelwarn', this.positionIndex + 1, uUtils.htmlEncode(this.position.trackname)))) {\n      this.position.delete()\n        .then(() => {\n          const track = this.state.currentTrack;\n          this.state.currentTrack = null;\n          track.positions.splice(this.positionIndex, 1);\n          track.recalculatePositions();\n          this.state.currentTrack = track;\n          this.dialog.destroy();\n        }).catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  /**\n   * @return {Promise<void>}\n   */\n  updateImage() {\n    let promise = Promise.resolve();\n    if (this.model.image !== this.position.image) {\n      if (this.model.image === null) {\n        promise = this.position.imageDelete();\n      } else {\n        promise = this.position.imageAdd(this.fileEl.files[0]);\n      }\n    }\n    return promise;\n  }\n\n  onPositionUpdate() {\n    this.model.comment.trim();\n    if (this.validate()) {\n      this.position.comment = this.model.comment;\n      this.updateImage()\n        .then(() => this.position.save())\n        .then(() => {\n          uObserve.forceUpdate(this.state, 'currentTrack');\n          this.dialog.destroy()\n        })\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onCancel() {\n    this.dialog.destroy();\n  }\n\n  /**\n   * Validate form\n   * @return {boolean} True if valid\n   */\n  validate() {\n    return !(this.model.comment === this.position.comment && this.model.image === this.position.image);\n\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, auth, config } from './initializer.js';\nimport GoogleMapsApi from './mapapi/api_gmaps.js';\nimport OpenLayersApi from './mapapi/api_openlayers.js';\nimport PositionDialogModel from './positiondialogmodel.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uDialog from './dialog.js';\nimport uObserve from './observe.js';\nimport uTrack from './track.js';\nimport uUtils from './utils.js';\n\n/**\n * @typedef {Object} MapViewModel.api\n * @interface\n * @memberOf MapViewModel\n * @type {Object}\n * @property {function(number)} animateMarker\n * @property {function(uTrack, boolean)} displayTrack\n * @property {function} cleanup\n * @property {function} clearMap\n * @property {function} getBounds\n * @property {function(MapViewModel)} init\n * @property {function} setTrackDefaultStyle\n * @property {function(uTrack, string, Object)} setTrackGradientStyle\n * @property {function} updateSize\n * @property {function} updateState\n * @property {function} zoomToBounds\n * @property {function} zoomToExtent\n */\n\n/**\n * @typedef {Object} MapParams\n * @property {number[]} center\n * @property {number} zoom\n * @property {number} rotation\n */\n\n/**\n * @class MapViewModel\n */\nexport default class MapViewModel extends ViewModel {\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super({\n      /** @type {?number} */\n      markerOver: null,\n      /** @type {?number} */\n      markerSelect: null,\n      // click handler\n      onMenuToggle: null,\n      speedVisible: false,\n      altitudeVisible: false\n    });\n    this.state = state;\n    /** @type HTMLElement */\n    this.mapElement = document.querySelector('#map-canvas');\n    /** @type HTMLInputElement */\n    this.speedEl = this.getBoundElement('speedVisible');\n    /** @type HTMLInputElement */\n    this.altitudeEl = this.getBoundElement('altitudeVisible');\n    /** @type HTMLElement */\n    this.styleEl = this.getBoundElement('trackColor');\n    this.savedBounds = null;\n    this.api = null;\n  }\n\n  /**\n   * @return {MapViewModel}\n   */\n  init() {\n    this.bindAll();\n    this.setObservers();\n    return this;\n  }\n\n  /**\n   * Dynamic change of map api\n   * @param {string} apiName API name\n   */\n  loadMapAPI(apiName) {\n    let mapApi = this.api;\n    this.api = null;\n    if (mapApi) {\n      try {\n        this.savedBounds = mapApi.getBounds();\n      } catch (e) {\n        this.savedBounds = null;\n      }\n      mapApi.cleanup();\n    }\n    mapApi = this.getApi(apiName);\n    mapApi.init()\n      .then(() => {\n        this.api = mapApi;\n        this.onReady();\n      })\n      .catch((e) => {\n        let txt = $._('apifailure', apiName);\n        if (e && e.message) {\n          txt += ` (${e.message})`;\n        }\n        uAlert.error(txt, e);\n        config.mapApi = (apiName === 'gmaps') ? 'openlayers' : 'gmaps';\n      });\n  }\n\n  /**\n   * @param {string} apiName\n   * @return {OpenLayersApi|GoogleMapsApi}\n   */\n  getApi(apiName) {\n    return apiName === 'gmaps' ? new GoogleMapsApi(this) : new OpenLayersApi(this);\n  }\n\n  onReady() {\n    if (this.state.currentTrack) {\n      let update = true;\n      if (this.savedBounds) {\n        this.api.zoomToBounds(this.savedBounds);\n        update = false;\n      }\n      this.displayTrack(this.state.currentTrack, update);\n    }\n  }\n\n  setObservers() {\n    config.onChanged('mapApi', (mapApi) => {\n      this.loadMapAPI(mapApi);\n      this.toggleStyleOptions();\n      this.toggleStyleMenu();\n    });\n    this.state.onChanged('currentTrack', (track) => {\n      if (!this.api) {\n        return;\n      }\n      this.api.clearMap();\n      if (track) {\n        uObserve.observe(track, 'positions', () => {\n          this.displayTrack(track, false);\n          if (track instanceof uTrack && !this.api.isPositionVisible(track.length - 1)) {\n            console.log('last track position not visible');\n            this.api.centerToPosition(track.length - 1);\n          }\n          this.toggleStyleOptions();\n        });\n        this.displayTrack(track, true);\n      }\n      this.toggleStyleOptions();\n    });\n    this.state.onChanged('history', () => {\n      const history = this.state.history;\n      if (this.api && history && !history.trackId) {\n        if (history.mapApi) {\n          config.mapApi = history.mapApi;\n        } else {\n          if (history.mapParams) {\n            this.api.updateState(history.mapParams);\n          } else {\n            this.api.zoomToExtent();\n          }\n          this.state.history = null;\n        }\n      }\n    });\n    this.model.onMenuToggle = () => this.onMapResize();\n    this.onChanged('speedVisible', (visible) => {\n      if (visible) {\n        this.model.altitudeVisible = false;\n      }\n      this.setTrackStyle();\n    });\n    this.onChanged('altitudeVisible', (visible) => {\n      if (visible) {\n        this.model.speedVisible = false;\n      }\n      this.setTrackStyle();\n    });\n  }\n\n  /**\n   * @param {uTrack} track Track to display\n   * @param {boolean} update Should update map view\n   */\n  displayTrack(track, update) {\n    this.state.jobStart();\n    if (update && this.state.history && this.state.history.mapParams) {\n      this.api.updateState(this.state.history.mapParams);\n      update = false;\n    }\n    this.state.history = null;\n    this.setTrackStyle();\n    this.api.displayTrack(track, update)\n      .finally(() => this.state.jobStop());\n  }\n\n  onMapResize() {\n    if (this.api) {\n      this.api.updateSize();\n    }\n  }\n\n  toggleStyleOptions() {\n    const track = this.state.currentTrack;\n    this.speedEl.disabled = !track || !track.hasSpeeds || track.length <= 1;\n    this.altitudeEl.disabled = !track || !track.hasAltitudes || track.length <= 1;\n  }\n\n  toggleStyleMenu() {\n    if (config.mapApi === 'openlayers') {\n      this.styleEl.style.display = 'block';\n    } else {\n      this.styleEl.style.display = 'none';\n    }\n  }\n\n  setTrackStyle() {\n    const track = this.state.currentTrack;\n    if (!this.api || !track) {\n      return;\n    }\n    if (this.model.speedVisible && track.hasSpeeds) {\n      this.setSpeedStyle();\n    } else if (this.model.altitudeVisible && track.hasAltitudes) {\n      this.setAltitudeStyle();\n    } else {\n      this.api.setTrackDefaultStyle();\n    }\n  }\n\n  setSpeedStyle() {\n    const track = this.state.currentTrack;\n    const scale = {\n      minValue: 0,\n      maxValue: track.maxSpeed,\n      minColor: [ 0, 255, 0 ],\n      maxColor: [ 255, 0, 0 ]\n    };\n    this.api.setTrackGradientStyle(track, 'speed', scale);\n  }\n\n  setAltitudeStyle() {\n    const track = this.state.currentTrack;\n    const scale = {\n      minValue: track.minAltitude,\n      maxValue: track.maxAltitude,\n      minColor: [ 0, 255, 0 ],\n      maxColor: [ 255, 0, 0 ]\n    };\n    this.api.setTrackGradientStyle(track, 'altitude', scale);\n  }\n\n  /**\n   * Get popup html\n   * @param {number} id Position index\n   * @returns {HTMLDivElement}\n   */\n   getPopupElement(id) {\n    const pos = this.state.currentTrack.positions[id];\n    const count = this.state.currentTrack.length;\n    const user = this.state.currentTrack.user;\n    const isEditable = auth.user && (auth.isAdmin || auth.user.id === user.id);\n    let date = '–––';\n    let time = '–––';\n    if (pos.timestamp > 0) {\n      const dateTime = uUtils.getTimeString(new Date(pos.timestamp * 1000));\n      date = dateTime.date;\n      time = `${dateTime.time}<span class=\"smaller\">${dateTime.zone}</span>`;\n    }\n    let provider = '';\n    if (pos.provider === 'gps') {\n      provider = ` <img class=\"icon\" alt=\"${$._('gps')}\" title=\"${$._('gps')}\"  src=\"images/gps_dark.svg\">`;\n    } else if (pos.provider === 'network') {\n      provider = ` <img class=\"icon\" alt=\"${$._('network')}\" title=\"${$._('network')}\"  src=\"images/network_dark.svg\">`;\n    }\n    let editLink = '';\n    if (isEditable) {\n      editLink = `<a id=\"editposition\" class=\"menu-link\" data-bind=\"onUserAdd\">${$._('editposition')}</a>`;\n    }\n    let stats = '';\n    if (!this.state.showLatest) {\n      stats =\n        `<div id=\"pright\">\n        <img class=\"icon\" alt=\"${$._('track')}\" src=\"images/stats_blue.svg\" style=\"margin-left: 3em;\"><br>\n        <img class=\"icon\" alt=\"${$._('ttime')}\" title=\"${$._('ttime')}\" src=\"images/time_blue.svg\"> ${$.getLocaleDuration(pos.totalSeconds)}<br>\n        <img class=\"icon\" alt=\"${$._('aspeed')}\" title=\"${$._('aspeed')}\" src=\"images/speed_blue.svg\"> ${$.getLocaleSpeed(pos.totalSpeed, true)}<br>\n        <img class=\"icon\" alt=\"${$._('tdistance')}\" title=\"${$._('tdistance')}\" src=\"images/distance_blue.svg\"> ${$.getLocaleDistanceMajor(pos.totalMeters, true)}<br>\n        </div>`;\n    }\n    const html =\n       `<div id=\"pheader\">\n        <div><img alt=\"${$._('user')}\" title=\"${$._('user')}\" src=\"images/user_dark.svg\"> ${uUtils.htmlEncode(pos.username)}</div>\n        <div><img alt=\"${$._('track')}\" title=\"${$._('track')}\" src=\"images/route_dark.svg\"> ${uUtils.htmlEncode(pos.trackname)}</div>\n        </div>\n        <div id=\"pbody\">\n        ${(pos.hasComment()) ? `<div id=\"pcomments\">${uUtils.htmlEncode(pos.comment).replace(/\\n/, '<br>')}</div>` : ''}\n        ${(pos.hasImage()) ? `<div id=\"pimage\"><img src=\"uploads/${pos.image}\" alt=\"image\"></div>` : ''}\n        <div id=\"pleft\">\n        <img class=\"icon\" alt=\"${$._('time')}\" title=\"${$._('time')}\" src=\"images/calendar_dark.svg\"> ${date}<br>\n        <img class=\"icon\" alt=\"${$._('time')}\" title=\"${$._('time')}\" src=\"images/clock_dark.svg\"> ${time}<br>\n        ${(pos.speed !== null) ? `<img class=\"icon\" alt=\"${$._('speed')}\" title=\"${$._('speed')}\" src=\"images/speed_dark.svg\">${$.getLocaleSpeed(pos.speed, true)}<br>` : ''}\n        ${(pos.altitude !== null) ? `<img class=\"icon\" alt=\"${$._('altitude')}\" title=\"${$._('altitude')}\" src=\"images/altitude_dark.svg\">${$.getLocaleAltitude(pos.altitude, true)}<br>` : ''}\n        ${(pos.accuracy !== null) ? `<img class=\"icon\" alt=\"${$._('accuracy')}\" title=\"${$._('accuracy')}\" src=\"images/accuracy_dark.svg\">${$.getLocaleAccuracy(pos.accuracy, true)}${provider}<br>` : ''}\n        ${(pos.bearing !== null) ? `<img class=\"icon\" alt=\"${$._('bearing')}\" title=\"${$._('bearing')}\" src=\"images/bearing.svg\" style=\"transform: rotate(${pos.bearing}deg) scale(1.2);\">${pos.bearing}°<br>` : ''}\n        <img class=\"icon\" alt=\"${$._('position')}\" title=\"${$._('position')}\" src=\"images/position.svg\">${$.getLocaleCoordinates(pos)}<br>\n        </div>${stats}</div>\n        <div id=\"pfooter\"><div>${$._('pointof', id + 1, count)}</div><div>${editLink}</div></div>`;\n    const node = document.createElement('div');\n    node.setAttribute('id', 'popup');\n    node.innerHTML = html;\n    if (pos.hasImage()) {\n      const image = node.querySelector('#pimage img');\n      image.onclick = () => {\n        const modal = new uDialog(`<img src=\"${pos.getImagePath()}\" alt=\"image\">`);\n        const closeEl = modal.element.querySelector('#modal-close');\n        closeEl.onclick = () => modal.destroy();\n        modal.element.classList.add('image');\n        modal.show();\n      }\n    }\n    if (isEditable) {\n      const edit = node.querySelector('#editposition');\n      edit.onclick = () => {\n        const vm = new PositionDialogModel(this.state, id);\n        vm.init();\n      }\n    }\n    return node;\n  }\n\n  /**\n   * Get SVG marker path\n   * @param {boolean} isLarge Large marker with hole if true\n   * @return {string}\n   */\n  static getMarkerPath(isLarge) {\n    const markerHole = 'M15,34.911c0,0,0.359-3.922,1.807-8.588c0.414-1.337,1.011-2.587,2.495-4.159' +\n      'c1.152-1.223,3.073-2.393,3.909-4.447c1.681-6.306-3.676-9.258-8.211-9.258c-4.536,0-9.893,2.952-8.211,9.258' +\n      'c0.836,2.055,2.756,3.225,3.91,4.447c1.484,1.572,2.08,2.822,2.495,4.159C14.64,30.989,15,34.911,15,34.911z M18,15.922' +\n      'c0,1.705-1.342,3.087-2.999,3.087c-1.657,0-3-1.382-3-3.087c0-1.704,1.343-3.086,3-3.086C16.658,12.836,18,14.218,18,15.922z';\n    const marker = 'M14.999,34.911c0,0,0.232-1.275,1.162-4.848c0.268-1.023,0.652-1.98,1.605-3.184' +\n      'c0.742-0.937,1.975-1.832,2.514-3.404c1.082-4.828-2.363-7.088-5.281-7.088c-2.915,0-6.361,2.26-5.278,7.088' +\n      'c0.538,1.572,1.771,2.468,2.514,3.404c0.953,1.203,1.337,2.16,1.604,3.184C14.77,33.635,14.999,34.911,14.999,34.911z';\n    return isLarge ? markerHole : marker;\n  }\n\n  /**\n   * Get marker extra mark\n   * @param {boolean} isLarge\n   * @return {string}\n   */\n  static getMarkerExtra(isLarge) {\n    const offset1 = isLarge ? 'M26.074,13.517' : 'M23.328,20.715';\n    const offset2 = isLarge ? 'M28.232,10.942' : 'M25.486,18.141';\n    return `<path fill=\"none\" stroke=\"red\" stroke-width=\"2\" d=\"${offset1}c0-3.961-3.243-7.167-7.251-7.167\"/>\n            <path fill=\"none\" stroke=\"red\" stroke-width=\"2\" d=\"${offset2}c-0.5-4.028-3.642-7.083-7.724-7.542\"/>`;\n  }\n\n  /**\n   * Get inline SVG source\n   * @param {string} fill\n   * @param {boolean=} isLarge\n   * @param {boolean=} isExtra\n   * @return {string}\n   */\n  static getSvgSrc(fill, isLarge, isExtra) {\n    const svg = `<svg viewBox=\"0 0 30 35\" width=\"30px\" height=\"35px\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g><path stroke=\"black\" fill=\"${fill}\" d=\"${MapViewModel.getMarkerPath(isLarge)}\"/>${isExtra ? MapViewModel.getMarkerExtra(isLarge) : ''}</g></svg>`;\n    return `data:image/svg+xml,${encodeURIComponent(svg)}`;\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $ } from '../src/initializer.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uDialog from './dialog.js';\nimport uUtils from './utils.js';\n\nexport default class TrackDialogModel extends ViewModel {\n\n  /**\n   * @param {TrackViewModel} viewModel\n   */\n  constructor(viewModel) {\n    super({\n      onTrackDelete: null,\n      onTrackUpdate: null,\n      onCancel: null,\n      trackname: ''\n    });\n    this.track = viewModel.state.currentTrack;\n    this.trackVM = viewModel;\n    this.model.onTrackDelete = () => this.onTrackDelete();\n    this.model.onTrackUpdate = () => this.onTrackUpdate();\n    this.model.onCancel = () => this.onCancel();\n  }\n\n  init() {\n    const html = this.getHtml();\n    this.dialog = new uDialog(html);\n    this.dialog.show();\n    this.bindAll(this.dialog.element);\n  }\n\n  /**\n   * @return {string}\n   */\n  getHtml() {\n    return `<div class=\"red-button button-resolve\"><b><a data-bind=\"onTrackDelete\">${$._('deltrack')}</a></b></div>\n      <div>${$._('editingtrack', `<b>${uUtils.htmlEncode(this.track.name)}</b>`)}</div>\n      <div style=\"clear: both; padding-bottom: 1em;\"></div>\n      <form id=\"trackForm\">\n        <label><b>${$._('trackname')}</b></label>\n        <input type=\"text\" placeholder=\"${$._('trackname')}\" name=\"trackname\" data-bind=\"trackname\" value=\"${uUtils.htmlEncode(this.track.name)}\" required autofocus>\n        <div class=\"buttons\">\n          <button class=\"button-reject\" data-bind=\"onCancel\" type=\"button\">${$._('cancel')}</button>\n          <button class=\"button-resolve\" data-bind=\"onTrackUpdate\" type=\"submit\">${$._('submit')}</button>\n        </div>\n      </form>`;\n  }\n\n  onTrackDelete() {\n    if (uDialog.isConfirmed($._('trackdelwarn', uUtils.htmlEncode(this.track.name)))) {\n      this.track.delete().then(() => {\n        this.trackVM.onTrackDeleted();\n        this.dialog.destroy();\n      }).catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onTrackUpdate() {\n    if (this.validate()) {\n      this.track.setName(this.model.trackname);\n      this.track.saveMeta()\n        .then(() => this.dialog.destroy())\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onCancel() {\n    this.dialog.destroy();\n  }\n\n  /**\n   * Validate form\n   * @return {boolean} True if valid\n   */\n  validate() {\n    if (this.model.trackname === this.track.name) {\n      return false;\n    }\n    if (!this.model.trackname) {\n      uAlert.error($._('allrequired'));\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, auth, config } from './initializer.js';\nimport TrackDialogModel from './trackdialogmodel.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uObserve from './observe.js';\nimport uPositionSet from './positionset.js';\nimport uSelect from './select.js';\nimport uTrack from './track.js';\nimport uUtils from './utils.js';\n\n/**\n * @class TrackViewModel\n */\nexport default class TrackViewModel extends ViewModel {\n\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super({\n      /** @type {uTrack[]} */\n      trackList: [],\n      /** @type {string} */\n      currentTrackId: '',\n      /** @type {boolean} */\n      showLatest: false,\n      /** @type {boolean} */\n      autoReload: false,\n      /** @type {string} */\n      inputFile: false,\n      /** @type {string} */\n      summary: false,\n      // click handlers\n      /** @type {function} */\n      onReload: null,\n      /** @type {function} */\n      onExportGpx: null,\n      /** @type {function} */\n      onExportKml: null,\n      /** @type {function} */\n      onImportGpx: null,\n      /** @type {function} */\n      onTrackEdit: null\n    });\n    this.setClickHandlers();\n    /** @type HTMLSelectElement */\n    const listEl = document.querySelector('#track');\n    this.importEl = document.querySelector('#input-file');\n    this.editEl = this.getBoundElement('onTrackEdit');\n    this.select = new uSelect(listEl);\n    this.state = state;\n    this.timerId = 0;\n  }\n\n  /**\n   * @return {TrackViewModel}\n   */\n  init() {\n    this.setObservers();\n    this.bindAll();\n    return this;\n  }\n\n  setObservers() {\n    this.onChanged('trackList', (list) => { this.select.setOptions(list); });\n    this.onChanged('currentTrackId', (listValue) => {\n      this.onTrackSelect(listValue);\n    });\n    this.onChanged('inputFile', (file) => {\n      if (file) { this.onImport(); }\n    });\n    this.onChanged('autoReload', (reload) => {\n      this.autoReload(reload);\n    });\n    this.onChanged('showLatest', (showLatest) => {\n      this.state.showLatest = showLatest;\n      this.onReload(true);\n    });\n    this.state.onChanged('currentUser', (user) => {\n      if (user) {\n        this.loadTrackList();\n        const isEditable = auth.user && (auth.isAdmin || auth.user.id === user.id);\n        if (isEditable) {\n          TrackViewModel.setMenuVisible(this.editEl, true);\n        }\n      } else {\n        this.model.currentTrackId = '';\n        this.model.trackList = [];\n        TrackViewModel.setMenuVisible(this.editEl, false);\n      }\n    });\n    this.state.onChanged('currentTrack', (track) => {\n      this.renderSummary();\n      if (track) {\n        uObserve.observe(track, 'positions', () => {\n          this.renderSummary();\n        });\n      }\n    });\n    this.state.onChanged('showAllUsers', (showAll) => {\n      if (showAll) {\n        this.loadAllUsersPosition();\n      }\n    });\n    config.onChanged('interval', () => {\n      if (this.timerId) {\n        this.stopAutoReload();\n        this.startAutoReload();\n      }\n    });\n    this.state.onChanged('history', (history) => {\n      if (history && !history.userId && history.trackId) {\n        this.model.currentTrackId = history.trackId.toString();\n      }\n    });\n  }\n\n  setClickHandlers() {\n    this.model.onReload = () => this.onReload();\n    const exportCb = (type) => () => {\n      if (this.state.currentTrack) {\n        this.state.currentTrack.export(type);\n      }\n    };\n    this.model.onExportGpx = exportCb('gpx');\n    this.model.onExportKml = exportCb('kml');\n    this.model.onImportGpx = () => this.importEl.click();\n    this.model.onTrackEdit = () => this.showDialog();\n  }\n\n  /**\n   * Reload or update track view\n   * @param {boolean} clear Reload if true, update current track otherwise\n   */\n  onReload(clear = false) {\n    if (this.state.showLatest) {\n      if (this.state.showAllUsers) {\n        this.loadAllUsersPosition();\n      } else if (this.state.currentUser) {\n        this.onUserLastPosition();\n      }\n    } else if (this.state.currentTrack instanceof uTrack) {\n      this.onTrackUpdate(clear);\n    } else if (this.state.currentTrack instanceof uPositionSet) {\n      this.state.currentTrack = null;\n    } else if (this.state.currentUser) {\n      this.loadTrackList();\n    }\n  }\n\n  /**\n   * Handle import\n   */\n  onImport() {\n    const form = this.importEl.parentElement;\n    const sizeMax = form.elements['MAX_FILE_SIZE'].value;\n    if (this.importEl.files && this.importEl.files.length === 1 && this.importEl.files[0].size > sizeMax) {\n      uAlert.error($._('isizefailure', sizeMax));\n      return;\n    }\n    if (!auth.isAuthenticated) {\n      uAlert.error($._('notauthorized'));\n      return;\n    }\n    this.state.jobStart();\n    uTrack.import(form, auth.user)\n      .then((trackList) => {\n        if (trackList.length) {\n          if (trackList.length > 1) {\n            uAlert.toast($._('imultiple', trackList.length));\n          }\n          this.model.trackList = trackList.concat(this.model.trackList);\n          this.model.currentTrackId = trackList[0].listValue;\n        }\n      })\n      .catch((e) => uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e))\n      .finally(() => {\n        this.model.inputFile = '';\n        this.state.jobStop();\n      });\n  }\n\n  /**\n   * Handle track change\n   * @param {string} listValue Track list selected option\n   */\n  onTrackSelect(listValue) {\n    /** @type {(uTrack|undefined)} */\n    const track = this.model.trackList.find((_track) => _track.listValue === listValue);\n    if (!track) {\n      this.state.currentTrack = null;\n    } else if (!track.isEqualTo(this.state.currentTrack)) {\n      this.state.jobStart();\n      track.fetchPositions().then(() => {\n        console.log(`currentTrack id: ${track.id}, loaded ${track.length} positions`);\n        this.state.currentTrack = track;\n        if (this.model.showLatest) {\n          this.model.showLatest = false;\n        }\n      })\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); })\n        .finally(() => this.state.jobStop());\n    }\n  }\n\n  /**\n   * Handle track update\n   * @param {boolean=} clear\n   */\n  onTrackUpdate(clear) {\n    if (clear) {\n      this.state.currentTrack.clear();\n    }\n    this.state.currentTrack.fetchPositions()\n      .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n  }\n\n  /**\n   * Handle user last position request\n   */\n  onUserLastPosition() {\n    this.state.currentUser.fetchLastPosition()\n      .then((_track) => {\n        if (_track) {\n          if (!this.model.trackList.find((listItem) => listItem.listValue === _track.listValue)) {\n            this.model.trackList.unshift(_track);\n          }\n          this.state.currentTrack = _track;\n          this.model.currentTrackId = _track.listValue;\n        }\n      })\n      .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n  }\n\n  /**\n   * Handle last position of all users request\n   */\n  loadAllUsersPosition() {\n    this.state.jobStart();\n    uPositionSet.fetchLatest()\n      .then((_track) => {\n        if (_track) {\n          this.model.trackList = [];\n          this.model.currentTrackId = '';\n          this.state.currentTrack = _track;\n        }\n      })\n      .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); })\n      .finally(() => this.state.jobStop());\n  }\n\n  loadTrackList() {\n    this.state.jobStart();\n    uTrack.fetchList(this.state.currentUser)\n      .then((_tracks) => {\n        this.model.trackList = _tracks;\n        if (_tracks.length) {\n          if (this.state.showLatest) {\n            this.onUserLastPosition();\n          } else if (this.state.history) {\n            this.model.currentTrackId = this.state.history.trackId.toString();\n          } else {\n            this.model.currentTrackId = _tracks[0].listValue;\n          }\n        } else {\n          this.model.currentTrackId = '';\n        }\n      })\n      .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); })\n      .finally(() => this.state.jobStop());\n  }\n\n  showDialog() {\n    const vm = new TrackDialogModel(this);\n    vm.init();\n  }\n\n  onTrackDeleted() {\n    let index = this.model.trackList.indexOf(this.state.currentTrack);\n    this.state.currentTrack = null;\n    if (index !== -1) {\n      this.model.trackList.splice(index, 1);\n      if (this.model.trackList.length) {\n        if (index >= this.model.trackList.length) {\n          index = this.model.trackList.length - 1;\n        }\n        this.model.currentTrackId = this.model.trackList[index].listValue;\n      } else {\n        this.model.currentTrackId = '';\n      }\n    }\n  }\n\n  /**\n   * @param {boolean} start\n   */\n  autoReload(start) {\n    if (start) {\n      this.startAutoReload();\n    } else {\n      this.stopAutoReload();\n    }\n  }\n\n  startAutoReload() {\n    this.timerId = setInterval(() => this.onReload(), config.interval * 1000);\n  }\n\n  stopAutoReload() {\n    clearInterval(this.timerId);\n    this.timerId = 0;\n  }\n\n  /**\n   * @param {HTMLElement} el\n   * @param {boolean} visible\n   */\n  static setMenuVisible(el, visible) {\n    if (el) {\n      if (visible) {\n        el.classList.remove('menu-hidden');\n      } else {\n        el.classList.add('menu-hidden');\n      }\n    }\n  }\n\n  renderSummary() {\n    const track = this.state.currentTrack;\n    if (!track || !track.hasPositions) {\n      this.model.summary = '';\n      return;\n    }\n    const last = track.positions[track.length - 1];\n\n    if (this.state.showLatest) {\n      const today = new Date();\n      const date = new Date(last.timestamp * 1000);\n      const dateTime = uUtils.getTimeString(date);\n      const dateString = (date.toDateString() !== today.toDateString()) ? `${dateTime.date}<br>` : '';\n      const timeString = `${dateTime.time}<span style=\"font-weight:normal\">${dateTime.zone}</span>`;\n      this.model.summary = `\n        <div class=\"menu-title\">${$._('latest')}:</div>\n        ${dateString}\n        ${timeString}`;\n    } else {\n      let summary = `\n        <div class=\"menu-title\">${$._('summary')}</div>\n        <div><img class=\"icon\" alt=\"${$._('tdistance')}\" title=\"${$._('tdistance')}\" src=\"images/distance.svg\"> ${$.getLocaleDistanceMajor(last.totalMeters, true)}</div>\n        <div><img class=\"icon\" alt=\"${$._('ttime')}\" title=\"${$._('ttime')}\" src=\"images/time.svg\"> ${$.getLocaleDuration(last.totalSeconds)}</div>`;\n      if (last.totalSeconds > 0) {\n        summary += `\n          <div><img class=\"icon\" alt=\"${$._('aspeed')}\" title=\"${$._('aspeed')}\" src=\"images/speed.svg\"><b>&#10547;</b> ${$.getLocaleSpeed(last.totalMeters / last.totalSeconds, true)}</div>`;\n      }\n      if (track.hasSpeeds) {\n        summary += `<div><img class=\"icon\" alt=\"${$._('speed')}\" title=\"${$._('speed')}\" src=\"images/speed.svg\"><b>&#10138;</b> ${$.getLocaleSpeed(track.maxSpeed, true)}</div>`;\n      }\n      if (track.hasAltitudes) {\n        let altitudes = `${$.getLocaleAltitude(track.maxAltitude, true)}`;\n        if (track.minAltitude !== track.maxAltitude) {\n          altitudes = `${$.getLocaleAltitude(track.minAltitude)}&ndash;${altitudes}`;\n        }\n        summary += `<div><img class=\"icon\" alt=\"${$._('altitude')}\" title=\"${$._('altitude')}\" src=\"images/altitude.svg\"> ${altitudes}</div>`;\n      }\n      this.model.summary = summary;\n    }\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, auth, config } from './initializer.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uDialog from './dialog.js';\nimport uUser from './user.js';\nimport uUtils from './utils.js';\n\nexport default class UserDialogModel extends ViewModel {\n\n  /**\n   * @param {UserViewModel} viewModel\n   * @param {string} type\n   */\n  constructor(viewModel, type) {\n    super({\n      onUserDelete: null,\n      onUserUpdate: null,\n      onPassChange: null,\n      onUserAdd: null,\n      onCancel: null,\n      passVisibility: false,\n      login: null,\n      password: null,\n      password2: null,\n      oldPassword: null,\n      admin: false\n    });\n    this.user = viewModel.state.currentUser;\n    this.type = type;\n    this.userVM = viewModel;\n    this.model.onUserDelete = () => this.onUserDelete();\n    this.model.onUserUpdate = () => this.onUserUpdate();\n    this.model.onPassChange = () => this.onPassChange();\n    this.model.onUserAdd = () => this.onUserAdd();\n    this.model.onCancel = () => this.onCancel();\n  }\n\n  init() {\n    const html = this.getHtml();\n    this.dialog = new uDialog(html);\n    this.dialog.show();\n    this.bindAll(this.dialog.element);\n    const passInput = this.getBoundElement('passInput');\n    if (passInput) {\n      this.onChanged('passVisibility', () => {\n        if (passInput.style.display === 'none') {\n          passInput.style.display = 'block';\n        } else {\n          passInput.style.display = 'none';\n        }\n      });\n    }\n  }\n\n  onUserDelete() {\n    if (uDialog.isConfirmed($._('userdelwarn', uUtils.htmlEncode(this.user.login)))) {\n      this.user.delete().then(() => {\n        this.userVM.onUserDeleted();\n        this.dialog.destroy();\n      }).catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onUserUpdate() {\n    if (this.validate()) {\n      const password = this.model.passVisibility ? this.model.password : null;\n      this.user.modify(this.model.admin, password)\n        .then(() => this.dialog.destroy())\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onPassChange() {\n    this.model.passVisibility = true;\n    if (this.validate()) {\n      auth.user.setPassword(this.model.password, this.model.oldPassword)\n        .then(() => this.dialog.destroy())\n        .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onUserAdd() {\n    this.model.passVisibility = true;\n    if (this.validate()) {\n      uUser.add(this.model.login, this.model.password, this.model.admin).then((user) => {\n        this.userVM.onUserAdded(user);\n        this.dialog.destroy();\n      }).catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    }\n  }\n\n  onCancel() {\n    this.dialog.destroy();\n  }\n\n  /**\n   * Validate form\n   * @return {boolean} True if valid\n   */\n  validate() {\n    if (this.type === 'add') {\n      if (!this.model.login) {\n        uAlert.error($._('allrequired'));\n        return false;\n      }\n    } else if (this.type === 'pass') {\n      if (!this.model.oldPassword) {\n        uAlert.error($._('allrequired'));\n        return false;\n      }\n    }\n    if (this.model.passVisibility) {\n      if (!this.model.password || !this.model.password2) {\n        uAlert.error($._('allrequired'));\n        return false;\n      }\n      if (this.model.password !== this.model.password2) {\n        uAlert.error($._('passnotmatch'));\n        return false;\n      }\n      if (!config.validPassStrength(this.model.password)) {\n        uAlert.error($.getLocalePassRules());\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @return {string}\n   */\n  getHtml() {\n    let deleteButton = '';\n    let header = '';\n    let observer;\n    let fields;\n    switch (this.type) {\n      case 'add':\n        observer = 'onUserAdd';\n        header = `<label><b>${$._('username')}</b></label>\n        <input type=\"text\" placeholder=\"${$._('usernameenter')}\" name=\"login\" data-bind=\"login\" required autofocus>`;\n        fields = `<label><b>${$._('password')}</b></label>\n        <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password\" data-bind=\"password\" required>\n        <label><b>${$._('passwordrepeat')}</b></label>\n        <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password2\" data-bind=\"password2\" required>\n        <label><b>${$._('admin')}</b></label>\n        <input type=\"checkbox\" name=\"admin\" data-bind=\"admin\">`;\n        break;\n      case 'edit':\n        observer = 'onUserUpdate';\n        deleteButton = `<div class=\"red-button button-resolve\"><b><a data-bind=\"onUserDelete\">${$._('deluser')}</a></b></div>\n        <div>${$._('editinguser', `<b>${uUtils.htmlEncode(this.user.login)}</b>`)}</div>\n        <div style=\"clear: both; padding-bottom: 1em;\"></div>`;\n        fields = `<label><b>${$._('changepass')}</b></label>\n        <input type=\"checkbox\" name=\"changepass\" data-bind=\"passVisibility\"><br>\n        <div style=\"display: none;\" data-bind=\"passInput\">\n          <label><b>${$._('password')}</b></label>\n          <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password\" data-bind=\"password\" required autofocus>\n          <label><b>${$._('passwordrepeat')}</b></label>\n          <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password2\" data-bind=\"password2\" required>\n        </div>\n        <label><b>${$._('admin')}</b></label>\n        <input type=\"checkbox\" name=\"admin\" data-bind=\"admin\" ${this.user.isAdmin ? 'checked' : ''}>`;\n        break;\n      case 'pass':\n        observer = 'onPassChange';\n        fields = `<label><b>${$._('oldpassword')}</b></label>\n        <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"old-password\" data-bind=\"oldPassword\" required autofocus>\n        <label><b>${$._('newpassword')}</b></label>\n        <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password\" data-bind=\"password\" required>\n        <label><b>${$._('newpasswordrepeat')}</b></label>\n        <input type=\"password\" placeholder=\"${$._('passwordenter')}\" name=\"password2\" data-bind=\"password2\" required>`;\n        break;\n      default:\n        throw new Error(`Unknown dialog type: ${this.type}`);\n    }\n    return `${deleteButton}\n      <form id=\"userForm\">\n        ${header}\n        ${fields}\n        <div class=\"buttons\">\n          <button class=\"button-reject\" type=\"button\" data-bind=\"onCancel\">${$._('cancel')}</button>\n          <button class=\"button-resolve\" type=\"submit\" data-bind=\"${observer}\">${$._('submit')}</button>\n        </div>\n      </form>`;\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, auth } from './initializer.js';\nimport UserDialogModel from './userdialogmodel.js';\nimport ViewModel from './viewmodel.js';\nimport uAlert from './alert.js';\nimport uSelect from './select.js';\nimport uUser from './user.js';\n\n/**\n * @class UserViewModel\n */\nexport default class UserViewModel extends ViewModel {\n\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    super({\n      /** @type {uUser[]} */\n      userList: [],\n      /** @type {string} */\n      currentUserId: '0',\n      // click handlers\n      /** @type {function} */\n      onUserEdit: null,\n      /** @type {function} */\n      onUserAdd: null,\n      /** @type {function} */\n      onPasswordChange: null\n    });\n    this.setClickHandlers();\n    /** @type HTMLSelectElement */\n    const listEl = document.querySelector('#user');\n    this.editEl = this.getBoundElement('onUserEdit');\n    this.select = new uSelect(listEl, $._('suser'), `- ${$._('allusers')} -`);\n    this.state = state;\n  }\n\n  setClickHandlers() {\n    this.model.onUserEdit = () => this.showDialog('edit');\n    this.model.onUserAdd = () => this.showDialog('add');\n    this.model.onPasswordChange = () => this.showDialog('pass');\n  }\n\n  /**\n   * @return {UserViewModel}\n   */\n  init() {\n    this.setObservers(this.state);\n    this.bindAll();\n    uUser.fetchList()\n      .then((_users) => {\n      this.model.userList = _users;\n      if (_users.length) {\n        let userId = _users[0].listValue;\n        if (this.state.history) {\n          userId = this.state.history.userId.toString();\n        } else if (auth.isAuthenticated) {\n          const user = this.model.userList.find((_user) => _user.listValue === auth.user.listValue);\n          if (user) {\n            userId = user.listValue;\n          }\n        }\n        this.model.currentUserId = userId;\n      }\n    })\n      .catch((e) => { uAlert.error(`${$._('actionfailure')}\\n${e.message}`, e); });\n    return this;\n  }\n\n  /**\n   * @param {uState} state\n   */\n  setObservers(state) {\n    this.onChanged('userList', (list) => {\n      this.select.setOptions(list);\n    });\n    this.onChanged('currentUserId', (listValue) => {\n      this.state.showAllUsers = listValue === uSelect.allValue;\n      this.state.currentUser = this.model.userList.find((_user) => _user.listValue === listValue) || null;\n      UserViewModel.setMenuVisible(this.editEl, this.state.currentUser !== null && !this.state.currentUser.isEqualTo(auth.user));\n    });\n    state.onChanged('showLatest', (showLatest) => {\n      if (showLatest) {\n        this.select.showAllOption();\n      } else {\n        this.select.hideAllOption();\n      }\n    });\n    state.onChanged('history', (history) => {\n      if (history && history.userId) {\n        this.model.currentUserId = history.userId.toString();\n      }\n    });\n  }\n\n  showDialog(action) {\n    const vm = new UserDialogModel(this, action);\n    vm.init();\n  }\n\n  /**\n   * @param {uUser} newUser\n   */\n  onUserAdded(newUser) {\n    this.model.userList.push(newUser);\n    this.model.userList.sort((a, b) => ((a.login > b.login) ? 1 : -1));\n  }\n\n  onUserDeleted() {\n    let index = this.model.userList.indexOf(this.state.currentUser);\n    this.state.currentUser = null;\n    if (index !== -1) {\n      this.model.userList.splice(index, 1);\n      if (this.model.userList.length) {\n        if (index >= this.model.userList.length) {\n          index = this.model.userList.length - 1;\n        }\n        this.model.currentUserId = this.model.userList[index].listValue;\n      } else {\n        this.model.currentUserId = '0';\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} el\n   * @param {boolean} visible\n   */\n  static setMenuVisible(el, visible) {\n    if (el) {\n      if (visible) {\n        el.classList.remove('menu-hidden');\n      } else {\n        el.classList.add('menu-hidden');\n      }\n    }\n  }\n\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config } from './initializer.js';\nimport uTrack from './track.js';\nimport uUtils from './utils.js';\n\n/**\n * @typedef {Object} PermalinkState\n * @property {string} title\n * @property {number|null} userId\n * @property {number|null} trackId\n * @property {string|null} mapApi\n * @property {MapParams|null} mapParams\n */\n\nexport default class uPermalink {\n\n  /**\n   * @param {uState} state\n   */\n  constructor(state) {\n    this.state = state;\n    this.skipPush = false;\n  }\n\n  /**\n   * @return {uPermalink}\n   */\n  init() {\n    this.state.onChanged('mapParams', () => this.pushState());\n    window.addEventListener('popstate', (event) => {\n      if (event.state === null) {\n        return;\n      }\n      const track = this.state.currentTrack;\n      const user = this.state.currentUser;\n      // remove elements that won't be updated\n      const state = {\n        title: event.state.title,\n        userId: (user && user.id === event.state.userId) ? null : event.state.userId,\n        trackId: (track && track.id === event.state.trackId) ? null : event.state.trackId,\n        mapApi: config.mapApi === event.state.mapApi ? null : event.state.mapApi,\n        mapParams: event.state.mapParams\n      }\n      this.onPop(state);\n      this.skipPush = true;\n    });\n    return this;\n  }\n\n  /**\n   * @return {Promise<?PermalinkState>}\n   */\n  static parseHash() {\n    return uPermalink.parse(window.location.hash);\n  }\n\n  /**\n   * Parse URL hash string\n   * @param {string} hash\n   * @return {Promise<?PermalinkState>} Permalink state or null if not parsable\n   */\n  static parse(hash) {\n    const parts = hash.replace('#', '').split('/');\n    parts.reverse();\n    const trackId = parseInt(parts.pop());\n    if (!isNaN(trackId)) {\n      let mapApi = 'openlayers';\n      if (parts.pop() === 'g') {\n        mapApi = 'gmaps';\n      }\n      let mapParams = null;\n      if (parts.length >= 4) {\n        mapParams = {};\n        mapParams.center = [ parseFloat(parts.pop()), parseFloat(parts.pop()) ];\n        mapParams.zoom = parseFloat(parts.pop());\n        mapParams.rotation = parseFloat(parts.pop());\n      }\n      return uTrack.getMeta(trackId)\n        .then((meta) => {\n          const userId = meta.userId;\n          const title = meta.name;\n          return { title, userId, trackId, mapApi, mapParams };\n        })\n        .catch((e) => {\n          console.log(`Ignoring unknown track ${trackId} ${e}`);\n          return null;\n        });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * @param {?PermalinkState} state\n   */\n  onPop(state) {\n    console.log('popState: #' + (state ? `${state.trackId}/${state.mapApi}/${state.mapParams}` : ''));\n    this.state.history = state;\n    if (state) {\n      document.title = `${$._('title')} ${state.title}`;\n    }\n  }\n\n  /**\n   * Push state into browser history\n   */\n  pushState() {\n    if (this.skipPush) {\n      this.skipPush = false;\n      return;\n    }\n    if (this.state.currentUser === null || this.state.currentTrack === null) {\n      return;\n    }\n    const state = this.getState();\n    const prevState = window.history.state;\n    if (!prevState || !uUtils.isDeepEqual(prevState, state)) {\n      const hash = uPermalink.getHash(state);\n      console.log(`pushState: ${hash} => ${state}`);\n      window.history.pushState(state, state.title, hash);\n      document.title = `${$._('title')} ${state.title}`;\n    }\n  }\n\n  getState() {\n    return {\n      title: this.state.currentTrack.name,\n      userId: this.state.currentUser.id,\n      trackId: this.state.currentTrack.id,\n      mapApi: config.mapApi,\n      mapParams: this.state.mapParams\n    };\n  }\n\n  /**\n   * Get link hash\n   * @param {PermalinkState} state\n   * @return {string}\n   */\n  static getHash(state) {\n    let hash = `#${state.trackId}/${state.mapApi.charAt(0)}`;\n    if (state.mapParams) {\n      hash += `/${state.mapParams.center[0]}/${state.mapParams.center[1]}`;\n      hash += `/${state.mapParams.zoom}/${state.mapParams.rotation}`;\n    }\n    return hash;\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2020 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport uAlert from './alert.js';\n\nexport default class uSpinner {\n\n  constructor(state) {\n    this.spinner = null;\n    this.state = state;\n  }\n\n  init() {\n    this.state.onChanged('activeJobs', (jobs) => {\n      if (jobs > 0) {\n        if (!this.spinner) {\n          this.spinner = uAlert.spinner();\n        }\n      } else if (this.spinner) {\n        this.spinner.destroy();\n        this.spinner = null;\n      }\n    });\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport uObserve from './observe.js';\n\n/**\n * @class\n * @property {?uTrack} currentTrack\n * @property {?uUser} currentUser\n * @property {boolean} showLatest\n * @property {boolean} showAllUsers\n * @property {number} activeJobs\n * @property {?MapParams} mapParams\n * @property {?PermalinkState} history\n */\nexport default class uState {\n\n  constructor() {\n    this.currentTrack = null;\n    this.currentUser = null;\n    this.showLatest = false;\n    this.showAllUsers = false;\n    this.activeJobs = 0;\n    this.mapParams = null;\n    this.history = null;\n  }\n\n  jobStart() {\n    this.activeJobs++;\n  }\n\n  jobStop() {\n    this.activeJobs--;\n  }\n\n  /**\n   * @param {string} property\n   * @param {ObserveCallback} callback\n   */\n  onChanged(property, callback) {\n    uObserve.observe(this, property, callback);\n  }\n}\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lang as $, config, initializer, uInitializer } from './initializer.js';\nimport ChartViewModel from './chartviewmodel.js';\nimport ConfigViewModel from './configviewmodel.js';\nimport MainViewModel from './mainviewmodel.js';\nimport MapViewModel from './mapviewmodel.js';\nimport TrackViewModel from './trackviewmodel.js';\nimport UserViewModel from './userviewmodel.js';\nimport uAlert from './alert.js';\nimport uPermalink from './permalink.js';\nimport uSpinner from './spinner.js';\nimport uState from './state.js';\n\nconst domReady = uInitializer.waitForDom();\nconst initReady = initializer.initialize();\nconst initLink = uPermalink.parseHash();\n\nPromise.all([ domReady, initReady, initLink ])\n  .then((result) => {\n    start(result[2]);\n  })\n  .catch((msg) => uAlert.error(`${$._('actionfailure')}\\n${msg}`));\n\n/**\n * @param {?Object} linkState\n */\nfunction start(linkState) {\n  const state = new uState();\n  const permalink = new uPermalink(state);\n  const spinner = new uSpinner(state);\n  const mainVM = new MainViewModel(state);\n  const userVM = new UserViewModel(state);\n  const trackVM = new TrackViewModel(state);\n  const mapVM = new MapViewModel(state);\n  const chartVM = new ChartViewModel(state);\n  const configVM = new ConfigViewModel(state);\n  permalink.init().onPop(linkState);\n  spinner.init();\n  mainVM.init();\n  userVM.init();\n  trackVM.init();\n  mapVM.init().loadMapAPI(config.mapApi);\n  chartVM.init();\n  configVM.init();\n\n  mapVM.onChanged('markerOver', (id) => {\n    if (id !== null) {\n      chartVM.onPointOver(id);\n    } else {\n      chartVM.onPointOut();\n    }\n  });\n  mapVM.onChanged('markerSelect', (id) => {\n    if (id !== null) {\n      chartVM.onPointSelect(id);\n    } else {\n      chartVM.onPointUnselect();\n    }\n  });\n  chartVM.onChanged('pointSelected', (id) => {\n    if (id !== null) {\n      mapVM.api.animateMarker(id);\n    }\n  });\n}\n"],"names":["inProgress","dataWebpackPrefix","root","this","define","Chartist","returnExportsGlobal","axisDefaults","axisTitle","axisClass","offset","x","y","textAnchor","flipTitle","defaultOptions","axisX","axisY","getTitle","title","Function","getClasses","classes","plugins","ctAxisTitle","options","extend","chart","on","data","Error","xPos","yPos","chartPadding","normalizePadding","axisLength","left","top","position","Svg","addClass","text","attr","svg","append","transform","factory","Object","defineProperty","exports","value","namespaces","xmlns","xhtml","xlink","ct","precision","escapingMap","ensureUnit","unit","quantity","input","match","exec","undefined","Number","alphaNumerate","n","String","fromCharCode","EPSILON","orderOfMagnitude","Math","floor","log","abs","LN10","projectLength","length","bounds","range","roundWithPrecision","digits","precision$1","pow","round","rho","num","gcd","p","q","f","divisor","x1","x2","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","getBounds","highLow","scaleMinSpace","onlyInteger","arguments","high","low","valueRange","oom","step","min","max","numberOfSteps","values","ceil","scaleUp","smallestFactor","optimizationCounter","safeIncrement","increment","newMin","newMax","i","push","target","_len","sources","Array","_key","source","prop","sourceProp","noop","times","filler","from","_","sum","previous","current","serialMap","array","callback","map","element","index","safeHasProperty","property","Reflect","has","isNumeric","isFinite","isFalseyButZero","getNumberOrUndefined","isArrayOfArrays","isArray","every","each","list","item","itemIndex","getMetaData","seriesData","meta","isDataHoleValue","isNaN","isArrayOfSeries","isMultiValue","getMultiValue","dimension","getHighLow","MAX_VALUE","findHigh","findLow","recursiveHighLow","sourceData","referenceValue","normalizeData","labelCount","reverse","multi","distributed","normalized","labels","slice","series","normalizeSeries","inputLabelCount","forEach","ref","reverseData","normalizePrimitive","normalizeMulti","normalizeSingleSeries","normalizedSeries","splitIntoSegments","pathCoordinates","valueData","finalOptions","increasingX","fillHoles","segments","hole","serialize","serialized","JSON","stringify","keys","reduce","result","key","replaceAll","SvgList","call","method","args","svgElements","apply","elem","getNode","foreignObject","empty","remove","removeClass","removeAllClasses","animate","constructor","nodeList","easings","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","createAnimation","attribute","animationDefinition","createGuided","eventEmitter","easing","def","attributeProperties","animationEasing","timeout","begin","dur","calcMode","keySplines","join","keyTimes","fill","attributeName","setTimeout","_node","beginElement","err","to","animateNode","addEventListener","emit","params","attributes","ns","getAttributeNS","getAttribute","indexOf","namespacedAttribute","split","setAttributeNS","setAttribute","name","className","parent","parentNode","SVGElement","node","nodeName","parentElement","querySelector","selector","foundNode","querySelectorAll","foundNodes","content","contentNode","insertFirst","container","document","createElement","innerHTML","firstChild","Element","fnObj","appendChild","t","createTextNode","removeChild","replace","newElement","replaceChild","insertBefore","classNames","trim","names","concat","filter","pos","self","removedClasses","height","getBoundingClientRect","width","animations","guided","attributeAnimation","createElementNS","createSvg","svg1","style","padding","right","bottom","createChartRect","ref1","ref2","ref3","hasAxis","Boolean","yAxisOffset","xAxisOffset","yAxisPosition","xAxisPosition","normalizedPadding","chartRect","y1","y2","createGrid","axis","group","positionalData","units","counterUnits","gridElement","type","createGridBackground","gridGroup","gridBackground","createLabel","label","axisOffset","labelOffset","len","stepLength","stepCounterLength","textContent","labelElement","optionsProvider","responsiveOptions","currentOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","responsiveOption","window","matchMedia","matches","mql","removeMediaQueryListeners","removeEventListener","getCurrentOptions","Easing","elementDescriptions","m","l","c","a","defaultOptions$3","accuracy","command","pathElements","relative","pathElement","toLowerCase","toUpperCase","splice","forEachParam","cb","pathElementIndex","paramName","paramIndex","SvgPath","static","paths","joinedPath","path","j","count","move","line","curve","arc","rx","ry","xAr","lAf","sf","parse","chunks","pop","elements","chunk","shift","description","accuracyMultiplier","close","scale","translate","transformFnc","transformed","clone","splitByCommand","none","currX","currY","currData","monotoneCubic","monotoneCubicInterpolation","segment","xs","ys","ms","ds","dys","dxs","i1","i2","i3","freeze","__proto__","simple","d","prevData","prevX","prevY","postpone","cardinal","tension","cardinalInterpolation","z","iLen","EventEmitter","event","listener","allListeners","listeners","add","set","Set","get","off","delete","clear","eventListeners","size","Map","instances","WeakMap","BaseChart","update","override","initializeTimeoutId","createChart","detach","clearTimeout","resizeListener","initialize","plugin","query","prevInstance","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","ticks","tick","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelValue","labelLength","showGrid","gridOffset","grid","showLabel","end","AutoScaleAxis","finalValue","axisUnit","super","StepAxis","_value","_data","calc","stretch","getSeriesOption","defaultOptions$2","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","point","area","vertical","horizontal","start","defaultOptions$1","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","chartPie","chartDonut","slicePie","sliceDonut","startAngle","total","donut","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","BarChart","normalizedData","prev","curr","seriesGroup","valueAxis","labelAxisTicks","labelAxis","zeroPoint","isAccumulateStackMode","isAccumulateRelativeStackMode","posStackedBarValues","negStackedBarValues","stackedBarValues","seriesIndex","biPol","periodHalfLength","seriesElement","seriesName","seriesClassName","seriesMeta","valueIndex","valueX","valueY","labelAxisValueIndex","projected","previousStack","positions","metaData","FixedScaleAxis","sort","b","Interpolation","LineChart","pathData","seriesOptions","smoothing","pathElementData","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","PieChart","seriesGroups","labelsGroup","labelRadius","totalDataSum","hasSingleValInSeries","val","endAngle","overlappigStartAngle","rawValue","interpolatedValue","dx","dy","deserialize","NaN","parsedData","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","getter","__esModule","definition","o","enumerable","chunkId","Promise","all","promises","u","obj","prototype","hasOwnProperty","url","done","script","needAttach","scripts","getElementsByTagName","s","charset","nc","src","onScriptComplete","onerror","onload","doneFns","fn","bind","head","r","Symbol","toStringTag","installedChunks","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","uAjax","ajax","xhr","XMLHttpRequest","body","onreadystatechange","readyState","DONE","status","responseText","HTMLFormElement","FormData","URLSearchParams","toString","encodeValue","open","setRequestHeader","send","encodeURIComponent","uObserve","p1","p2","observeProperty","observeRecursive","observers","observer","_values","_observers","notify","isObserved","obs","observeArray","addObserver","configurable","newValue","arr","overrideArrayPrototypes","unobserveProperty","unobserveArray","unobserveRecursive","unobserveAll","restoreArrayPrototypes","removeObserver","operation","descriptor","getOwnPropertyDescriptor","uSelect","HTMLSelectElement","hasAllOption","allText","hasHead","headText","selected","hasValue","addHead","showAllOption","Option","allValue","hideAllOption","isSelectedAll","headValue","dispatchEvent","Event","disabled","getOption","find","option","setOptions","optEl","listText","listValue","observe","uListItem","listItem","uUtils","days","expires","date","Date","setTime","getTime","toUTCString","cookie","fmt","ret","getElementById","tag","async","scriptLoaded","addScript","timeoutPromise","race","tid","hex","opacity","RegExp","parseInt","intensity","rgb","rel","href","html","template","childNodes","isNullable","getParsed","output","parseFloat","timeZone","getFullYear","getMonth","getDate","time","toTimeString","hours","zone","dst","test","location","assign","degrees","obj1","obj2","isDeepEqual","uPosition","getInteger","latitude","getFloat","longitude","altitude","speed","bearing","provider","getString","comment","image","username","trackname","trackid","timestamp","meters","seconds","totalMeters","totalSeconds","hasComment","hasImage","hasSpeed","hasAltitude","getImagePath","totalSpeed","action","posid","save","imageDelete","then","imageAdd","imageFile","post","distanceTo","lat1","deg2rad","lon1","lat2","latD","lonD","asin","sqrt","secondsTo","uPositionSet","hasPositions","isLastPosition","isFirstPosition","fromJson","posArr","fetchLatest","fetch","last","_positions","uTrack","user","isSafeInteger","uUser","plotData","maxId","maxSpeed","maxAltitude","minAltitude","setName","clearTrackCounters","isEqualTo","track","hasPlotData","hasAltitudes","hasSpeeds","calculatePosition","fetchPositions","userid","afterid","_tracks","tracks","export","openUrl","form","saveMeta","recalculatePositions","login","isAdmin","fetchLastPosition","_users","users","password","pass","admin","setPassword","oldPassword","oldpass","modify","uAuth","_isAdmin","_isAuthenticated","_user","isAuthenticated","load","userId","userLogin","uLayer","priority","setUrl","uLayerCollection","addNewLayer","addLayer","getMaxId","setPriorityLayer","layer","getPriorityLayer","layers","uConfig","interval","lang","mapApi","googleKey","olLayers","initLatitude","initLongitude","requireAuth","publicTracks","passStrength","passLenMin","strokeWeight","strokeColor","strokeOpacity","colorNormal","colorStart","colorStop","colorExtra","colorHilite","uploadMaxSize","initUnits","factorSpeed","unitSpeed","factorDistance","unitDistance","factorDistanceMajor","unitDistanceMajor","unitDay","unitAltitude","reinitialize","onChanged","validPassStrength","getPassRegExp","regex","uLang","strings","config","init","sprintf","unitName","getLocaleSpeed","withUnit","localized","toLocaleString","getLocaleDistanceMajor","getLocaleDistance","getLocaleAltitude","getLocaleAccuracy","getLocaleDuration","h","getLocaleCoordinates","coordStr","isLon","ipos","trunc","dec","maximumFractionDigits","getLocalePassRules","rulesStr","getLangList","uInitializer","auth","initializer","ViewModel","model","_model","bindAll","dataProp","dataset","HTMLInputElement","HTMLTextAreaElement","onChangeBind","HTMLAnchorElement","HTMLButtonElement","onClickBind","viewUpdateBind","preventDefault","getVal","unsubscribe","unobserve","getBoundElement","ChartViewModel","state","pointSelected","chartVisible","buttonVisible","onChartToggle","onMenuToggle","chartPoints","chartElement","chartContainer","buttonElement","chartSetup","setObservers","addCss","getChart","onCreated","$","onTrackUpdate","visible","renderButton","renderContainer","render","isVisible","display","currentTrack","classList","pointAddClass","pointId","$className","pointsRemoveClass","el","onPointOver","onPointOut","onPointSelect","onPointUnselect","uAlert","autoClose","hasButton","fixedPosition","fixed","box","nodeFromHtml","class","button","onclick","destroy","closeHandle","boxes","lastBox","maxPosition","clientHeight","getPosition","contains","requestAnimationFrame","console","stack","show","uDialog","dialog","dialogHeader","buttonClose","img","dialogBody","NodeList","prepend","autofocus","focusEl","focus","confirm","ConfigDialogModel","layerId","layerName","layerUrl","uploadMaxSizeMB","onCancel","onSave","onLayerUpdate","onLayerCancel","onLayerEdit","onLayerDelete","onLayerAdd","getHtml","toggleEditEl","layerEditEl","layerSelect","setPublicTracksActivity","toggleEditVisible","validate","catch","checkValidity","visibility","hideEditElement","showEditElement","currentLayer","langOptions","langCode","langName","entries","unitOptions","layerOptions","ConfigViewModel","onSetInterval","setAutoReloadInterval","onConfigEdit","showConfigDialog","api","setCookie","_lang","reload","prompt","hiddenClass","MainViewModel","onShowUserMenu","onLogin","onLogout","toggleSideMenu","toggleUserMenu","logout","hideUserMenuCallback","hideUserMenu","menuEl","userMenuEl","stopPropagation","hash","GoogleMapsApi","vm","viewModel","polies","markers","popup","timeoutHandle","onScriptLoaded","loadScript","loadTimeoutMs","initMap","gmInitialize","gm_loaded","gmInitialized","gm_authFailure","authError","mapOptions","google","maps","LatLng","zoom","mapTypeId","MapTypeId","TERRAIN","scaleControl","controlSize","mapElement","InfoWindow","addListener","popupClose","saveState","mapParams","getState","cleanup","getDiv","displayTrack","clearListeners","addListenerOnce","polyOptions","poly","latlngbounds","LatLngBounds","Polyline","setMap","getPath","removePoint","setMarker","coordinates","fitBounds","zListener","getZoom","setZoom","removeListener","clearMap","getMap","setContent","isLarge","isExtra","anchor","Point","MapViewModel","getSvgSrc","marker","Marker","icon","getMarkerIcon","setIcon","popupOpen","markerOver","removeAt","markerSelect","getPopupElement","animateMarker","getIcon","setAnimation","Animation","BOUNCE","lat_sw","getSouthWest","lat","lon_sw","lng","lat_ne","getNorthEast","zoomToExtent","zoomToBounds","sw","ne","latLngBounds","isPositionVisible","centerToPosition","setCenter","updateSize","setTrackDefaultStyle","setTrackGradientStyle","updateState","getCenter","rotation","ol","OpenLayersApi","olModule","layerTrack","layerMarkers","selectedLayer","markerStyles","initLayers","initStyles","initPopups","controls","control","Zoom","Rotate","ScaleLine","view","View","proj","fromLonLat","feature","forEachFeatureAtPixel","pixel","_feature","_layer","getTargetElement","cursor","getId","osm","TileLayer","OSM","olLayer","XYZ","setVisible","VectorLayer","Vector","initLayerSwitcher","Style","Icon","stop","normal","extra","startExtra","stopExtra","hilite","lineStyle","stroke","Stroke","color","hexToRGBA","setStyle","getGradientStyle","context","colors","pixelStart","getPixelFromCoordinate","pixelEnd","devicePixelRatio","x0","y0","gradient","createLinearGradient","addColorStop","geometry","geom","LineString","minValue","maxValue","minColor","maxColor","ctx","alpha","desynchronized","getContext","styles","getGeometry","getScaleColor","forEachSegment","popupContainer","popupContent","popupCloser","Overlay","autoPan","autoPanAnimation","duration","addOverlay","blur","coordinate","getElement","firstElementChild","setPosition","switchLayer","targetName","getLayers","getVisible","switcher","switcherContent","switcherCloser","layerLabel","layerRadio","checked","switcherButton","layerImg","switcherHandle","switcherControl","Control","addControl","removeElementById","un","once","getSource","getFeatures","lineString","lineFeature","Feature","addFeature","appendCoordinate","extent","getExtent","fitToExtent","setZoomToExtent","getControls","ZoomToExtent","removeControl","getExtentImg","getView","fit","TRACK_PADDING","maxZoom","ZOOM_MAX","calculateExtent","mapExtent","getFeatureById","containsCoordinate","getCoordinates","getMarkerStyle","iconStyle","setId","removeFeature","setCoordinates","initStyle","getStyle","toLonLat","extentImg","setRotation","getRotation","PositionDialogModel","positionIndex","onPositionDelete","onPositionUpdate","onImageDelete","readImage","previewEl","fileEl","imageDeleteEl","initReader","reader","FileReader","showThumbnail","file","files","readAsDataURL","toggleImage","htmlEncode","isConfirmed","updateImage","forceUpdate","speedVisible","altitudeVisible","speedEl","altitudeEl","styleEl","savedBounds","loadMapAPI","apiName","getApi","onReady","txt","toggleStyleOptions","toggleStyleMenu","history","trackId","onMapResize","setTrackStyle","jobStart","finally","jobStop","setSpeedStyle","setAltitudeStyle","isEditable","dateTime","getTimeString","editLink","stats","showLatest","modal","getMarkerPath","getMarkerExtra","TrackDialogModel","onTrackDelete","trackVM","onTrackDeleted","TrackViewModel","trackList","currentTrackId","autoReload","inputFile","summary","onReload","onExportGpx","onExportKml","onImportGpx","onTrackEdit","setClickHandlers","listEl","importEl","editEl","select","timerId","onTrackSelect","onImport","loadTrackList","setMenuVisible","renderSummary","showAll","loadAllUsersPosition","stopAutoReload","startAutoReload","exportCb","click","showDialog","showAllUsers","currentUser","onUserLastPosition","sizeMax","toast","_track","unshift","fetchList","setInterval","clearInterval","today","dateString","toDateString","timeString","altitudes","UserDialogModel","onUserDelete","onUserUpdate","onPassChange","onUserAdd","passVisibility","password2","userVM","passInput","onUserDeleted","onUserAdded","fields","deleteButton","header","UserViewModel","userList","currentUserId","onUserEdit","onPasswordChange","newUser","uPermalink","skipPush","pushState","onPop","parts","getMeta","prevState","getHash","charAt","uSpinner","spinner","jobs","uState","activeJobs","domReady","waitForDom","initReady","initLink","parseHash","linkState","permalink","mainVM","mapVM","chartVM","configVM","msg"],"sourceRoot":""}