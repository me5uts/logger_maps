{"version":3,"file":"521.bundle.js","mappings":"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","sources":["webpack://ulogger-server/./node_modules/ol/events/Event.js","webpack://ulogger-server/./node_modules/ol/ObjectEventType.js","webpack://ulogger-server/./node_modules/ol/Disposable.js","webpack://ulogger-server/./node_modules/ol/array.js","webpack://ulogger-server/./node_modules/ol/functions.js","webpack://ulogger-server/./node_modules/ol/obj.js","webpack://ulogger-server/./node_modules/ol/events/Target.js","webpack://ulogger-server/./node_modules/ol/events/EventType.js","webpack://ulogger-server/./node_modules/ol/events.js","webpack://ulogger-server/./node_modules/ol/Observable.js","webpack://ulogger-server/./node_modules/ol/util.js","webpack://ulogger-server/./node_modules/ol/Object.js","webpack://ulogger-server/./node_modules/ol/MapEventType.js","webpack://ulogger-server/./node_modules/ol/has.js","webpack://ulogger-server/./node_modules/ol/dom.js","webpack://ulogger-server/./node_modules/ol/control/Control.js","webpack://ulogger-server/./node_modules/ol/css.js","webpack://ulogger-server/./node_modules/ol/easing.js","webpack://ulogger-server/./node_modules/ol/control/Rotate.js","webpack://ulogger-server/./node_modules/ol/proj/Units.js","webpack://ulogger-server/./node_modules/ol/proj/Projection.js","webpack://ulogger-server/./node_modules/ol/proj/epsg3857.js","webpack://ulogger-server/./node_modules/ol/proj/epsg4326.js","webpack://ulogger-server/./node_modules/ol/proj/projections.js","webpack://ulogger-server/./node_modules/ol/proj/transforms.js","webpack://ulogger-server/./node_modules/ol/extent/Relationship.js","webpack://ulogger-server/./node_modules/ol/AssertionError.js","webpack://ulogger-server/./node_modules/ol/asserts.js","webpack://ulogger-server/./node_modules/ol/extent.js","webpack://ulogger-server/./node_modules/ol/math.js","webpack://ulogger-server/./node_modules/ol/coordinate.js","webpack://ulogger-server/./node_modules/ol/sphere.js","webpack://ulogger-server/./node_modules/ol/console.js","webpack://ulogger-server/./node_modules/ol/proj.js","webpack://ulogger-server/./node_modules/ol/control/ScaleLine.js","webpack://ulogger-server/./node_modules/ol/control/Zoom.js","webpack://ulogger-server/./node_modules/ol/transform.js","webpack://ulogger-server/./node_modules/ol/geom/flat/transform.js","webpack://ulogger-server/./node_modules/ol/geom/Geometry.js","webpack://ulogger-server/./node_modules/ol/geom/SimpleGeometry.js","webpack://ulogger-server/./node_modules/ol/geom/flat/closest.js","webpack://ulogger-server/./node_modules/ol/geom/flat/deflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/simplify.js","webpack://ulogger-server/./node_modules/ol/geom/flat/inflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/area.js","webpack://ulogger-server/./node_modules/ol/geom/LinearRing.js","webpack://ulogger-server/./node_modules/ol/geom/Point.js","webpack://ulogger-server/./node_modules/ol/geom/flat/contains.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ulogger-server/./node_modules/ol/geom/flat/segments.js","webpack://ulogger-server/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/reverse.js","webpack://ulogger-server/./node_modules/ol/geom/flat/orient.js","webpack://ulogger-server/./node_modules/ol/geom/Polygon.js","webpack://ulogger-server/./node_modules/ol/control/ZoomToExtent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interpolate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/length.js","webpack://ulogger-server/./node_modules/ol/geom/LineString.js","webpack://ulogger-server/./node_modules/ol/Feature.js","webpack://ulogger-server/./node_modules/ol/ImageState.js","webpack://ulogger-server/./node_modules/ol/size.js","webpack://ulogger-server/./node_modules/ol/style/Image.js","webpack://ulogger-server/./node_modules/ol/color.js","webpack://ulogger-server/./node_modules/ol/style/IconImageCache.js","webpack://ulogger-server/./node_modules/ol/Image.js","webpack://ulogger-server/./node_modules/ol/style/IconImage.js","webpack://ulogger-server/./node_modules/ol/style/Icon.js","webpack://ulogger-server/./node_modules/ol/CollectionEventType.js","webpack://ulogger-server/./node_modules/ol/Collection.js","webpack://ulogger-server/./node_modules/ol/layer/Property.js","webpack://ulogger-server/./node_modules/ol/layer/Base.js","webpack://ulogger-server/./node_modules/ol/render/EventType.js","webpack://ulogger-server/./node_modules/ol/ViewHint.js","webpack://ulogger-server/./node_modules/ol/ViewProperty.js","webpack://ulogger-server/./node_modules/ol/tilegrid/common.js","webpack://ulogger-server/./node_modules/ol/centerconstraint.js","webpack://ulogger-server/./node_modules/ol/resolutionconstraint.js","webpack://ulogger-server/./node_modules/ol/rotationconstraint.js","webpack://ulogger-server/./node_modules/ol/View.js","webpack://ulogger-server/./node_modules/ol/layer/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/Map.js","webpack://ulogger-server/./node_modules/ol/render/Event.js","webpack://ulogger-server/./node_modules/ol/render/canvas.js","webpack://ulogger-server/./node_modules/ol/renderer/Composite.js","webpack://ulogger-server/./node_modules/ol/layer/Group.js","webpack://ulogger-server/./node_modules/ol/MapEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventType.js","webpack://ulogger-server/./node_modules/ol/pointer/EventType.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventHandler.js","webpack://ulogger-server/./node_modules/ol/MapProperty.js","webpack://ulogger-server/./node_modules/ol/structs/PriorityQueue.js","webpack://ulogger-server/./node_modules/ol/TileState.js","webpack://ulogger-server/./node_modules/ol/TileQueue.js","webpack://ulogger-server/./node_modules/ol/control/Attribution.js","webpack://ulogger-server/./node_modules/ol/interaction/Property.js","webpack://ulogger-server/./node_modules/ol/interaction/Interaction.js","webpack://ulogger-server/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/Pointer.js","webpack://ulogger-server/./node_modules/ol/events/condition.js","webpack://ulogger-server/./node_modules/ol/interaction/DragPan.js","webpack://ulogger-server/./node_modules/ol/interaction/DragRotate.js","webpack://ulogger-server/./node_modules/ol/render/Box.js","webpack://ulogger-server/./node_modules/ol/interaction/DragBox.js","webpack://ulogger-server/./node_modules/ol/interaction/DragZoom.js","webpack://ulogger-server/./node_modules/ol/events/KeyCode.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardPan.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ulogger-server/./node_modules/ol/Kinetic.js","webpack://ulogger-server/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchRotate.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchZoom.js","webpack://ulogger-server/./node_modules/ol/Map.js","webpack://ulogger-server/./node_modules/ol/control/defaults.js","webpack://ulogger-server/./node_modules/ol/interaction/defaults.js","webpack://ulogger-server/./node_modules/ol/Tile.js","webpack://ulogger-server/./node_modules/ol/ImageTile.js","webpack://ulogger-server/./node_modules/ol/reproj/Triangulation.js","webpack://ulogger-server/./node_modules/ol/reproj.js","webpack://ulogger-server/./node_modules/ol/reproj/Tile.js","webpack://ulogger-server/./node_modules/ol/reproj/common.js","webpack://ulogger-server/./node_modules/ol/structs/LRUCache.js","webpack://ulogger-server/./node_modules/ol/tilecoord.js","webpack://ulogger-server/./node_modules/ol/TileCache.js","webpack://ulogger-server/./node_modules/ol/source/TileEventType.js","webpack://ulogger-server/./node_modules/ol/source/Source.js","webpack://ulogger-server/./node_modules/ol/TileRange.js","webpack://ulogger-server/./node_modules/ol/tilegrid/TileGrid.js","webpack://ulogger-server/./node_modules/ol/tilegrid.js","webpack://ulogger-server/./node_modules/ol/source/Tile.js","webpack://ulogger-server/./node_modules/ol/tileurlfunction.js","webpack://ulogger-server/./node_modules/ol/source/UrlTile.js","webpack://ulogger-server/./node_modules/ol/source/TileImage.js","webpack://ulogger-server/./node_modules/ol/source/XYZ.js","webpack://ulogger-server/./node_modules/ol/source/OSM.js","webpack://ulogger-server/./node_modules/ol/Overlay.js","webpack://ulogger-server/./node_modules/ol/style/Stroke.js","webpack://ulogger-server/./node_modules/ol/colorlike.js","webpack://ulogger-server/./node_modules/ol/style/RegularShape.js","webpack://ulogger-server/./node_modules/ol/style/Circle.js","webpack://ulogger-server/./node_modules/ol/style/Fill.js","webpack://ulogger-server/./node_modules/ol/style/Style.js","webpack://ulogger-server/./node_modules/ol/layer/TileProperty.js","webpack://ulogger-server/./node_modules/ol/layer/BaseTile.js","webpack://ulogger-server/./node_modules/ol/renderer/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ulogger-server/./node_modules/ol/layer/Tile.js","webpack://ulogger-server/./node_modules/ol/structs/RBush.js","webpack://ulogger-server/./node_modules/ol/source/VectorEventType.js","webpack://ulogger-server/./node_modules/ol/loadingstrategy.js","webpack://ulogger-server/./node_modules/ol/featureloader.js","webpack://ulogger-server/./node_modules/ol/source/Vector.js","webpack://ulogger-server/./node_modules/ol/style/Text.js","webpack://ulogger-server/./node_modules/ol/style/flat.js","webpack://ulogger-server/./node_modules/ol/layer/BaseVector.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Instruction.js","webpack://ulogger-server/./node_modules/ol/render/VectorContext.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Builder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ulogger-server/./node_modules/ol/geom/flat/linechunk.js","webpack://ulogger-server/./node_modules/ol/geom/flat/straightchunk.js","webpack://ulogger-server/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ulogger-server/./node_modules/ol/geom/flat/textpath.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Executor.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Immediate.js","webpack://ulogger-server/./node_modules/ol/render/canvas/hitdetect.js","webpack://ulogger-server/./node_modules/ol/renderer/vector.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ulogger-server/./js/src/lib/ol.js","webpack://ulogger-server/./node_modules/ol/layer/Vector.js","webpack://ulogger-server/./node_modules/rbush/rbush.min.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.3.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height were given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale = this.getScale();\n    scale = Array.isArray(scale) ? scale.slice() : scale;\n    // if either width or height are defined, do not pass scale.\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      scale = undefined;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateAndExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateAndExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible in the given view, i.e. within its min/max resolution or zoom and\n   * extent, and `getVisible()` is `true`.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or {@link import(\"../Map.js\").FrameState}.\n   * @return {boolean} The layer is visible in the current view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    const layerExtent = this.getExtent();\n    return (\n      this.getVisible() &&\n      inView(this.getLayerState(), frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or  {@link import(\"../Map.js\").FrameState}.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateAndExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateAndExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available\n * when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Control, Rotate, ScaleLine, Zoom, ZoomToExtent } from 'ol/control';\nimport { LineString, Point } from 'ol/geom';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Icon from 'ol/style/Icon';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport Overlay from 'ol/Overlay';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport TileLayer from 'ol/layer/Tile';\nimport Vector from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport View from 'ol/View';\nimport XYZ from 'ol/source/XYZ';\nimport { containsCoordinate } from 'ol/extent.js';\n\nexport { Feature, Map, Overlay, View };\nexport const control = { Control, Rotate, ScaleLine, Zoom, ZoomToExtent };\nexport const extent = { containsCoordinate };\nexport const geom = { LineString, Point };\nexport const layer = { TileLayer, VectorLayer };\nexport const proj = { fromLonLat, toLonLat };\nexport const source = { OSM, Vector, XYZ };\nexport const style = { Icon, Stroke, Style };\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n"],"names":["constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","clear","object","property","isEmpty","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","apply","arguments","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","prototype","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","options","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","BaseObject","pointerEvents","target_","map_","listenerKeys","render","setTarget","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","size","weight","variant","families","family","split","easeIn","t","Math","pow","easeOut","inAndOut","linear","Control","className","label","compassClassName","label_","textContent","classList","add","tipLabel","button","setAttribute","title","handleClick_","cssClasses","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","rotation","getRotation","PI","animate","easing","setRotation","frameState","viewState","transform","contains","remove","METERS_PER_UNIT","code_","code","units_","units","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","slice","y","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","messages","AssertionError","message","name","assert","assertion","errorCode","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","extendFlatCoordinates","flatCoordinates","offset","stride","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","worldWidth","floor","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","round","ceil","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","getWorldsAway","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","levels","info","warn","none","level","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","updateElement_","setDpi","display","pointResolutionUnits","nominalCount","suffix","metersPerDegree","count","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","isNaN","html","createScaleBar","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","position","isLast","lengthString","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","c","d","e","f","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","transformStringDiv","toString","transformString","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","Geometry","createOrUpdateFromFlatCoordinates","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","createOrUpdateFromCoordinate","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","handleZoomToExtent","fitInternal","polygonFromExtent","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","createStyleFunction","setId","id","IDLE","LOADING","LOADED","EMPTY","hasArea","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","Number","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","shared","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","then","catch","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","isTainted_","ImageState","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","origin_","width_","height_","updateScaleFromWidthAndHeight","setAnchor","getColor","iconImageSize","setWidth","setHeight","widthScale","heightScale","Property","CollectionEvent","array","unique_","unique","array_","assertUnique_","updateLength_","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","background_","background","LayerProperty","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","state_","getBackground","getClassName","getLayerState","managed","state","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","var_args","isDef","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","inView","layerState","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","View","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","inversePixelTransform","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","left","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","restore","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Collection","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","LAYERGROUP","SIZE","TARGET","VIEW","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","expandClassName","collapseLabel","collapseClassName","collapseLabel_","activeLabel","toggleButton_","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","zoomByDelta","setActive","getActive","InteractionProperty","mapBrowserEvent","active","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","Layer","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","Tile","tileLoadFunction","tileLoadFunction_","setImage","getBlankImage","naturalWidth","naturalHeight","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","strokeStyle","lineWidth","stroke","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","LRUCache","pruneExceptNewestZ","fromKey","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","getInterpolate","refresh","setAttributions","TileRange","containsTileRange","tileRange","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","half","TileSourceEvent","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","withinExtentAndZ","updateCacheSize","tileCount","useTile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","expandUrl","defaultTileLoadFunction","imageTile","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","asColorLike","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","CircleStyle","setRadius","Fill","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","defaultStyles","createDefaultStyle","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","LayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","toTransformString","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","BaseTileLayer","CanvasTileLayerRenderer","maxEntries","rbush_","RBush_","items_","insert","extents","items","getAll","getInExtent","bbox","search","forEach_","forEachInExtent","toJSON","concat","rbush","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","RBush","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","styleFunction","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","p","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","builderTypes","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","getGeometries","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","clipped","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","getSquaredRenderTolerance","dirty","replayGroupInstructions","ExecutorGroup","ScaleLine","ZoomToExtent","geom","TileLayer","VectorLayer","BaseVectorLayer","CanvasVectorLayerRenderer","fromLonLat","toLonLat","lonLat","lon","OSM","Vector","module","exports","u","_maxEntries","_minEntries","leaf","_all","toBBox","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin"],"sourceRoot":""}